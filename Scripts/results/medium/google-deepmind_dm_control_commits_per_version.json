{
    "google-deepmind/dm_control": {
        "1.0.28": [
            "Rename \"facetexcoord\" to \"elemtexcoord\" in mjsFlex element for consistency.\n\nPiperOrigin-RevId: 734153759\nChange-Id: I63e9b09067ccbe846059d0d59392fb3a2e70e582",
            "Move image flipping to render context base class.\n\nPiperOrigin-RevId: 734072160\nChange-Id: I8735d9619f3a344a9eef607ef2423c6b1b1c9b4a",
            "Bump version number to 1.0.28 following MuJoCo  v3.3.0 release\n\nPiperOrigin-RevId: 733882012\nChange-Id: I0eda80a2965bc48091aebbe014f3da8bd93d15b9",
            "Update test image golden files for new MuJoCo version.\n\nPiperOrigin-RevId: 733731748\nChange-Id: I5fe004141ed7702fa26e305232229a47186d5147",
            "Copy texture coordinates from OBJ into flex. Fixes #2464.\n\nPiperOrigin-RevId: 732109960\nChange-Id: I53438aaa1df763a28a3a401418c41782216ca5d7",
            "Set nativeccd as default.\n\nPiperOrigin-RevId: 731343200\nChange-Id: If51a6ed9c65c4e0ccc322f904a734ab1d2c191b5",
            "Improve composite docs and changelog.\n\nPiperOrigin-RevId: 730394496\nChange-Id: I522cddfc14cc9ad4c06a6efea39eb5d77d0ed9ac",
            "Remove the particle composite (replaced by `replicate`).\n\nPiperOrigin-RevId: 730089997\nChange-Id: I4d4da8f934cf32b4a93181ae6e0d5c49a41e3dad",
            "fix schema for meshes with shell inertia\n\nPiperOrigin-RevId: 727815469\nChange-Id: Ib701334e35fffdd03cf2e71761797323d15e372c",
            "Changes to inertia inference from meshes.\n\nPiperOrigin-RevId: 726051033\nChange-Id: I7fb72d65f602815539c0e379ae3ae76f15738f0d",
            "Introduce trilinear flex parametrization.\n\nThese flexes use only 24 DOFs (3 per vertex of the bounding box), while colliding with the full high resolution mesh.\n\nOn an 8x8x8 cube, the performance using DOFs at all vertices is\n\n```\n Simulation time      : 18.74 s\n Steps per second     : 533\n Realtime factor      : 0.53 x\n Time per step        : 1874.4 \u00b5s\n\n Contacts per step    : 114.88\n Constraints per step : 3322.51\n Degrees of freedom   : 1536\n```\n\nWith the new implementation, it is the following:\n\n```\n Simulation time      : 1.82 s\n Steps per second     : 5507\n Realtime factor      : 5.51 x\n Time per step        : 181.6 \u00b5s\n\n Contacts per step    : 38.84\n Constraints per step : 155.36\n Degrees of freedom   : 24\n```\n\nPiperOrigin-RevId: 721008829\nChange-Id: I5266c4166f1abff7e681646c73da5579e859bff2",
            "Fix typo in the documentation.\n\nPiperOrigin-RevId: 719876345\nChange-Id: I5d489b733cba439b402d177118509e29ecca1f4d",
            "Add `QuatRotate` variation and use `dm_control.utils.transformations` for calcs.\n\nPiperOrigin-RevId: 719432052\nChange-Id: I17cfbe510532b6b97212bd1c5ae87f5aa204ee78",
            "Throw EpisodeInitializationError instead of raw RuntimeError when prop initializer fails.\n\nThe more specific error allows callers to catch it if need be. Existing code should continue to work because EpisodeInitializationError is a subclass of RuntimeError.\n\nPiperOrigin-RevId: 718344531\nChange-Id: I344dd518dab878b36e9a99cd0f4ea3ca4fffcf2a",
            "Free the Physics object when Environment.close is called.\n\nMake physics.free() idempotent since sometimes it's called by __del__ functions.\n\nPiperOrigin-RevId: 717526328\nChange-Id: I1df3c0141cf0d5440420ee48f805a8a71580bb13",
            "Add sensors for potential and kinetic energy.\n\nPiperOrigin-RevId: 716775375\nChange-Id: I012c75686e76af17db0ba97e5b01bd207e1570b1",
            "Fix schema definition of `springlength`, fixes #508\n\nPiperOrigin-RevId: 716236616\nChange-Id: I0a37fc0737ff577bab870b0fe0a6652236ac4fce",
            "Bump version number to 1.0.27 following the MuJoCo v3.2.27 release.\n\nPiperOrigin-RevId: 715830051\nChange-Id: I926b9da8b824f70e1c2115016683ac2c60be9bb1",
            "Auto-generate 3D mesh from convex OBJ if dim=3 in flex.\n\nThis requires the user to explicitly specify an origin.\n\nPiperOrigin-RevId: 712483526\nChange-Id: If92effcc9bd43ae8b12318044b022965076e02f8",
            "Add \"camprojection\" sensor to schema.xml\n\nPiperOrigin-RevId: 706715673\nChange-Id: I7596dfa23355e249ce6e7e9ffebe70dc1509d0b3",
            "Bump version number to 1.0.26 following the MuJoCo 3.2.6 release.\n\nPiperOrigin-RevId: 702444288\nChange-Id: I849256b85f62e63572a121925683c27818453ff5",
            "Add `mjv_copyModel` to copy `mjModel`, skipping large arrays not required for abstract visualization.\n\nThis functionality is meant for fast copying of `mjModel` when synchronizing the visualization state, as in the Python passive viewer.\n\nPiperOrigin-RevId: 699199743\nChange-Id: Idb71dbf8702c5445626a779d6972e4f2d5d85f63",
            "Move layer element to the right place (from texture to material).\n\nPiperOrigin-RevId: 698497943\nChange-Id: Ic693eec8aa9542a6eb628e17c40781b01b1a658a",
            "Automated Code Change\n\nPiperOrigin-RevId: 696531837\nChange-Id: I95873cbf3a29a8f925c67af76b69fb56dbbec079",
            "Update dm_control to v1.0.25 following the MuJoCo v3.2.5 release.\n\nAlso update to new minor versions for packages with updates.\nPython requirement set to 3.10 due to scipy update.\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 693379887\nChange-Id: I67431d4c687d3408d0fda33685ac1b19a3310d54",
            "Remove box, cylinder and ellipsoid composite types.\n\nAlso, fix a bug with Flex textures that was causing an incorrect allocation of the textures in mjModel. Fixes #2013.\n\nPiperOrigin-RevId: 692510858\nChange-Id: I3d9cba72d32792554f47f617b3528d26a9a33830",
            "Don't use `actuator_moment` in `lqr_solver.py`\n\nPiperOrigin-RevId: 692141608\nChange-Id: I852624640304be8211d07a52dcf7f3aa7c92a29f",
            "Add ability to set references with numpy unicode strings. This allows us directly to use `distributions.UniformChoice(material_names)` to randomize over materials of a geom.\n\nPiperOrigin-RevId: 690640836\nChange-Id: I140fa86b22d5a0571fc8777f6c222dceddecaf81",
            "Remove deprecated mjv_makeConnector function.\n\nPiperOrigin-RevId: 690563333\nChange-Id: I203b2742d3e12d30e968516ecd2c9a4784dd1caf",
            "Remove the `convexhull` compiler option.\n\nPiperOrigin-RevId: 690307675\nChange-Id: Ic0a7e4f96a99fc9159c4e8c39e9220638b400452",
            "Refactor PBR texture layers from separate sub-elements to a single layer sub-element.\n\nAdd new element to PyMJCF schema.\n\nPiperOrigin-RevId: 690115286\nChange-Id: I016cb7624f93f8a80c7ed6191655b1b8432ef128",
            "Reset physics time after settling physics in PropPlacer.\n\nBefore this change, physics.data.time would be nonzero when PropPlacer is used with settle_physics=True, leading to episodes of variable length when a time limit is set.\n\nPiperOrigin-RevId: 689823887\nChange-Id: Ie759cb8331906b224b635ed3321f7dd2216dc90b",
            "Allow conflict and set associated behaviour for `zfar` and `znear`.\n\nPiperOrigin-RevId: 689316663\nChange-Id: Ibb06a101249eb03f154162013beeb2fe2b124205",
            "Rename exactmeshinertia to inertia in mjcf schema.\n\nPiperOrigin-RevId: 689020995\nChange-Id: Ibd02d333064f9ff93b21e594e81e552545d174cb",
            "Move mesh inertia specification from global <compiler> to <asset/mesh>.\n\nThree options:\n- Convex: Use convex hull\n- Exact: Use exact geometry (requires watertight mesh)\n- Legacy: Legacy approximation (deprecated)\n\nFixes #2152\n\nPiperOrigin-RevId: 688949900\nChange-Id: I5f0e22e082af4fe554bcf2e544ccd4a81a71e15c",
            "Update dm_control to v1.0.24 following the MuJoCo v3.2.4 release.\n\nAlso update to new minoir versions for packages with updates\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 686837320\nChange-Id: If747e72c0e0e9dfd44a2ff41ff3dbd615f95b8ff",
            "dm_control: Import of refs/pull/496/head\n\nPiperOrigin-RevId: 686468082\nChange-Id: I5f16943624183b578c1672b408430f66083ba61c",
            "Remove support for Python 3.8 from dm_control.\n\nPython 3.8 has been deprecated upstream, and any tests depending on Homebrew already stopped working. Following our support policy, we are removing support for 3.8 from our packages, too.\n\nPiperOrigin-RevId: 686036245\nChange-Id: I2f7433aac26f9c9fe3c9a2f1f57d88e67857fc9c",
            "Fix invalid model in randomizers_test.py.\n\nPiperOrigin-RevId: 685665899\nChange-Id: If962c4dce9ced4fb6d33c3c75a3faf401d21421e",
            "Variation broadcaster that allows a variation to be broadcasted to multiple callers.\n\nPiperOrigin-RevId: 683243432\nChange-Id: I6ed10e3cb14a39fa5d82886d6dab9faa0ce634d9",
            "Add flex elasticity to the MJCF schema.\n\nPiperOrigin-RevId: 680624795\nChange-Id: I929aa310bd9deba5cd481c6140ef74dbd3c276dd",
            "Update option/flag in mjcf/schema.xml\n\nPiperOrigin-RevId: 679130586\nChange-Id: Ia768c9f6bb9877df8185b6dbd06a15d434673541",
            "Update schema.xml to include `maxhullvert`\n\nPiperOrigin-RevId: 679103430\nChange-Id: Idc92ff762092c24d7af17f82f617a6c707293a82",
            "Update dm_control to version 1.0.23.\n\nThis includes a MuJoCo upgrade to version 3.2.3.\n\nPiperOrigin-RevId: 675965003\nChange-Id: I474c5fb81eb07d15106a0148f8ad2a9276988cef",
            "Add site semantics to weld constraint. Fixes #1896\n\nPiperOrigin-RevId: 675112981\nChange-Id: I435da874097f1b0399af25f0da6841826706fd4d",
            "fix: Added \"actuatorgravcomp\" to schema.xml\n\nPiperOrigin-RevId: 673294638\nChange-Id: Ic92b419097be1449b5a173fe8978897e13a31bb9",
            "Add compiler/alignfree and freejoint/align attributes to the mjcf schema.\n\nPiperOrigin-RevId: 671359012\nChange-Id: I0cd52997faa325c6aec35085d2d088767ca255c9",
            "Remove name attribute from most plugin tags in dm_control.\n\nFixes #450.\n\nPiperOrigin-RevId: 670217358\nChange-Id: Ia6bec45391951bfeddd05f0cf00c16ceb0205943",
            "Allow connect constraints to be specified using sites.\n\nPiperOrigin-RevId: 668925419\nChange-Id: I13fe05b77d549086024f0d42d50a3f0a6a513aa8",
            "dm_control: Import of refs/pull/492/head\n\nPiperOrigin-RevId: 668504806\nChange-Id: Iaa8e3b94fe2c8b379b67b0f2ed1b29764a937554",
            "dm_control: Import of refs/pull/490/head\n\nPiperOrigin-RevId: 668435686\nChange-Id: I15b7a1c96e5f56f9c4479c03244a74a4c2121047",
            "Rename mpr_tolerance and mpr_iterations to ccd_tolerance and ccd_iterations.\n\nPiperOrigin-RevId: 666438658\nChange-Id: I32a3732c0ac34aae764c9bb6151dc90406e8b420",
            "Fix a couple of tests that break under numpy>=2.0.\n\nSome attributes of np.ndarray were deprecated and shouldn't be accessed.\n\nPiperOrigin-RevId: 665798008\nChange-Id: I80e965ca39cb4c8fb1eb8362cdd665b34755dcd9",
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.26": [
            "Bump version number to 1.0.26 following the MuJoCo 3.2.6 release.\n\nPiperOrigin-RevId: 702444288\nChange-Id: I849256b85f62e63572a121925683c27818453ff5",
            "Add `mjv_copyModel` to copy `mjModel`, skipping large arrays not required for abstract visualization.\n\nThis functionality is meant for fast copying of `mjModel` when synchronizing the visualization state, as in the Python passive viewer.\n\nPiperOrigin-RevId: 699199743\nChange-Id: Idb71dbf8702c5445626a779d6972e4f2d5d85f63",
            "Move layer element to the right place (from texture to material).\n\nPiperOrigin-RevId: 698497943\nChange-Id: Ic693eec8aa9542a6eb628e17c40781b01b1a658a",
            "Automated Code Change\n\nPiperOrigin-RevId: 696531837\nChange-Id: I95873cbf3a29a8f925c67af76b69fb56dbbec079",
            "Update dm_control to v1.0.25 following the MuJoCo v3.2.5 release.\n\nAlso update to new minor versions for packages with updates.\nPython requirement set to 3.10 due to scipy update.\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 693379887\nChange-Id: I67431d4c687d3408d0fda33685ac1b19a3310d54",
            "Remove box, cylinder and ellipsoid composite types.\n\nAlso, fix a bug with Flex textures that was causing an incorrect allocation of the textures in mjModel. Fixes #2013.\n\nPiperOrigin-RevId: 692510858\nChange-Id: I3d9cba72d32792554f47f617b3528d26a9a33830",
            "Don't use `actuator_moment` in `lqr_solver.py`\n\nPiperOrigin-RevId: 692141608\nChange-Id: I852624640304be8211d07a52dcf7f3aa7c92a29f",
            "Add ability to set references with numpy unicode strings. This allows us directly to use `distributions.UniformChoice(material_names)` to randomize over materials of a geom.\n\nPiperOrigin-RevId: 690640836\nChange-Id: I140fa86b22d5a0571fc8777f6c222dceddecaf81",
            "Remove deprecated mjv_makeConnector function.\n\nPiperOrigin-RevId: 690563333\nChange-Id: I203b2742d3e12d30e968516ecd2c9a4784dd1caf",
            "Remove the `convexhull` compiler option.\n\nPiperOrigin-RevId: 690307675\nChange-Id: Ic0a7e4f96a99fc9159c4e8c39e9220638b400452",
            "Refactor PBR texture layers from separate sub-elements to a single layer sub-element.\n\nAdd new element to PyMJCF schema.\n\nPiperOrigin-RevId: 690115286\nChange-Id: I016cb7624f93f8a80c7ed6191655b1b8432ef128",
            "Reset physics time after settling physics in PropPlacer.\n\nBefore this change, physics.data.time would be nonzero when PropPlacer is used with settle_physics=True, leading to episodes of variable length when a time limit is set.\n\nPiperOrigin-RevId: 689823887\nChange-Id: Ie759cb8331906b224b635ed3321f7dd2216dc90b",
            "Allow conflict and set associated behaviour for `zfar` and `znear`.\n\nPiperOrigin-RevId: 689316663\nChange-Id: Ibb06a101249eb03f154162013beeb2fe2b124205",
            "Rename exactmeshinertia to inertia in mjcf schema.\n\nPiperOrigin-RevId: 689020995\nChange-Id: Ibd02d333064f9ff93b21e594e81e552545d174cb",
            "Move mesh inertia specification from global <compiler> to <asset/mesh>.\n\nThree options:\n- Convex: Use convex hull\n- Exact: Use exact geometry (requires watertight mesh)\n- Legacy: Legacy approximation (deprecated)\n\nFixes #2152\n\nPiperOrigin-RevId: 688949900\nChange-Id: I5f0e22e082af4fe554bcf2e544ccd4a81a71e15c",
            "Update dm_control to v1.0.24 following the MuJoCo v3.2.4 release.\n\nAlso update to new minoir versions for packages with updates\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 686837320\nChange-Id: If747e72c0e0e9dfd44a2ff41ff3dbd615f95b8ff",
            "dm_control: Import of refs/pull/496/head\n\nPiperOrigin-RevId: 686468082\nChange-Id: I5f16943624183b578c1672b408430f66083ba61c",
            "Remove support for Python 3.8 from dm_control.\n\nPython 3.8 has been deprecated upstream, and any tests depending on Homebrew already stopped working. Following our support policy, we are removing support for 3.8 from our packages, too.\n\nPiperOrigin-RevId: 686036245\nChange-Id: I2f7433aac26f9c9fe3c9a2f1f57d88e67857fc9c",
            "Fix invalid model in randomizers_test.py.\n\nPiperOrigin-RevId: 685665899\nChange-Id: If962c4dce9ced4fb6d33c3c75a3faf401d21421e",
            "Variation broadcaster that allows a variation to be broadcasted to multiple callers.\n\nPiperOrigin-RevId: 683243432\nChange-Id: I6ed10e3cb14a39fa5d82886d6dab9faa0ce634d9",
            "Add flex elasticity to the MJCF schema.\n\nPiperOrigin-RevId: 680624795\nChange-Id: I929aa310bd9deba5cd481c6140ef74dbd3c276dd",
            "Update option/flag in mjcf/schema.xml\n\nPiperOrigin-RevId: 679130586\nChange-Id: Ia768c9f6bb9877df8185b6dbd06a15d434673541",
            "Update schema.xml to include `maxhullvert`\n\nPiperOrigin-RevId: 679103430\nChange-Id: Idc92ff762092c24d7af17f82f617a6c707293a82",
            "Update dm_control to version 1.0.23.\n\nThis includes a MuJoCo upgrade to version 3.2.3.\n\nPiperOrigin-RevId: 675965003\nChange-Id: I474c5fb81eb07d15106a0148f8ad2a9276988cef",
            "Add site semantics to weld constraint. Fixes #1896\n\nPiperOrigin-RevId: 675112981\nChange-Id: I435da874097f1b0399af25f0da6841826706fd4d",
            "fix: Added \"actuatorgravcomp\" to schema.xml\n\nPiperOrigin-RevId: 673294638\nChange-Id: Ic92b419097be1449b5a173fe8978897e13a31bb9",
            "Add compiler/alignfree and freejoint/align attributes to the mjcf schema.\n\nPiperOrigin-RevId: 671359012\nChange-Id: I0cd52997faa325c6aec35085d2d088767ca255c9",
            "Remove name attribute from most plugin tags in dm_control.\n\nFixes #450.\n\nPiperOrigin-RevId: 670217358\nChange-Id: Ia6bec45391951bfeddd05f0cf00c16ceb0205943",
            "Allow connect constraints to be specified using sites.\n\nPiperOrigin-RevId: 668925419\nChange-Id: I13fe05b77d549086024f0d42d50a3f0a6a513aa8",
            "dm_control: Import of refs/pull/492/head\n\nPiperOrigin-RevId: 668504806\nChange-Id: Iaa8e3b94fe2c8b379b67b0f2ed1b29764a937554",
            "dm_control: Import of refs/pull/490/head\n\nPiperOrigin-RevId: 668435686\nChange-Id: I15b7a1c96e5f56f9c4479c03244a74a4c2121047",
            "Rename mpr_tolerance and mpr_iterations to ccd_tolerance and ccd_iterations.\n\nPiperOrigin-RevId: 666438658\nChange-Id: I32a3732c0ac34aae764c9bb6151dc90406e8b420",
            "Fix a couple of tests that break under numpy>=2.0.\n\nSome attributes of np.ndarray were deprecated and shouldn't be accessed.\n\nPiperOrigin-RevId: 665798008\nChange-Id: I80e965ca39cb4c8fb1eb8362cdd665b34755dcd9",
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.25": [
            "Update dm_control to v1.0.25 following the MuJoCo v3.2.5 release.\n\nAlso update to new minor versions for packages with updates.\nPython requirement set to 3.10 due to scipy update.\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 693379887\nChange-Id: I67431d4c687d3408d0fda33685ac1b19a3310d54",
            "Remove box, cylinder and ellipsoid composite types.\n\nAlso, fix a bug with Flex textures that was causing an incorrect allocation of the textures in mjModel. Fixes #2013.\n\nPiperOrigin-RevId: 692510858\nChange-Id: I3d9cba72d32792554f47f617b3528d26a9a33830",
            "Don't use `actuator_moment` in `lqr_solver.py`\n\nPiperOrigin-RevId: 692141608\nChange-Id: I852624640304be8211d07a52dcf7f3aa7c92a29f",
            "Add ability to set references with numpy unicode strings. This allows us directly to use `distributions.UniformChoice(material_names)` to randomize over materials of a geom.\n\nPiperOrigin-RevId: 690640836\nChange-Id: I140fa86b22d5a0571fc8777f6c222dceddecaf81",
            "Remove deprecated mjv_makeConnector function.\n\nPiperOrigin-RevId: 690563333\nChange-Id: I203b2742d3e12d30e968516ecd2c9a4784dd1caf",
            "Remove the `convexhull` compiler option.\n\nPiperOrigin-RevId: 690307675\nChange-Id: Ic0a7e4f96a99fc9159c4e8c39e9220638b400452",
            "Refactor PBR texture layers from separate sub-elements to a single layer sub-element.\n\nAdd new element to PyMJCF schema.\n\nPiperOrigin-RevId: 690115286\nChange-Id: I016cb7624f93f8a80c7ed6191655b1b8432ef128",
            "Reset physics time after settling physics in PropPlacer.\n\nBefore this change, physics.data.time would be nonzero when PropPlacer is used with settle_physics=True, leading to episodes of variable length when a time limit is set.\n\nPiperOrigin-RevId: 689823887\nChange-Id: Ie759cb8331906b224b635ed3321f7dd2216dc90b",
            "Allow conflict and set associated behaviour for `zfar` and `znear`.\n\nPiperOrigin-RevId: 689316663\nChange-Id: Ibb06a101249eb03f154162013beeb2fe2b124205",
            "Rename exactmeshinertia to inertia in mjcf schema.\n\nPiperOrigin-RevId: 689020995\nChange-Id: Ibd02d333064f9ff93b21e594e81e552545d174cb",
            "Move mesh inertia specification from global <compiler> to <asset/mesh>.\n\nThree options:\n- Convex: Use convex hull\n- Exact: Use exact geometry (requires watertight mesh)\n- Legacy: Legacy approximation (deprecated)\n\nFixes #2152\n\nPiperOrigin-RevId: 688949900\nChange-Id: I5f0e22e082af4fe554bcf2e544ccd4a81a71e15c",
            "Update dm_control to v1.0.24 following the MuJoCo v3.2.4 release.\n\nAlso update to new minoir versions for packages with updates\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 686837320\nChange-Id: If747e72c0e0e9dfd44a2ff41ff3dbd615f95b8ff",
            "dm_control: Import of refs/pull/496/head\n\nPiperOrigin-RevId: 686468082\nChange-Id: I5f16943624183b578c1672b408430f66083ba61c",
            "Remove support for Python 3.8 from dm_control.\n\nPython 3.8 has been deprecated upstream, and any tests depending on Homebrew already stopped working. Following our support policy, we are removing support for 3.8 from our packages, too.\n\nPiperOrigin-RevId: 686036245\nChange-Id: I2f7433aac26f9c9fe3c9a2f1f57d88e67857fc9c",
            "Fix invalid model in randomizers_test.py.\n\nPiperOrigin-RevId: 685665899\nChange-Id: If962c4dce9ced4fb6d33c3c75a3faf401d21421e",
            "Variation broadcaster that allows a variation to be broadcasted to multiple callers.\n\nPiperOrigin-RevId: 683243432\nChange-Id: I6ed10e3cb14a39fa5d82886d6dab9faa0ce634d9",
            "Add flex elasticity to the MJCF schema.\n\nPiperOrigin-RevId: 680624795\nChange-Id: I929aa310bd9deba5cd481c6140ef74dbd3c276dd",
            "Update option/flag in mjcf/schema.xml\n\nPiperOrigin-RevId: 679130586\nChange-Id: Ia768c9f6bb9877df8185b6dbd06a15d434673541",
            "Update schema.xml to include `maxhullvert`\n\nPiperOrigin-RevId: 679103430\nChange-Id: Idc92ff762092c24d7af17f82f617a6c707293a82",
            "Update dm_control to version 1.0.23.\n\nThis includes a MuJoCo upgrade to version 3.2.3.\n\nPiperOrigin-RevId: 675965003\nChange-Id: I474c5fb81eb07d15106a0148f8ad2a9276988cef",
            "Add site semantics to weld constraint. Fixes #1896\n\nPiperOrigin-RevId: 675112981\nChange-Id: I435da874097f1b0399af25f0da6841826706fd4d",
            "fix: Added \"actuatorgravcomp\" to schema.xml\n\nPiperOrigin-RevId: 673294638\nChange-Id: Ic92b419097be1449b5a173fe8978897e13a31bb9",
            "Add compiler/alignfree and freejoint/align attributes to the mjcf schema.\n\nPiperOrigin-RevId: 671359012\nChange-Id: I0cd52997faa325c6aec35085d2d088767ca255c9",
            "Remove name attribute from most plugin tags in dm_control.\n\nFixes #450.\n\nPiperOrigin-RevId: 670217358\nChange-Id: Ia6bec45391951bfeddd05f0cf00c16ceb0205943",
            "Allow connect constraints to be specified using sites.\n\nPiperOrigin-RevId: 668925419\nChange-Id: I13fe05b77d549086024f0d42d50a3f0a6a513aa8",
            "dm_control: Import of refs/pull/492/head\n\nPiperOrigin-RevId: 668504806\nChange-Id: Iaa8e3b94fe2c8b379b67b0f2ed1b29764a937554",
            "dm_control: Import of refs/pull/490/head\n\nPiperOrigin-RevId: 668435686\nChange-Id: I15b7a1c96e5f56f9c4479c03244a74a4c2121047",
            "Rename mpr_tolerance and mpr_iterations to ccd_tolerance and ccd_iterations.\n\nPiperOrigin-RevId: 666438658\nChange-Id: I32a3732c0ac34aae764c9bb6151dc90406e8b420",
            "Fix a couple of tests that break under numpy>=2.0.\n\nSome attributes of np.ndarray were deprecated and shouldn't be accessed.\n\nPiperOrigin-RevId: 665798008\nChange-Id: I80e965ca39cb4c8fb1eb8362cdd665b34755dcd9",
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.24": [
            "Update dm_control to v1.0.24 following the MuJoCo v3.2.4 release.\n\nAlso update to new minoir versions for packages with updates\n\nPackages with new major versions, not updated to avoid potential breakages: glfw, numpy, pillow, protobuf\n\nPiperOrigin-RevId: 686837320\nChange-Id: If747e72c0e0e9dfd44a2ff41ff3dbd615f95b8ff",
            "dm_control: Import of refs/pull/496/head\n\nPiperOrigin-RevId: 686468082\nChange-Id: I5f16943624183b578c1672b408430f66083ba61c",
            "Remove support for Python 3.8 from dm_control.\n\nPython 3.8 has been deprecated upstream, and any tests depending on Homebrew already stopped working. Following our support policy, we are removing support for 3.8 from our packages, too.\n\nPiperOrigin-RevId: 686036245\nChange-Id: I2f7433aac26f9c9fe3c9a2f1f57d88e67857fc9c",
            "Fix invalid model in randomizers_test.py.\n\nPiperOrigin-RevId: 685665899\nChange-Id: If962c4dce9ced4fb6d33c3c75a3faf401d21421e",
            "Variation broadcaster that allows a variation to be broadcasted to multiple callers.\n\nPiperOrigin-RevId: 683243432\nChange-Id: I6ed10e3cb14a39fa5d82886d6dab9faa0ce634d9",
            "Add flex elasticity to the MJCF schema.\n\nPiperOrigin-RevId: 680624795\nChange-Id: I929aa310bd9deba5cd481c6140ef74dbd3c276dd",
            "Update option/flag in mjcf/schema.xml\n\nPiperOrigin-RevId: 679130586\nChange-Id: Ia768c9f6bb9877df8185b6dbd06a15d434673541",
            "Update schema.xml to include `maxhullvert`\n\nPiperOrigin-RevId: 679103430\nChange-Id: Idc92ff762092c24d7af17f82f617a6c707293a82",
            "Update dm_control to version 1.0.23.\n\nThis includes a MuJoCo upgrade to version 3.2.3.\n\nPiperOrigin-RevId: 675965003\nChange-Id: I474c5fb81eb07d15106a0148f8ad2a9276988cef",
            "Add site semantics to weld constraint. Fixes #1896\n\nPiperOrigin-RevId: 675112981\nChange-Id: I435da874097f1b0399af25f0da6841826706fd4d",
            "fix: Added \"actuatorgravcomp\" to schema.xml\n\nPiperOrigin-RevId: 673294638\nChange-Id: Ic92b419097be1449b5a173fe8978897e13a31bb9",
            "Add compiler/alignfree and freejoint/align attributes to the mjcf schema.\n\nPiperOrigin-RevId: 671359012\nChange-Id: I0cd52997faa325c6aec35085d2d088767ca255c9",
            "Remove name attribute from most plugin tags in dm_control.\n\nFixes #450.\n\nPiperOrigin-RevId: 670217358\nChange-Id: Ia6bec45391951bfeddd05f0cf00c16ceb0205943",
            "Allow connect constraints to be specified using sites.\n\nPiperOrigin-RevId: 668925419\nChange-Id: I13fe05b77d549086024f0d42d50a3f0a6a513aa8",
            "dm_control: Import of refs/pull/492/head\n\nPiperOrigin-RevId: 668504806\nChange-Id: Iaa8e3b94fe2c8b379b67b0f2ed1b29764a937554",
            "dm_control: Import of refs/pull/490/head\n\nPiperOrigin-RevId: 668435686\nChange-Id: I15b7a1c96e5f56f9c4479c03244a74a4c2121047",
            "Rename mpr_tolerance and mpr_iterations to ccd_tolerance and ccd_iterations.\n\nPiperOrigin-RevId: 666438658\nChange-Id: I32a3732c0ac34aae764c9bb6151dc90406e8b420",
            "Fix a couple of tests that break under numpy>=2.0.\n\nSome attributes of np.ndarray were deprecated and shouldn't be accessed.\n\nPiperOrigin-RevId: 665798008\nChange-Id: I80e965ca39cb4c8fb1eb8362cdd665b34755dcd9",
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.23": [
            "Update dm_control to version 1.0.23.\n\nThis includes a MuJoCo upgrade to version 3.2.3.\n\nPiperOrigin-RevId: 675965003\nChange-Id: I474c5fb81eb07d15106a0148f8ad2a9276988cef",
            "Add site semantics to weld constraint. Fixes #1896\n\nPiperOrigin-RevId: 675112981\nChange-Id: I435da874097f1b0399af25f0da6841826706fd4d",
            "fix: Added \"actuatorgravcomp\" to schema.xml\n\nPiperOrigin-RevId: 673294638\nChange-Id: Ic92b419097be1449b5a173fe8978897e13a31bb9",
            "Add compiler/alignfree and freejoint/align attributes to the mjcf schema.\n\nPiperOrigin-RevId: 671359012\nChange-Id: I0cd52997faa325c6aec35085d2d088767ca255c9",
            "Remove name attribute from most plugin tags in dm_control.\n\nFixes #450.\n\nPiperOrigin-RevId: 670217358\nChange-Id: Ia6bec45391951bfeddd05f0cf00c16ceb0205943",
            "Allow connect constraints to be specified using sites.\n\nPiperOrigin-RevId: 668925419\nChange-Id: I13fe05b77d549086024f0d42d50a3f0a6a513aa8",
            "dm_control: Import of refs/pull/492/head\n\nPiperOrigin-RevId: 668504806\nChange-Id: Iaa8e3b94fe2c8b379b67b0f2ed1b29764a937554",
            "dm_control: Import of refs/pull/490/head\n\nPiperOrigin-RevId: 668435686\nChange-Id: I15b7a1c96e5f56f9c4479c03244a74a4c2121047",
            "Rename mpr_tolerance and mpr_iterations to ccd_tolerance and ccd_iterations.\n\nPiperOrigin-RevId: 666438658\nChange-Id: I32a3732c0ac34aae764c9bb6151dc90406e8b420",
            "Fix a couple of tests that break under numpy>=2.0.\n\nSome attributes of np.ndarray were deprecated and shouldn't be accessed.\n\nPiperOrigin-RevId: 665798008\nChange-Id: I80e965ca39cb4c8fb1eb8362cdd665b34755dcd9",
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.22": [
            "Bump version number to 1.0.22.\n\nPiperOrigin-RevId: 660076043\nChange-Id: I2829e3f287fd492e48c09575c8dd2763bad715e0",
            "dm_control: Import of refs/pull/487/head\n\nPiperOrigin-RevId: 657564508\nChange-Id: I4126748fecfe2c5a81f2e2d9d186e4ec0c26e97b",
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.21": [
            "Allow multiple textures per material in MJCF.\n\nPiperOrigin-RevId: 654795013\nChange-Id: I7a0ba31f6ea19e52ddee51b36df72d3d15e439dd",
            "Bump version number to 1.0.21, update some formatting.\n\nPiperOrigin-RevId: 653288288\nChange-Id: I4bf5f4e191e4d8ddd06febf85d5db0c08c2e7381",
            "dm_control: Import of refs/pull/479/head\n\nPiperOrigin-RevId: 651761196\nChange-Id: I22e498b8f23041ca0c9265794e8c6f6f679dc57b",
            "Explicitly specify actdim on PID plugin actuators, to allow them to be used with keyframes.\n\nSupport actdim attribute on plugin actuators.\n\nRemove the actuator_actdim callback. This callback leads to crashes when loading keyframes for models that have a stateful plugin.\n\nPiperOrigin-RevId: 650649505\nChange-Id: I0171a75927a895b5f1a19f69244a17f2da801bcd",
            "Don't normalize `mjData->qpos` quaternions in-place.\n\nPiperOrigin-RevId: 647927542\nChange-Id: If689bea15a5f076f486563e019031b5b51624e7d",
            "dm_control: Import of refs/pull/476/head\n\nPiperOrigin-RevId: 645030639\nChange-Id: I29445854cd14c7cb7dcdef94754bd3e2cd8e1bf3",
            "Fix type-related issues in dependent code. Remove hardcoded mjUSEDOUBLE. Add mjUSESINGLE compiler flag.\n\nThis CL does not change the default build behavior of MuJoCo. To use single-precision floating-point, build MuJoCo with `-DmjUSESINGLE`.\n\nPiperOrigin-RevId: 644782648\nChange-Id: I031fbc20132f3d348f7dbd2d1cb3dd53aaa5c75e",
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.20": [
            "Bump version number to 1.0.20 for dm_control following mujoco release 3.1.6\n\nPiperOrigin-RevId: 640188376\nChange-Id: I56e212866a9ca78365afd9d206a93028f6c2bbaf",
            "Add `dampratio` attribute to `position` and `intvelocity` elements in the MJCF schema.\n\nPiperOrigin-RevId: 639921961\nChange-Id: Ic1b14055f1807a4369ac6a6af95553a4b71e8115",
            "Add `inheritrange` attribute to schema.\n\nPiperOrigin-RevId: 639350742\nChange-Id: Ia04f2be42053d08c8ec63d6a543deb6a57307b49",
            "Add position actuator's timeconst attribute to PyMJCF schema.\n\nPiperOrigin-RevId: 635187874\nChange-Id: I983b21497d7d464108851fc5aeafc2e37ea91444",
            "dm_control: Import of refs/pull/468/head\n\nPiperOrigin-RevId: 631836013\nChange-Id: I4544185aa0bbd501d9e81db64d253cd2da8382d4",
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.19": [
            "Bump version number to 1.0.19\n\nPiperOrigin-RevId: 631584675\nChange-Id: I6b0eb0e8a89af454946f63ee083c00e2dceb05bc",
            "PyMJCF: Don't replace `'/' -> '\\'` in attributes that may contain filesystem path information.\n\nPiperOrigin-RevId: 631419245\nChange-Id: I317bae0b5b6d6041baaf1ca663cd5628012831a0",
            "dm_control: Import of refs/pull/467/head\n\nPiperOrigin-RevId: 629749867\nChange-Id: I4485cf17f8e10a9d0f6b30a03ce8fe1b13f117f8",
            "Add missing attributes to pymjcf schema.\n\nPiperOrigin-RevId: 629749333\nChange-Id: I343e2e3766079e9379c8faba410dae466d4d5345",
            "dm_control: Import of refs/pull/463/head\n\nPiperOrigin-RevId: 629743418\nChange-Id: I558943d071635fba3ad931381a4b8cb1ebdcac78",
            "Return zip file name after export with assets.\n\nPiperOrigin-RevId: 626975425\nChange-Id: I2fe18df78812bff12ad59cb8f1b3e507da3b55c2",
            "Add `actuatorgravcomp` to schema.\n\nPiperOrigin-RevId: 624058843\nChange-Id: I5eedfda09b0524691fb1eb7f92b1ce26d0bfa90e",
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.18": [
            "Bump version number to 1.0.18 following the MuJoCo 3.1.4 release.\n\nPiperOrigin-RevId: 623832722\nChange-Id: Ifa0cba504ff93c098ab6929b892d567d0e60e476",
            "Update mjcf/schema.xml\n\nFixes #460\n\nPiperOrigin-RevId: 623475339\nChange-Id: I65a41d55aa61c7a96c48dbd836a73a03aeff9bca",
            "Make VFS filename length limit match MuJoCo's.\n\nPiperOrigin-RevId: 620670829\nChange-Id: I597ccd8de0840fa0896fa8d786411dafafedc2a4",
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.17": [
            "Bump version number to 1.0.17.\n\nPiperOrigin-RevId: 620076038\nChange-Id: I1c8769c1f6708f2a1fdd9655288bb42043e406b8",
            "Silence some deprecation warnings from finger.py.\n\nPiperOrigin-RevId: 620038603\nChange-Id: Ib7bf0d712d324f17efdfe3ade053782659570b43",
            "dm_control release for 1.0.7\n\nPiperOrigin-RevId: 619969066\nChange-Id: I07aac593777b7605be6cc35b8f1907a8dc4060cd",
            "Add assetdir functionality to pymjcf.\n\nPiperOrigin-RevId: 618313406\nChange-Id: I24d8e277ad15c284ddd2c6a2e8c7ab53b2392068",
            "internal change\n\nPiperOrigin-RevId: 618004157\nChange-Id: I969d70ca8845c5cde6f2f355e814cc06e8fd6b44",
            "dm_control: Import of refs/pull/452/head\n\nPiperOrigin-RevId: 617984908\nChange-Id: I050298403326dc7e68c83b4d3541a46f2d28b4f8",
            "dm_control: Import of refs/pull/442/head\n\nPiperOrigin-RevId: 617978935\nChange-Id: I566a0a9bdf42b50cce7512f73ba2e678035abcd5",
            "Never return None from Physics.bind.\n\nPhysics.bind used to handle `mjcf_elements == None` by returning None. For clients using type annotations, this made the API annoying, as the None case had to be handled.\n\nAfter this commit, passing None will lead to a crash.\n\nPiperOrigin-RevId: 613142103\nChange-Id: I2ce3a98dddb61400202c5b2cd7fc67810e44c487",
            "Provide a Blender plugin to export models as Mujoco MJCF XML files.\n\nPiperOrigin-RevId: 605639317\nChange-Id: Ieffc76a9fc5a369f4652c526d5a6cf2207392ec1",
            "Provide a Blender plugin to export models as MuJoCo MJCF XML files with assets.\n\nPiperOrigin-RevId: 605634755\nChange-Id: I0d54efe1d83df08a2f51e66da6d9de23f640e58a",
            "Expose CameraMatrices type from dm_control.mujoco.\n\nThis is the return type for Camera.matrices.\n\nPiperOrigin-RevId: 603322176\nChange-Id: I2bc23a1af5e6179b4806ff5c601fd3f944f9897f",
            "Update Pillow dependency of dm_control.\n\nThe dependency is only for dm_control's tests, and shouldn't affect users of dm_control.\n\nPiperOrigin-RevId: 602673831\nChange-Id: I18b68a7e69b1a50c35439d921429af0fc71809a6",
            "Update pymjcf schema to support SDF geoms in worldbody.\n\nPiperOrigin-RevId: 597803513\nChange-Id: I4feb79575f82e0a98fb92c28331cb7f749cf9078",
            "Update EGL init code for Python 3.12.\n\nFixes google-deepmind/mujoco#1299.\n\nPiperOrigin-RevId: 595982512\nChange-Id: I1824f5dd79b24d677772d69aca585ad36d08e2c2",
            "Mark \"count\" attribute on \"composite\" as non-required.\n\nFor cable composites, either vertex or count should be specified.\n\nFixes #439.\n\nPiperOrigin-RevId: 592525932\nChange-Id: I3da34784547df8a8c6064b47b6b8f03d5ce3b9b0",
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.16": [
            "Bump dm_control version to 1.0.16.\n\nDepend on mujoco 3.1.1.\n\nPiperOrigin-RevId: 592172781\nChange-Id: Ieb5c441a56362740500a62c2f7b7809ff7d65607",
            "Internal change\n\nPiperOrigin-RevId: 590893742\nChange-Id: I0e435ffe80c54f83c3b59f40e8f0a33cebcc6886",
            "Add `kv` damping attribute to `position` and `intvelocity` actuator shortcuts.\n\nPiperOrigin-RevId: 588377097\nChange-Id: I07d856807ab95166c02dd90dcd4ed62af4eefd60",
            "dm_control: Import of refs/pull/440/head\n\nPiperOrigin-RevId: 587271240\nChange-Id: I3d11b15a295076a536c73c9919babdbc706b2f3f",
            "Adjust imports to match google-internal code and open source code.\n\nThis is an internal change that will make it easier for us to merge PRs.\n\nPiperOrigin-RevId: 587012500\nChange-Id: Ibdd5c05f3dc61a8fcb954b4559991db0ab4b8c38",
            "Fix a crash in dm_control Python viewer during perturbations.\n\nThe action enum used to be an integer with the old Python bindings, but now it's an enum the NONE action evaluates as true.\n\nPiperOrigin-RevId: 586990491\nChange-Id: I0b366c2c87c9d6bae1f7c8c0aaeec619aa434704",
            "Enable 2 changes to composer environment resets:\n- Don't recompile the mjcf model every episode. This allows us to gain a lot of time in between resets if we are not making any changes to the mjcf model.\n- Have a fixed initial state for every episode. This allows to have repeatable episode if desired.\n\nPiperOrigin-RevId: 585901093\nChange-Id: I9d0b29dc1aba80113b1437ff3fff3f06862923ef",
            "Add new actuator plugin XML attributes to dm_control schema.\n\nPiperOrigin-RevId: 584905702\nChange-Id: I1eac5aea650748243d2ddff536f90a7bbc6fb72b",
            "Add flex to dm_control schema.\n\nPiperOrigin-RevId: 582323853\nChange-Id: I4cdf497b33fe12848cc97734d04f0a5e3844fbdc",
            "Make use of the new MjData.model attribute to avoid unnecessary copies.\n\nPiperOrigin-RevId: 581939935\nChange-Id: I8b5548266580d2dfe63d66070c903a8cd9e305f5",
            "Add sdf test to physics_test\n\nPiperOrigin-RevId: 578139231\nChange-Id: I73f7aee2747190c191829904cf2a7f0b3b77506a",
            "Add missing plugin sections in dm_control schema. Fixes #434.\n\nPiperOrigin-RevId: 577848939\nChange-Id: I4d444a82344f728c752b4ce2348f5bd1adcf3622",
            "Fix flex constraint Jacobian for edges belonging to a single body.\n\nPiperOrigin-RevId: 575161094\nChange-Id: I1b015b2d399c0faf774472a9e9fd2163d610cf55",
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.15": [
            "Bump dm_control version and depend on mujoco 3.0.0.\n\nPiperOrigin-RevId: 574474452\nChange-Id: Id7a9c6767020595cdbeb58dbb46dd9feb3ba2df3",
            "Update dm_control dependencies.\n\nPiperOrigin-RevId: 574281405\nChange-Id: I2bbdf5ea02419c08f42da67b799229a9b2a8cbf7",
            "Add Flex component.\n\nPiperOrigin-RevId: 572830650\nChange-Id: Ia47527e0acdb5760173549014e23d30036ee2971",
            "Update this test, the previous way of mocking makes this test fail on Python 3.11.\n\nPiperOrigin-RevId: 571947232\nChange-Id: I125e0733074bb710492065644e4b37571006cb61",
            "Accelerate inertia computation for simple bodies.\n\nPiperOrigin-RevId: 571411319\nChange-Id: Ib716c26b338eb56e4e9334859cb732aebb5bd0f2",
            "Increase image golden test tolerance.\n\nThis accounts for the difference between swrast and llvmpipe software rendering drivers from Mesa.\n\nPiperOrigin-RevId: 570365527\nChange-Id: I2b4d072c384a7056ba59f6fab6654d2c7310f160",
            "Make fruitfly (v2) walker and model files public.\n\nPiperOrigin-RevId: 569232393\nChange-Id: I811bc6c12bfcf810e9e4ae5e6ef179c718be7b18",
            "Specify camera parameters using standard robotics conventions.\n\nPiperOrigin-RevId: 569147555\nChange-Id: Ide23151f2132c72f7144f0ce3b7b65fa83acfb96",
            "Add jointactuatorfrc to schema.xml\n\nThis was added to MuJoCo in version 2.3.7.\n\nPiperOrigin-RevId: 568951119\nChange-Id: Ie1479f66368078c7ad325d868d04f97086b7b029",
            "Remove `mjOption.collision` and associated `option/collision` attribute.\n\nPiperOrigin-RevId: 566427090\nChange-Id: I5202248661bc3451802c0b936f5892fe966cebb7",
            "Change GitHub org name to `google-deepmind`.\n\nPiperOrigin-RevId: 563512242\nChange-Id: Ie642e092e9deee77ae9da1177af44e104bfc51df",
            "Add options for controlling early termination criteria of CG/Newton linesearch.\n\nUseful for performance tuning models.\n\nPiperOrigin-RevId: 563175078\nChange-Id: I2d5daaf795199325dd144337f1c76a5bae25db8c",
            "Rename `nstack` to `narena`, change it and `pstack` to count bytes.\n\nPiperOrigin-RevId: 561066311\nChange-Id: I8735596c8ceda3f68b5642532dffcac77487bf79",
            "Add constraint island discovery\n\nPiperOrigin-RevId: 557067599\nChange-Id: I5d5a16190700de72da10ed2e2f5d54c397fee656",
            "Add filterexact and actearly options to MuJoCo.\n\nWhen filterexact is a new dyntype which is just like the existing `filter`, but the activation state is integrated with exact integration, instead of simple Euler integration.\n\nWhen actearly is specified on a general actuator, `qfrc_actuator` is computed using the next timestep's `act` value, instead of the current value.\n\nPiperOrigin-RevId: 554438423\nChange-Id: I30759bb754239f2c6e2250b2d65351a5ec633310",
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.14": [
            "Bump dm_control version to 1.0.14 for MuJoCo 2.3.7 release.\n\nPiperOrigin-RevId: 549591342\nChange-Id: I38cf80cf762014ab7467b76940316ecdacd4e7af",
            "Bump dependency versions.\n\nPiperOrigin-RevId: 549025804\nChange-Id: I0e635145a9a88a5251204b8248ba492bcc8f7d54",
            "Drop support for Python 3.7.\n\nPython 3.7 reaches end-of-life on 27 June 2023 (https://devguide.python.org/versions/), and future versions of MuJoCo (after 2.3.6) will no longer support it.\n\nPiperOrigin-RevId: 543594006\nChange-Id: Ia65cde4e2d0dcf092319083d314ae53518922c12",
            "[NumPy] Fix uses of the np.stack() family of functions under NumPy 1.25.\n\nNumPy 1.25 release notes: https://github.com/numpy/numpy/releases/tag/v1.25.0\n\nPer the release notes, in NumPy 1.25:\n\nA sequence must now be passed into the stacking family of functions (stack, vstack, hstack, dstack and column_stack). (gh-23019)\n\nThis change fixes test failures where a non-sequence was passed to a stack function. The most common fix is to convert the input to a list explicitly before passing it to any stacking functions.\n\nPiperOrigin-RevId: 542831919\nChange-Id: I69cc25da897098fa11b6299145ab06c0eb37ad96",
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.13": [
            "Bump version number to 1.0.13.\n\nPiperOrigin-RevId: 542010549\nChange-Id: Id7e3d134b3d66be40e6b11be0d44ad4fb867a191",
            "Add missing Nvidia ICD file for glvnd to enable GPU rendering on Colab.\n\nPiperOrigin-RevId: 541615331\nChange-Id: I50f676548b288aaa4c24f06364f123849c057845",
            "dm_control: Import of refs/pull/403/head\n\nPiperOrigin-RevId: 540679977\nChange-Id: Ife6dd08511c9e6587c621084c9c3043ccf8bf46e",
            "expose skin group to python",
            "[NumPy] Fix uses of functions deprecated in NumPy 1.25.\n\nNumPy 1.25 deprecates a number of function aliases (https://github.com/numpy/numpy/releases/tag/v1.25.0rc1)\n\nThis change replaces uses of the deprecated names with their recommended replacements:\n* `np.round_` -> `np.round`\n* `np.product` -> `np.prod`\n* `np.cumproduct` -> `np.cumprod`\n* `np.sometrue` -> `np.any`\n* `np.alltrue` -> `np.all`\n\nThe deprecated functions will issue a `DeprecationWarning` under NumPy 1.25, and will be removed in NumPy 2.0.\n\nPiperOrigin-RevId: 538825144\nChange-Id: I484747bcf8d0a64b78e7163df940fd5a734b3e5c",
            "Add `mjContact.solreffriction`, `mjModel.pair_solreffriction` and related implementation, allowing contact reference acceleration to be different for normal and frictional contact directions. This is required for e.g. elastic frictional collisions.\n\nPiperOrigin-RevId: 538513357\nChange-Id: Ic91f34cbc143b7edd33e4b68d29e471f2db9e912",
            "Removed key for visualizing the mesh tree.\n\nPiperOrigin-RevId: 533126358\nChange-Id: Ic63957427bfe37422e4262fe3551d4a25e92ceae",
            "Allow custom spec types to be passed through in composer obs updater.\n\nPiperOrigin-RevId: 530928000\nChange-Id: If155fb61320163c4f256300771dcc836bc7a6aae",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 528723181\nChange-Id: I4a3d19bf16ef77af48df2f784568d11c0567ed00",
            "Update MuJoCo version to 2.3.5.\n\nWe won't release a new dm_control version since mujoco==2.3.5 is a bugfix release that is otherwise identical to mujoco==2.3.4.\n\nUsers who install dm_control via PyPI should automatically receive the newer version of MuJoCo since setup.py specifies mujoco>=2.3.4 (and the mujoco==2.3.4 has since been yanked.)\n\nPiperOrigin-RevId: 527025911\nChange-Id: I4eb5e0818f9ca9835dbd01f73c4eb0a8112e2164",
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.12": [
            "Bump version number to 1.0.12.\n\nPiperOrigin-RevId: 525778016\nChange-Id: Ie5b62969dc40dbcf5aa6f95a41d771f9ce2a902b",
            "Expose a handle for the Python viewer.\n\nThis change also requires user scripts to explicitly synchronize changes to physics state to the viewer. The Simulate class was reconfigured so that certain UI events are handled during this sync operation, outside of the render loop on the main thread. These correspond to operations that require access to the full mjModel/mjData.\n\nTo support other, more interactive operations (e.g. camera movements), a new mjvSceneState struct is introduced which captures only the portion of the physics state required for scene re-rendering. The mjvSceneState is updated from mjModel/mjData during the viewer sync operation, and is significantly cheaper than a full mj_copyModel and mj_copyData.\n\nFixes https://github.com/deepmind/mujoco/issues/796\n\nPiperOrigin-RevId: 525723636\nChange-Id: I57530ea34423b1075ae699ce1c2d988182730ae5",
            "dm_control: Import of refs/pull/394/head\n\nPiperOrigin-RevId: 521486065\nChange-Id: If209de7fb54a8ff1f469f7acc9c517539a5855e8",
            "Allow renderers to build with pytype.\n\nPiperOrigin-RevId: 520145182\nChange-Id: I7875a1e39d7e65d32132d47a0ff62b4174ea6e16",
            "Add equivalent inertia ellipsoid visualization.\n\nPiperOrigin-RevId: 519154067\nChange-Id: Idcab812137048d6aeb8a91adddaa628f73a7f5a3",
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.11": [
            "Bump version number to 1.0.11.\n\nUpdate dependencies in requirements.txt.\n\nPiperOrigin-RevId: 518233056\nChange-Id: I8e1e2ae94254563835a3f922bfafaba00c20c57c",
            "Make sure fields in mjData are initialized in `index_test`.\n\nThe test was reading fields that aren't initialized until mj_forward is called.\n\nPiperOrigin-RevId: 518012755\nChange-Id: I424b712bd1b443fc3639ea686c8ed4a473059c1b",
            "Fix msan errors.\n\nPiperOrigin-RevId: 518011239\nChange-Id: I25f2a10375ae77046ef490da537db6a9d9678504",
            "Add `implicitfast` integrator to PyMJCF schema.\n\nPiperOrigin-RevId: 517138279\nChange-Id: Ie40dd749c99a60971c99930ff612a78b81727654",
            "Allow custom composer Arena XMLs.\n\nPiperOrigin-RevId: 515346126\nChange-Id: I4e9947bf4549d3202fa460d77273709aa43dac41",
            "Fix `sensor/user` element's attribute defaults\n\nPiperOrigin-RevId: 514787631\nChange-Id: Ibc1733a2c6bd302acfdc00f0db4044b0c3677c58",
            "Add option to step the physics with `mj_step` instead of `mj_step2`->`mj_step1`.\n\nPiperOrigin-RevId: 514728526\nChange-Id: Icfac463419f1f9365b90ce36d4d96b0d5311ec73",
            "Add missing muscle gaintype dyntype and biastype to dm_control schema.\n\nPiperOrigin-RevId: 514360592\nChange-Id: I51cb35990c149ed2e81cb4c9a36986882cd7e7e5",
            "Removed deprecated `abc.abstractproperty` decorator.\nThis is now\n\n```\n@property\n@abc.abstractmethod\n```\n\nPiperOrigin-RevId: 511862742\nChange-Id: Id21e2c4b42ece2227af74d30ffddbe674cfa61f6",
            "Add size.memory to MJCF schema.\n\nPiperOrigin-RevId: 509904430\nChange-Id: I1265c3e1d57613146ae4382e49f069e475295abf",
            "Rename `inteval` attribute in `mjLROpt` to `interval`.\n\nPiperOrigin-RevId: 509275105\nChange-Id: Id7840925f6653ecce2e5ea0790575471de4a0364",
            "Rename `<required>` tag to `<plugin>`.\n\nPiperOrigin-RevId: 509237786\nChange-Id: Ie04d0707ea8e65ed7e6293c66fc6ca1c842e52c8",
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.10": [
            "Bump version number to 1.0.10.\n\nPiperOrigin-RevId: 507794860\nChange-Id: I4a8a98686e0aedbec2255df5cab9b6030ac88c38",
            "dm_control: Import of refs/pull/336/head\n\nPiperOrigin-RevId: 507528987\nChange-Id: I76d0174749de9f87b0f842ec79648359a7c555f8",
            "dm_control: Import of refs/pull/371/head\n\nPiperOrigin-RevId: 507526433\nChange-Id: I5557b6ba05664a350746b58a166a2c03f3731b1d",
            "dm_control: Import of refs/pull/372/head\n\nPiperOrigin-RevId: 507524683\nChange-Id: Ia15cec5c490c91e81088c8b6c1c59238667ae7ab",
            "dm_control: Import of refs/pull/366/head\n\nPiperOrigin-RevId: 507444578\nChange-Id: I6b553ec182e1cade0dca89b1f0d322164eb047c7",
            "Added copyright headers; reformat file to use 2-space indent with 80-char line limits; Added Module docstring under copyright header",
            "separated build_dog in different files to increase readability; added a floor to the base xml; overall clean-up of the file",
            "Update MJCF schema for plugins",
            "Internal change.\n\nPiperOrigin-RevId: 504551469\nChange-Id: Ic47e9565f4cd6893e76ae499845e2d0a3474aac2",
            "Increase the font scale if a high-DPI (e.g. retina) display is detected.\n\nPiperOrigin-RevId: 504002233\nChange-Id: I0945ee40bb25f03975b8478bacfcac6c5b7ce9ee",
            "Update state items to include plugin state in mujoco engine.\n\nPiperOrigin-RevId: 500738879\nChange-Id: I339e26c7cdc928890d348654109c39b8f76ebc2a",
            "Modify mjcf schema to work better with MuJoCo plugins.\n\nPiperOrigin-RevId: 500735801\nChange-Id: Ie0802690104a80c42a021cbc5c7c3d0df3da25f6",
            "Correctly activate free camera on `esc` key hit.\n\nPiperOrigin-RevId: 499576860\nChange-Id: Ie1544d6efbed34384c6fbfe6784739c93f573095",
            "Add math module to variation package and make sequence variation evaluate items.\n\nPiperOrigin-RevId: 495758194\nChange-Id: I8fae6c2709e4a0d37c985863cde47ee0dea61057",
            "Use `mj_versionString` to report version in dm_control.\n\nPiperOrigin-RevId: 495358583\nChange-Id: Iaf46c920ace89aa7e680007862c7348cc317e000",
            "Exclude `needstage` from triggering dirty physics.\n\nPiperOrigin-RevId: 494890638\nChange-Id: Ie68a661e2b57626f9902d8d79523fb5ef86ad0f2",
            "make oneline",
            "fix deprecation warning",
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Add missing walk task in Humanoid_CMU\n\n(Tassa et al., 2020, page 25, third paragraph from bottom)[https://arxiv.org/abs/2006.12983] describes the Humanoid_CMU task as having the `stand`, `walk` and `run` tasks -- however the `walk` task is missing.",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.9": [
            "Bump version number to 1.0.9 for MuJoCo 2.3.1.\n\nPiperOrigin-RevId: 493553165\nChange-Id: If47cde9503b6453814a8f08458d0632b359183ff",
            "Update to pyparsing 3.0.0. Fixes #359.\n\nPiperOrigin-RevId: 493053064\nChange-Id: Ic473b9e1790da70154b242d5c9edfc707b728f46",
            "Rename `EGL_DEVICE_ID` to `MUJOCO_EGL_DEVICE_ID` to be consistent with `mujoco`.\n\nFixes #345.\n\nPiperOrigin-RevId: 493014875\nChange-Id: I54babc50d9e5f1e970e9738bb3594c5ba1b55412",
            "Make sure that `contact_force` always returns the correct values.\n\nThe `physics.step` function in `dm_control` runs `mj_step2` followed by `mj_step1`. This leaves the physics in a state where `mj_fwdPosition` has been called, and therefore the contact frames have been updated, but`mj_fwdConstraint` has not, and therefore the contact forces are stale. This change forces the portion of `mj_step2` that is needed to guarantee correct contact forces to be always be run as part of the `contact_force` function.\n\nFixes https://github.com/deepmind/mujoco/issues/13.\n\nPiperOrigin-RevId: 490922782\nChange-Id: I0a3998ff4759aee70321a636c189e44de2f3eca5",
            "Stop requiring stateful actuators to come after stateless ones.\n\nPiperOrigin-RevId: 487201455\nChange-Id: Iec3076769486b763053f32b5941678b4d6583eba",
            "Create a substep method that calls the before and after substep hooks and steps physics.step.\n\nPiperOrigin-RevId: 486675254\nChange-Id: Ib6b70e707354f89679db90371dcc315f7a8ae18f",
            "Allow more than 1 activation state per actuator, but only for dyntype `user`.\n\nFixes #305.\n\nPiperOrigin-RevId: 486597273\nChange-Id: I0b5913622c1d2e8297427d4ffe34cf8bfd70ec5e",
            "Add per-body gravity compensation (buoyancy) passive force.\n\nPiperOrigin-RevId: 485342531\nChange-Id: Id9acf63205941ac9ac2f87ec30099bff4ec0f1b7",
            "Delete unused globals in `mujoco/wrapper/core.py`\n\nPiperOrigin-RevId: 485335378\nChange-Id: Icbb01086db33aef2bcf199df89e8b6069e26974c",
            "Allow tendon `springlength` attribute to take two values between which the spring produces no force (a deadband).\n\nIf given two non-decreasing values, `springlength` specifies a deadband for spring stiffness, inside of which the force is 0 and outside of which force behaves like a regular spring, with the setpoint corresponding to the nearest value. This can be used to create tendons whose limits are enforced by springs rather than constraints, which are cheaper and easier to analyse. See test/engine/testdata/tendon_springlength.xml example model.\n\nSpring-limited spatial tendons whose lower range value is 0 are rendered as catenaries.\n\nFixes #520.\n\nPiperOrigin-RevId: 484509706\nChange-Id: I821465553c69bf8ea76a55452a4fb79563fdb7c3",
            "Silence some pytype errors.\n\nPiperOrigin-RevId: 482699032\nChange-Id: Iefbc093544d48d3020d6ecbb400f44503028e620",
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.8": [
            "Bump version number to 1.0.8 for MuJoCo 2.3.0.\n\nPiperOrigin-RevId: 481885969\nChange-Id: I5030c6daef18afcc7367200531ed7a68207cad8b",
            "Preserve the stack trace when raising exceptions within exception handlers.\n\nPiperOrigin-RevId: 481106930\nChange-Id: Ib2645050ae2757759b4aac87887e965a6716c092",
            "Replaced deprecated @abstractproperty decorator that was causing lint errors\n\nFollowing these instructions: https://docs.python.org/3/library/abc.html#abc.abstractproperty\n\nPiperOrigin-RevId: 480906718\nChange-Id: I7c9a9754a4da2c30fcc94841bf728dbb229d1b5a",
            "Rename time, position, and speed to times, positions, and speeds as these are lists and the time variable clashes with the imported time and causes errors.\n\nPiperOrigin-RevId: 479538684\nChange-Id: If9a47d1a4b84636435bcc980a4563ee7d2871fd1",
            "Dynamically allocate `contact` and `efc_` arrays on a new memory arena.\n\n- Add private function `mj_arenaAlloc`. This is used internally to allocate memory from the arena.\n\n- Add private function `mj_nefc` to count constraints. This function returns a tight upper bound on `d->nefc`. The number of counted constraints can be slightly bigger than exact `d->nefc` in the case of constraints with empty Jacobian, as when placing a frictional tendon between two world sites.\n\n- Add new `memory` attribute to the `size` XML element for specification of arena memory size. This attribute is mutually exclusive with `nstack` and `njmax` specifications, which are now deprecated (but left around for the time being for legacy compatibility).\n\n- Move `d->stack` to the end of the new arena space. The stack now grows in reverse from the end.\n\nPiperOrigin-RevId: 479341539\nChange-Id: I27f67d524607db71e24f714dc96b221c0448795e",
            "Add `assetdir` compiler option.\n\nPiperOrigin-RevId: 478117894\nChange-Id: Iedb1f1083bfcbbb7d8643973444b7f0e2c219107",
            "Add all of Camera's constructor args to MovableCamera's constructor, except for camera_id, which has to be -1.\n\nPiperOrigin-RevId: 478002851\nChange-Id: I78253a2887073490cfbd92e4295eb0539003d710",
            "Add `dog_v2/` directory and `build_dog` script to `locomotion/walkers/assets/`.\n\n- Preparation for improved dog model.\n- Added dog_base.xml with all the defaults.\n- Moved floor and tennis ball to scene.xml, removed target.\n\nPiperOrigin-RevId: 476119984\nChange-Id: I8c5e836fe61956872973528659137fe74045badc",
            "Ensure Viewer respects free camera settings.\n\nPiperOrigin-RevId: 475600801\nChange-Id: Id298b3614ad67fcb707500fbcb2d87e0f7b58bce",
            "Implement plugin mechanism for actuators and sensors.\n\nPiperOrigin-RevId: 474874088\nChange-Id: I1bbcc20439dc59de7e18327a2cdc6fad0a57201e",
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.7": [
            "Enable back face culling in `dm_control.viewer`.\n\nThe viewer has its own set of default renderer flags, and when the `mjRND_CULL_FACE` flag was introduced in MuJoCo (https://github.com/deepmind/mujoco/commit/396fdf00c36b571cae2d4faee18dcca694919b8f) the viewer's default was not updated.\n\nFixes https://github.com/deepmind/dm_control/issues/346.\n\nPiperOrigin-RevId: 472753294\nChange-Id: I33e6f48ff1ea887d07765ae851651f6c106cb08b",
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.6": [
            "Bump version number to 1.0.6.\n\nPiperOrigin-RevId: 472678116\nChange-Id: I754ae8817c41bebbaab41c5e439dfd1d6518a822",
            "Add scene callbacks to viewer/renderer.py and viewer/viewer.py\n\nPiperOrigin-RevId: 472485161\nChange-Id: Ic5fa30c97e1a33b6e0c8878818d0f51539795acb",
            "Don't infer limited attributes automatically by default.\n\nThis is an amendment to 4bfc2c0311233017293748e558a114a510a21f91.\n\nAdd an autolimits compiler option. When true, *limited will be inferred from the presence of the *range attributes.\nWhen false, models where limited is not specified, and range is will fail to compile.\n\nPiperOrigin-RevId: 472438650\nChange-Id: Ia76247064e54f9f876061d8455f84cb939e7d73e",
            "Fix rendering context cleanup logic.\n\nFixes https://github.com/deepmind/dm_control/issues/310.\n\nPiperOrigin-RevId: 472296006\nChange-Id: I558c1fdf3753ed660f4463ae2dc054f496164c8a",
            "Lower `protobuf` version requirement.\n\nThis is to prevent conflict with TensorFlow. Fixes https://github.com/deepmind/dm_control/issues/339.\n\nPiperOrigin-RevId: 472258727\nChange-Id: I886360eb687d62192bad2ccb94266c207efd2050",
            "Cartesian end-effector control using site transmission.\n\n- Added `refsite` attribute to actuators with `site` transmission.\n- Such actuators now have a well defined length and can be used for e.g., Cartesian end-effector control.\n- Added example models and documentation describing the new feature.\n\nPiperOrigin-RevId: 471561218\nChange-Id: I969c93a21d9a517a75e6ee013d4ebe3146ee48d3",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 470021901\nChange-Id: I14226e80b8ed65580822186e55995810033ad757",
            "Add a disable flag for sensors.\n\nPiperOrigin-RevId: 469473066\nChange-Id: I0a6e4370f93d47033630a86be988804062b6c273",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469228149\nChange-Id: I2863b8a52b35bc562d37fd2d779dd8b8f0bea24a",
            "Add two new attributes to weld constraints:\n\n- `anchor` determines the point of wrench application, in the frame of body2.\n- `tfratio` scales applied torques relative to applied forces.\n- Add visualisation of both anchor points to both weld and connect constraints.\n- Add a test model showing how the new weld parameters behave.\n\nPiperOrigin-RevId: 469190483\nChange-Id: Idf5928fbf278fb10357a77d2de2455d4a525d95a",
            "Add `insert` method to `mjcf.element`.\n\nPiperOrigin-RevId: 469135739\nChange-Id: I60d239051e8bbded0f90add424418f7bd5c63c2f",
            "Output attr=\"false\" from PyMJCF when False is explicitly specified.\n\nBefore this change, setting any keyword attribute to False meant the attribute wasn't specified at all. This is fine for attributes where the default is false, but wrong for other keyword attributes.\n\nIn particular, since commit deepmind/mujoco@4bfc2c0311233017293748e558a114a510a21f91, ctrllimited and similar attributes changed their default value from \"false\" to \"auto\", breaking some models that specify forcelimited=False and forcerange=something.\n\nAlso in this commit: update the ctrllimited and similar attributes' schemas to include the value \"auto\".\n\nPiperOrigin-RevId: 468699407\nChange-Id: I7f64d2e757678a00aec8b1cfa33894ac1b7f5b5b",
            "Explicitly disable tendon range limits and actuator force limits in rodent.xml.\n\n- This model has a bunch of ranges defined (tendon length ranges and actuator force-limit ranges) that are actually inactive due to the associated \"limited\" property not being set to \"true\".\n- A recent change in MuJoCo enabled automatically inferring the \"limited\" property according to the presence of the associated \"range\" property, which changed the behaviour of this model and helped us realise the above situation.\n- This CL explicitly disables tendon ranges limits and actuator force limits while leaving the ranges in place, so the model behaviour remains unchanged.\n- Since many of the numbers seem to be carefully calibrated, it might be worth investigating in the future whether the limits should actually be activated.\n\nPiperOrigin-RevId: 468690429\nChange-Id: Icd097a2cafe15e910bca71c5378bddcf3d92665a",
            "Expose `scene_option` as attribute and add `render_flag_overrides` to `MJCFCamera`.\n\nPiperOrigin-RevId: 468475294\nChange-Id: I9ff6483e85e7ac3f0bf6cb9037d24c27b7e3d0ac",
            "Automatically infer `*limited` field from `*range` field for joints, tendons and actuators.\n\nPiperOrigin-RevId: 467980594\nChange-Id: Idc7deb2d7b3368c0928ac3ee2ca5c8932a8d54fc",
            "Add a zero threshold option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467678061\nChange-Id: If14e6e7025535e8de47c17a8302b45e2bb2d3633",
            "Add a floating point precision option to `to_xml(_string)`.\n\nPiperOrigin-RevId: 467664520\nChange-Id: Ibac426918ae8466dc09e65635afbf961157cb62a",
            "Copybara import of the project:\n\n--\n581f009c02258f243915c45a5b736703944f935f by Levi Burner <leviburner@gmail.com>:\n\nCull face flag\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/deepmind/mujoco/pull/425 from aftersomemath:cull-face-flag 581f009c02258f243915c45a5b736703944f935f\nPiperOrigin-RevId: 466904386\nChange-Id: I61779e25de02130d50d6cce4120a5e84ad7c6a93",
            "- Add `azimuth` and `elevation` to `visual.global` in `schema.xml`.\n- Use `mjv_defaultFreeCamera` when initialising free cameras.\n\nPiperOrigin-RevId: 466336303\nChange-Id: Iea5962024600fa5ce45a156970e87837ee46ce5f",
            "Use `xbody` rather than `body` for egocentric computations.\n\nThis change fixes a bug introduced in [this change](https://github.com/deepmind/dm_control/commit/a6d753fda04642b926ada094b07f88a1ffac98b6), which replaced numpy-based computation of relative frames with native MuJoCo sensors.\n\nPiperOrigin-RevId: 465799007\nChange-Id: Ifab1b41880e16309e02bc2ec9bcc28b4c5bff489",
            "Change URLs that refer to `master` branch to `main`.\n\nGitHub redirects `master` to `main` so these URLs aren't broken, but we it's still good practice to update them to the current, canonical form.\n\nPiperOrigin-RevId: 465297038\nChange-Id: Icdd515727305da40fa7e4954bcbf90b06409ca38",
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.5": [
            "Bump dm_control version to 1.0.5.\n\nPiperOrigin-RevId: 465287147\nChange-Id: Ia91385f87f3be71d8aefaac49cb34e1e6c10db36",
            "Speed up warning checking in dm_control.\n\n`MjData.warning.number` is a property, and accessing it incurs a roundtrip penalty to pybind11. Instead, we now grab a reference to the returned array once. Also revert to using `np.copyto` to copy warning states -- we used to do this before the migration to the new bindings, and profiling shows that it is indeed faster.\n\nPiperOrigin-RevId: 465284823\nChange-Id: Idf0b2c26134db9fadd52d52c313ae3363c0da818",
            "dm_control: Import of refs/pull/325/head\n\nPiperOrigin-RevId: 465045140\nChange-Id: I8e8f1468684674c4cdc18a4126488f80dd745732",
            "dm_control: Import of refs/pull/315/head\n\nPiperOrigin-RevId: 464986102\nChange-Id: Ia5a5d56e244e9ab0502bed3f954a5638b405b672",
            "Add adhesion actuators.\n\n- Adhesion actuators using contact normals as force transmission mechanism.\n- Related video: https://youtu.be/HdBue4MUZys\n\nCloses #229\n\nPiperOrigin-RevId: 464389367\nChange-Id: I0969a77405a7f7b36280f840ec895d898ef622de",
            "Compute moment of inertia for concave and boundary meshes. Resolve #338.\n\n- Mesh inertias can now be computed exactly for well-formed (no holes) non-convex meshes.\n- To activate this feature, set `<compiler exactmeshinertia=\"true\">` (defaults to `false`). This default may change in the future.\n- Added `<geom shellinertia=\"true/false\">` (defaults to `false`). When true, geom inertia is computed assuming all the mass is concentrated on the surface, and `density` is interpreted as surface density (mass/area). Currently only mesh geoms are supported.\n\nPiperOrigin-RevId: 464368395\nChange-Id: I02fd611f8bb3fedd2aee08673a47955bf7d27068",
            "Add missing gain type \"affine\" to general actuators.\n\nPiperOrigin-RevId: 463605415\nChange-Id: Ic01e6721f101d5b55b1a1cbbc347ffe8e07f3a86",
            "closes issue #323",
            "Bump numpy and scipy versions for Python >= 3.8.\n\nThe numpy version bump addresses CVE-2021-34141.\n\nPiperOrigin-RevId: 461840285\nChange-Id: I0c85d2b8c3eeeea3ccf98ecaf6a16899cb6e9bcf",
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Remove duplicated code",
            "Add update method to GlfwWindow",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.4": [
            "Accept the same values of `MUJOCO_GL` as the `mujoco` package.\n\nThe `mujoco` package also makes use of the `MUJOCO_GL` environment variable to switch between rendering backends, which are implemented separately from the ones currently used in `dm_control`. However, `mujoco` accepts a wider range of `MUJOCO_GL` values, in particular it allows `off` to be specified to disable rendering entirely.\n\nBefore this change, specifying `MUJOCO_GL=off` will result in `dm_control` complaining that it is an invalid value. This change eliminates the conflicting `MUJOCO_GL` values expected by the two libraries.\n\nFixes #324.\n\nPiperOrigin-RevId: 461577872\nChange-Id: Ie962040395b766affc8342ab9d9fd09a0afe15cb",
            "Bump dm_control version to 1.0.4.\n\nThis version is updated to support new features in MuJoCo 2.2.1. Some dependency versions in requirements.txt have also been bumped.\n\nPiperOrigin-RevId: 461574094\nChange-Id: I147f66873a89ccb122b4e89abea3d21289a1067c",
            "Add control values to keyframes.\n\n- Add basic test for keyframes.\n- Add missing documentation for keyframe mocap positions and quaternions.\n\nPiperOrigin-RevId: 459021649\nChange-Id: I204cd916d19560fa732bf693b139d98ff415ed85",
            "Add cell to tutorial colab showing how to add visual geoms to a scene.\n\nPiperOrigin-RevId: 456044324\nChange-Id: I2c9efe85caa75356ed6b6a41f6ad0d5e97ffee87",
            "Add `<damper>` actuator shortcut and related `mjGAIN_AFFINE`.\n\n**Rationale**\n\nA general `mjGAIN_AFFINE` actuator adds the term `force = (c + kp * length + kv * velocity) * ctrl`. The damper shortcut restricts it to `kv * velocity * ctrl` and sets the `ctrllimited` attribute to true.\n\n**API**\n\n```xml\n<actuator>\n  <damper ctrlrange=\"0 1\" kv=\"1\"/>\n</actuator>\n```\n\n* Required attributes: `ctrlrange` (>=0)\n* Optional attributes: `kv` (>=0)\n\nPiperOrigin-RevId: 455366866\nChange-Id: Idba7ad95007405d5c7190437c291d6e7644d8615",
            "Add a callback to Camera.render for modifying the scene.\n\nCamera.render calls mjv_updateScene before rendering, which makes it hard for users to add geoms to the scene.\nThis callback is called after mjv_updateScene and before rendering.\n\nPiperOrigin-RevId: 455351943\nChange-Id: I58de48218ad2012b23eaeffe3396b2321b905e3f",
            "Add `intvelocity` actuator shortcut.\n\nPiperOrigin-RevId: 454899823\nChange-Id: I27e65f4e247f8119b63f58c580d909dd8c9a22a0",
            "Expose egocentric sensors on other players.\n\nPiperOrigin-RevId: 451422537\nChange-Id: I289ed9d81fe37e79d29923eef443412289209582",
            "Fix binding to a single stateful actuator.\n\nWhen binding single elements, the named_index argument to Binding is a string, rather than a list of strings. Most code in the Binding class handles this, but for stateful actuators, _filter_stateful_actuators didn't handle the case of the single actuator name, which caused a crash.\n\nPiperOrigin-RevId: 450437063\nChange-Id: I7e47287d162fb2c765a013d86fb104f09caebd64",
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.3.post1": [
            "Increase `protobuf` version in setup.py.\n\nPiperOrigin-RevId: 450417469\nChange-Id: Id3ca932a1e718ba3af8e856315d2c5c02c54ebe2",
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.3": [
            "Bump dm_control version number to 1.0.3.\n\nPiperOrigin-RevId: 449725211\nChange-Id: Iee30cfc1530d1e43e034c9aff9b6cf9aa34ef39c",
            "Remove maximum Python version requirement for dm_control.\n\nFixes #303.\n\nPiperOrigin-RevId: 449711039\nChange-Id: Ibc1f3173029d248374a58222ec2d1c0e5212eeee",
            "Update external dm_control installation in `mujoco/tutorial.ipynb`\n\nPiperOrigin-RevId: 449189277\nChange-Id: Id37f29667cc4455383ba7999b4519ed7b83f4fcb",
            "Fix appearance and add \"Open in Colab\"\n\nPiperOrigin-RevId: 448540641\nChange-Id: I9e5adfe06ff299f737b995e985a11594b12012e2",
            "Use nstep argument for physics.step in Cheetah initialization.\n\nThis was suggested by Trinkle23897 on bd6d893.\n\nPiperOrigin-RevId: 448234630\nChange-Id: Id6dacbbb2a9e7779b7a5e616d6365b390c0099ab",
            "Add new options to PropPlacer.\n\nPiperOrigin-RevId: 447740232\nChange-Id: Ie3d7e6c31cffb804274f4352617eb15f2552cbad",
            "Add a comment about incorrect initialization of orientations in free joints.\n\nPiperOrigin-RevId: 447716942\nChange-Id: Iefac64633c213e1e3864a3b9c499d1349fddb2f0",
            "Remove test for wrong actuator order.\n\nPiperOrigin-RevId: 447565813\nChange-Id: Ib6e619aafe771158ebf1916c4c73da6cb710764c",
            "Fix \"Open in Colab\"\n\nPiperOrigin-RevId: 446472645\nChange-Id: I0503f340dd46e92c73af5daca4cb9581358de8fd",
            "Switch egocentric computations from numpy to MuJoCo sensors.\n\nPiperOrigin-RevId: 446252430\nChange-Id: Icf97a9829fb5cd033340e22897ee555588f93967",
            "Remove unnecessary print statements.\n\nPiperOrigin-RevId: 445428563\nChange-Id: I9387cb5f8510434947a05736573f1cc119dfc809",
            "Merge pull request #295 from kevinzakka:mocap-bugfix\n\nPiperOrigin-RevId: 445428428\nChange-Id: I9a84dc47e7fae7dcf84597a9bdbf941da444a5b2",
            "Fix import.",
            "Add actlimited and actrange parameters to actuators of type \"general\".\n\nPiperOrigin-RevId: 444830049\nChange-Id: Ic9657ccdfd9ff70149942454b6bc716181f06011",
            "Add more detail to `setup.py` so that the PyPI page is populated.\n\nPiperOrigin-RevId: 444823472\nChange-Id: I45aa8fd2136484ab46d10a03d266d96ec60205c5",
            "Update dm_control citation.\n\nPiperOrigin-RevId: 444535617\nChange-Id: Iba5531b4fbb00fed748854f4a63c36133b021b23",
            "Compute egocentric observations using sensors instead of numpy.\n\nPiperOrigin-RevId: 443936858\nChange-Id: Ic2a409c79333e4b556a5bdeb2d65a1b9116d9e37",
            "Add `nstep` argument to `physics.step`.\n\n- Control Suite environments to use `nstep` argument rather than Python for-loop.\n\nPiperOrigin-RevId: 443454711\nChange-Id: I5aadfe7b5083ef1c07da1421e77932a2237ff219",
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.2": [
            "Bump dm_control version to 1.0.2.\n\nPiperOrigin-RevId: 441527665\nChange-Id: I05d7261f3e531f4d100154baeedc568c303c2ac6",
            "Add multi-point convex collision detection enable flag.\n\nPiperOrigin-RevId: 441231896\nChange-Id: Ida71d7b222611a7ebc9861a469588329a4a93e62",
            "Expose sites as properties.\n\nPiperOrigin-RevId: 439496980\nChange-Id: Ide941b547da85dc691001d0992f83df1f812c0d6",
            "Fix typo in comment.\n\nPiperOrigin-RevId: 439496937\nChange-Id: I786f19cbbd9781d30c086e414a1b330b17517b0b",
            "Bump `mujoco` dependency to version 2.1.4.\n\nPiperOrigin-RevId: 439168597\nChange-Id: I84e9c3a9f157898bd94c13d06244ac21d434cb50",
            "Accept sign-flipped observations as equal.\nThis is necessary for quaternions.\n\nPiperOrigin-RevId: 439113100\nChange-Id: Iba08440baee8cdc5bc04930b56e6d2e7c2d87ac5",
            "Add `AppendageFixer` to regenerate the `appendages` entries in the trajectories.\n\nPiperOrigin-RevId: 438307923\nChange-Id: I9b8abeb2d4b87f1518c5e498d9507fb742fba0df",
            "Add abstract methods to mjcf.Element to make it a bit friendlier to type-safe code.\n\nPiperOrigin-RevId: 437225654\nChange-Id: I259920123295eff2db8ce6c05d3d36ab8ee938a0",
            "Make h5py an optional dependency of dm_control.\n\nDon't install it by default, and don't import it unless it's actively used.\n\nThis should fix #227, where h5py is not available for M1 Macs.\n\nPiperOrigin-RevId: 436968739\nChange-Id: I4eb877a4f79b71dec9921ec44d25fcab735affe6",
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.1": [
            "Update mujoco requirement to version 2.1.3.\n\nPiperOrigin-RevId: 436776327\nChange-Id: I45e84899d1c715d265f4a895097e69ba093e2088",
            "mujoco.MjrContext.free instead of relying on the destructor.\n\nExplicitly calling free() ensures that this operation happens within the right GL context.\n\nPiperOrigin-RevId: 436226143\nChange-Id: I556f621e88233e7a10ee5bec91a8cdfeab7c558c",
            "Increase version to 1.0.1.\n\nPiperOrigin-RevId: 435683106\nChange-Id: Ic4158e521d0ab05824040779f9f46734afda1511",
            "Free the GL context when OffScreenRenderer.release() is called.\n\nAfter the previous change, the surface would only be released if there was an active MjrContext. This seems to be the case in practice, but it since it's possible for OffScreenRenderer to exist without an active MjrContext (before rendering), it makes sense to manage the GL context separately.\n\nPiperOrigin-RevId: 435647965\nChange-Id: I58da564dc4a7e04d77a2652c7511f03351fb84c6",
            "Allow `mjcf` to load obj files.\n\nPiperOrigin-RevId: 435273158\nChange-Id: If40f4444a3939c11247094f2df93b5b0fd936678",
            "Don't free the GL context twice.\n\nOffScreenRenderer reuses the same GL context with multiple MjrContexts, so it should increment the refcount on that surface to avoid it getting freed.\n\ncore.MjrContext should only decrement the refcount on the GL context once.\n\nThis fixes issue #268.\n\nPiperOrigin-RevId: 435113029\nChange-Id: I0eea564a2004df4791015d5a265007e985129335",
            "Bump pillow from 9.0.0 to 9.0.1\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 9.0.0 to 9.0.1.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/9.0.0...9.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\nPiperOrigin-RevId: 434800827\nChange-Id: I3a932b791c5798d463ba5205a8638ac1dc4130f7",
            "Update tutorial Colab to use dm_control 1.0.0.\n\nPiperOrigin-RevId: 434618066\nChange-Id: Ie59c2faa91b84cee091325a8355d7f56a72b8f42",
            "Update README.md to simplify installation instructions for 1.0.0.\n\nPiperOrigin-RevId: 433735805\nChange-Id: If299b96bb487f5899a6a6c3602a66de8944baed8",
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ],
        "1.0.0": [
            "Add fluidshape and fluidcoef to schema.xml\n\nPiperOrigin-RevId: 433707901\nChange-Id: Id30bb6372b69fee20379a66e8f929549821a30dd",
            "Increase dm_control version to 1.0.0.\n\nThe migration to new MuJoCo python bindings introduced some backwards incompatible API changes.\n\nPiperOrigin-RevId: 433608034\nChange-Id: I3f2ee1f099358247b36064040a1183d4b2986953",
            "Get MuJoCo headers from the `mujoco` Python package.\n\nPiperOrigin-RevId: 433595398\nChange-Id: Ia9127f45c86d222e51f726bc63b1c1f5f36b33ab",
            "Add a document about migrating dm_control client code after MuJoCo python bindings change.\n\nPiperOrigin-RevId: 433559491\nChange-Id: Ia64262001ce02a6e62391e780e0ad962409ca644",
            "internal change\n\nPiperOrigin-RevId: 433501881\nChange-Id: I9af20f6f33949c4faa0be360bc2043270b7245f1",
            "Remove some of the code generation from dm_control.\n\nAfter the migration to the new MuJoCo python bindings, there is not need to use the `types` or `wrappers` libraries from `mjbindings`, and using them is a likely mistake.\nOther mjbindings libraries remain, to support backwards compatible use. `functions` exports the mjlib symbol, which is an alias to mujoco.\nenums and constants will continue to work as before.\n\nPiperOrigin-RevId: 433461696\nChange-Id: I99de9731d91ebb39c35002b0144e5f57dc12f4a9",
            "Use new MuJoCo python bindings to implement dm_control/mujoco.\n\nPiperOrigin-RevId: 432958654\nChange-Id: Ibfa62f7776b8ffdd33fb32b44fc9d74dceb66bd4",
            "Bump dm-tree to 0.1.6 and mujoco to 2.1.2.\n\nPiperOrigin-RevId: 432561313\nChange-Id: I3985e55cd82f4e42d0875a4100bd757387a7b439",
            "Camera quaternions are now normalised by MuJoCo.\n\nPiperOrigin-RevId: 430443811\nChange-Id: I4bea52c009a4601f3e8a70ab972970df13c83f6a",
            "Fix missing quotation mark in colab.\n\n2046be23ecfdb47755bf967f925600b96825e4e2 accidentally removed the quotation mark and comma from the end of a line, breaking the notebook.\n\nPiperOrigin-RevId: 429265583\nChange-Id: I3453610a4a1d88798a915faeab0310f9522a8476",
            "Internal change.\n\nPiperOrigin-RevId: 428777756\nChange-Id: I467d7a04e7478b594ab23f3ea72c8601ab94dd68",
            "Add `Identity` variation class that simply returns current value.\n\nPiperOrigin-RevId: 426888877\nChange-Id: I25865a8629c4d750b1ba52331b87a92f4cbb6b9f",
            "Document that `pip install -e` is not supported\n\nPiperOrigin-RevId: 425478996\nChange-Id: Ic4cfdf92bf23d24bd0f2a462b441571ffff8baaf",
            "Remove stray `#@test` annotation from tutorial notebook\n\nPiperOrigin-RevId: 425474013\nChange-Id: I58098447c77c1f2f5f86b7a649450d334913e578",
            "Revert commit 73c31ac21d1214f0a2eadfc8540a7f76796955cc.\n\nThat commit broke rendering on macOS. `glfwInitHint` only sets internal hints in GLFW and a subsequent call to `glfwInit` is still required. However, `glfwInitHint(GLFW_COCOA_MENUBAR, 0); glfwInit();` still results in a dock icon being created, so we are reverting that commit entirely until we figure out a way to actually disable it.\n\nCloses #239\n\nPiperOrigin-RevId: 425341097\nChange-Id: If87643db372d4ec0a5237deb6c0b3effecdd7dc0",
            "dm_control: Import of refs/pull/237/head\n\nPiperOrigin-RevId: 424822091\nChange-Id: I61ed36bfedb1928dbb1f07e0cf6bb8972ac4779c",
            "Update tutorial notebook to use the latest version of dm_control.\n\nPiperOrigin-RevId: 423779850\nChange-Id: I271656b080d88a9a75bd21f08fb6299a884af43b",
            "Bump numpy from 1.19.5 to 1.21.0\n\nBumps [numpy](https://github.com/numpy/numpy) from 1.19.5 to 1.21.0.\n- [Release notes](https://github.com/numpy/numpy/releases)\n- [Changelog](https://github.com/numpy/numpy/blob/main/doc/HOWTO_RELEASE.rst.txt)\n- [Commits](https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0)\n\n---\nupdated-dependencies:\n- dependency-name: numpy\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #230\nPiperOrigin-RevId: 423378775\nChange-Id: I749a673f960e915976ca8356057fbb4cd857e2a5",
            "Bump pillow from 8.3.2 to 9.0.0\n\nBumps [pillow](https://github.com/python-pillow/Pillow) from 8.3.2 to 9.0.0.\n- [Release notes](https://github.com/python-pillow/Pillow/releases)\n- [Changelog](https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst)\n- [Commits](https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pillow\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nResolves: #232\nPiperOrigin-RevId: 423355410\nChange-Id: I3519189a6a3a66ea03d5a2c6303ad6137ec2f6d7",
            "dm_control: Import of refs/pull/215/head\n\nPiperOrigin-RevId: 423341706\nChange-Id: I94039d109980e4f872d2c529c33e87c5e7c9dfb8",
            "Remove flaky `util_test.py`\n\nPiperOrigin-RevId: 420487334\nChange-Id: I3df0ce79e78da8da34a4ef022c5ea7291ab53f77",
            "Modify binding generator to accommodate internal changes to MuJoCo headers.\n\nPiperOrigin-RevId: 420476114\nChange-Id: Ic691a5d4b70b6d3c406eedf2874e289eccfa4f75",
            "dm_control: Import of refs/pull/2/head\n\nPiperOrigin-RevId: 419562272\nChange-Id: I3b6559fa45cfeb742eb87df83f6d765cc7e30922",
            "Suppress GLFW dock icon on macOS.\n\nBefore this change, when GLFW is imported (e.g. via `from dm_control import suite`) on macOS, a Python rocket icon appears bouncing on the dock until the Python process quits.\n\nPiperOrigin-RevId: 417036346\nChange-Id: I24a467195c00f82da627cbbf0a31c602e6e437bd",
            "Freeze version of dm_control installed in tutorial colabs.\n\nWe are about to update dm_control in PyPI, and it will start depending on the new version of MuJoCo.\n\nPiperOrigin-RevId: 417027493\nChange-Id: I437b83b4763ca2addb33a98b4278441e87c6f329",
            "dm_control: Import of refs/pull/222/head\n\nPiperOrigin-RevId: 416999250\nChange-Id: I050e5da6aae8a9afa608666fa9b3642bf8c65bc9",
            "Change MuJoCo lookup paths to work with version 2.1.1.\n\nPiperOrigin-RevId: 416848645\nChange-Id: I5e7c7ea60559d5afb40a94d71b59390b8c5760a2",
            "Upgrade to MuJoCo 2.1.1.\n\nAlso update a control suite test and golden images for renderer tests due to the change in MuJoCo's calculation of inertia for capsules.\n\nPiperOrigin-RevId: 416463896\nChange-Id: Ib24c1e2efe4b76951a9feb419ef2c7827c802696",
            "Strip both leading and trailing underscores from MuJoCo API identifiers.\n\nPiperOrigin-RevId: 412862961\nChange-Id: Ifa490065fac8b7316a19856880dcea050803e0e0",
            "Added multiple-attempt mechanism to PropPlacer physics-settling to handle unstable cases.\n\nPiperOrigin-RevId: 410537749\nChange-Id: I316567edbe3a42f9eb902fd4eed99f27078d7c6e",
            "Internal change\n\nPiperOrigin-RevId: 408836585\nChange-Id: I8fda2e30ab30d9f64343a6a00895616dca29118b",
            "Add MuJoCo-focused tutorial notebook.\n\nPiperOrigin-RevId: 408319720\nChange-Id: I78a075b6f323d8189fff30de48b56c3e98d83877",
            "Fix MuJoCo header path in comment.\n\nPiperOrigin-RevId: 408308086\nChange-Id: I7e969dc56f355c28399acad7954dc722f01b4bfd",
            "Internal change.\n\nPiperOrigin-RevId: 405854303\nChange-Id: I989a067d3b525a77df6d70e7a6e5487679c532de",
            "Restrict pyparsing version to 2.x.x.\n\nThe autowrap code is not compatible with pyparsing 3.x.x. Fixes #210.\n\nPiperOrigin-RevId: 405526958\nChange-Id: I909c1c5205fbe31edac97d14a33fb1950cc1d6a5",
            "Update dm_control for MuJoCo 2.1.\n\nFixes #172.\n\nPiperOrigin-RevId: 403778684\nChange-Id: Id37a5c717cf3d5874e6d4e1dd6dadf53cfee6a26",
            "SceneCamera and Viewer: make camera properties factor and zoom configurable.\n\nPiperOrigin-RevId: 403369158\nChange-Id: Ief0fccec8ab1dcab49a7e71ffc60bc684c57186b",
            "dm_control: Import of refs/pull/202/head\n\nPiperOrigin-RevId: 401196677\nChange-Id: I2c8b1ef067d13e4f17c8314e86386e10d910297a",
            "Add a missing attribute which doesn't get initialized when Physics is unpickled.\n\nPiperOrigin-RevId: 397762600\nChange-Id: I202dd5dbcf2c357cdeef5569daf3804cb6e24c77",
            "dm_control: Import of refs/pull/200/head\n\nPiperOrigin-RevId: 397326846\nChange-Id: I16c4d54c35ee87a4b2193a84a97625442e8d6d33",
            "Add new version of fruitfly model.\n\nPiperOrigin-RevId: 396612300\nChange-Id: I0cc8d5313751ab8e22e86f82225481df42c4f782",
            "dm_control: Import of refs/pull/198/head\n\nPiperOrigin-RevId: 396313230\nChange-Id: I1cbaca52259bafd501e8a874543876cc17b5ff04",
            "Orthonormalize the difference rotation matrix before taking its trace\n\nThere may be some accumulation of error that results in `ortho_difference_rmat` not being perfectly orthonormal. This can result in a value > 1 being passed to `np.arccos`, resulting in a NaN.\n\nPiperOrigin-RevId: 395912807\nChange-Id: I0d28bb0f72ddf159f4b613d9cc86972bba1ac06f",
            "Provide more context in MuJoCo error messages\n\nPiperOrigin-RevId: 395277617\nChange-Id: Ifb46fb6aee9b3acc6af72c64321ad84ca39673f7",
            "Drop support for Python 3.6\n\nPiperOrigin-RevId: 391260125\nChange-Id: I0cb91b49c2edbc7dbaa55d078ef197e06ebcfbb2",
            "Fix upright position for CMUHumanoidPositionControlledV2020.\n\nCloses #192\n\nPiperOrigin-RevId: 387317115\nChange-Id: I9025c8329597558a5f15186956862628721d7daf",
            "dm_control: Import of refs/pull/186/head: closes #186\n\nPiperOrigin-RevId: 378536820\nChange-Id: I05495b0650b5bcfb8c74a5cfbff67b2d573ea688",
            "Use `configure_joints` to set joint positions.\n\nPiperOrigin-RevId: 376809280\nChange-Id: I6ca1bc12aad3144641b1701e788bbf6ac94bf7c3",
            "Small changes to ant to allow use in reference pose task visualization.\n\nPiperOrigin-RevId: 376799156\nChange-Id: Ib6986634b5685a4da01d98e4584101239fea1a88",
            "Add an option to fill delayed observation buffer with the initial values rather than zeroes.\n\nPiperOrigin-RevId: 376797541\nChange-Id: I87b680ea9634ed3f9e591470bf31910a2946b1b8",
            "Update soccer submodule README.md to reflect the new environment options.\n\nPiperOrigin-RevId: 376795227\nChange-Id: I73279edef54de6414b35198af50f067959be1b10",
            "Use CMUMocapInitializer for humanoid walkers in soccer by default.\n\nPiperOrigin-RevId: 375078399\nChange-Id: I652bb090cdb11605f4494df843d2e6729675fc2d",
            "Introduce factory method with the option to use humanoids.\n\nPiperOrigin-RevId: 373371306\nChange-Id: I51b0a72afdce6a3891d608b31d3ecfb387750250",
            "Introduce Humanoid walker type to soccer.\n\nPiperOrigin-RevId: 373366935\nChange-Id: Id7c26e07f08c4a5b2f8ab1b4e77479111ea5a995",
            "Introduce a `multiturn` variant of the task.\n\nPiperOrigin-RevId: 373348349\nChange-Id: Ie2a58c09149fe160b9c6c902064ba3180d8cbaaf",
            "Updated ant and reward computation code to use the batched quaternion functions.\n\nPiperOrigin-RevId: 372528912\nChange-Id: I3e5a9cf9c502bacd332e9282e06ffe99a5145672",
            "Add functionality for processing batched inputs to several quaternion functions in transformations.py. Add tests for the batched versions of the quaternion functions. Also fixes a bug in the `quat_dist` function where it was previously dividing by norm^2 instead of norm.\n\nPiperOrigin-RevId: 372327706\nChange-Id: Ic8a49e2a62ae9fb6a547a3fad76060d652cff87f",
            "Add simple mocap playback task.\n\nPiperOrigin-RevId: 372117148\nChange-Id: Idc0ecbfa46c8c57f11084cfb5777149d66ebd2af",
            "Locomotion reference pose task: Add more general quaternion difference reward computation.\n\nPiperOrigin-RevId: 369839626\nChange-Id: I19a67a299e06143ba8fca86b6a00b1aff51f53fb",
            "Fix a race condition in test_repeatedly_create_and_destroy_context.\n\nPiperOrigin-RevId: 370146892\nChange-Id: I6a84fd9441f4c6ff52cd2d70e214ca2055e651f6",
            "Separate prop termination error threshold and condition from pose termination.\n\nPiperOrigin-RevId: 369393490\nChange-Id: I81b3c885728b193eb26e632bd02a4cdcea630a49",
            "Change Manipulator touch sensor reading to named indexing.\n\nPiperOrigin-RevId: 367612059\nChange-Id: I13f12e52080256ed64c71b1e09f9078e7d8b4328",
            "dm_control: Import of refs/pull/178/head, closes #178\n\nPiperOrigin-RevId: 367502743\nChange-Id: I1eda002ef48f0b033907404e1c4ba3283f583468",
            "locomotion: Remove actuators for ghost walkers, so that the action space does not include ghost walker actions.\n\nPiperOrigin-RevId: 367277429\nChange-Id: I3ab4aaa9879bcfa2a5b2467119a298075131dfaa",
            "Enable prop-related observations and rewards in locomotion mocap tracking tasks.\n\nPiperOrigin-RevId: 366959695\nChange-Id: Idf53444e632ace8ca3da9993bb6f3ac43724d216",
            "Release of initializer to set pose of walker from motion capture.\n\nPiperOrigin-RevId: 365999435\nChange-Id: Id376f359b7296e66837db919681afe9c7804864a",
            "Updates to rodent walker model:\n- Correction to ground contact geoms.\n- Option for more realistic foot limits.\n- Option for torque actuation.\n\nPiperOrigin-RevId: 365546968\nChange-Id: I55a598b38cc40548ff70c25cb17041c9a7a81194",
            "dm_control: Import of refs/pull/177/head\n\nPiperOrigin-RevId: 365261401\nChange-Id: I57e9e7c5e6e6fad04915f2d301e113318428db4e",
            "Introduce 5v5 regulation sized pitch.\n\nPiperOrigin-RevId: 365225597\nChange-Id: Iba93803bb1f316a6fe346be7a404d3572e59697f",
            "Regularly build and test on Python 3.9.\n\nPiperOrigin-RevId: 364896371\nChange-Id: Idcf4679d56767908b817395478c6369625adbc8b",
            "Introduce regulation soccer ball parameters and constructors.\n\nPiperOrigin-RevId: 364783915\nChange-Id: Idf38983b6dd8efd8752cde57dd68477f2f8764f7",
            "Performance optimizations for tracking task.\n\nPiperOrigin-RevId: 364770178\nChange-Id: I09291940597dd825d067ff0607fbade601fd2d7b",
            "Change to set_walker util function.\n\nPiperOrigin-RevId: 364765597\nChange-Id: I6e0bba27150e69dd7f4b4b83222ffc16d7005349",
            "dm_control: Import of refs/pull/176/head\n\nPiperOrigin-RevId: 364194727\nChange-Id: I310522a898b87653efbfb9a40cd139ed0f8b3fea",
            "Expose actuator force for walkers.\n\nPiperOrigin-RevId: 362111452\nChange-Id: I9887e2a592b1584e8a7687fb723f0ef6f07b5499",
            "Add \"primitive\" props for manipulation tasks\n\nPiperOrigin-RevId: 360160891\nChange-Id: I0eee13fcaf373fe396b22437f33c058bd5c5c1c0",
            "Add padded_room to dm_control/locomotion/arenas.\n\nThis is a LabMaze square room where the outermost cells are always empty.\n\nPiperOrigin-RevId: 360156942\nChange-Id: I0e3705f78f2b16c93f09d4e5e3265a605b4ab472",
            "dm_control: Import of refs/pull/170/head\n\nPiperOrigin-RevId: 359356106\nChange-Id: I6b73ac27d453045706448ecde7c2355effd215ee",
            "Update the link for Hasenclever et al. (2020)\n\nPiperOrigin-RevId: 355168290\nChange-Id: I6c177358b401c480e1c5307e5d5a3826f5c2a4d3",
            "Reduce top_dowm camera z to avoid clipping out the field plane.\n\nPiperOrigin-RevId: 351804570\nChange-Id: I697ade5342cc86f48962628c1a2c5ac9f577a312",
            "dm_control: Import of refs/pull/161/head\n\nPiperOrigin-RevId: 350726236\nChange-Id: I107a90adfb5f2ff41b5b2a61cf778506a5c2bb84",
            "dm_control: Import of refs/pull/164/head\n\nPiperOrigin-RevId: 350663385\nChange-Id: I8b71f1d854cd2e558b79c3d84e7b8b36d07c3d3d",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 350150989\nChange-Id: Ifc1be0c98ba3cb0ce81031d4de377f8c642994c4",
            "Workaround for errors when repeatedly activating MuJoCo trial licenses (#158)\n\nAlso wrapped the activation call in a mutex in order to prevent a race.\n\nPiperOrigin-RevId: 350106904\nChange-Id: I449634a3082c7a06b916847100e2b8f21d9ba46d",
            "Replace bare `#`  characters in `tutorial.ipynb` (fixes #162)\n\nPiperOrigin-RevId: 349668059\nChange-Id: Id5ad8af6d010f0534976ecc7ca951a8500ed52ce",
            "Internal workaround for matplotlib video rendering.\n\nPiperOrigin-RevId: 346324093\nChange-Id: I546851214c765977dc772a93bf095a8e9b613456",
            "Add tutorial section about camera projection matrices.\n\nPiperOrigin-RevId: 346136435\nChange-Id: Ia576403e56ba9cc25dd5bbad78afd95c27aa305c",
            "Fix some irreversible copybara transformations\n\nPiperOrigin-RevId: 345485644\nChange-Id: I166eb031f28100adbda7bedfb5c8f2a7b637b351",
            "Cleanup: use Python 3-style `super()` everywhere\n\nPiperOrigin-RevId: 344511996\nChange-Id: Ic34dc25a39b3fffc9090b34922ca0290a0b22e77",
            "Cleanup: remove unnecessary subclassing of `object`\n\nPiperOrigin-RevId: 344508806\nChange-Id: I73d500f3cd21ba9d4bb1cfca1506942432afedea",
            "Access ABCs via `collections.abc` rather than `collections`\n\nFixes #148\n\nPiperOrigin-RevId: 344400648\nChange-Id: Ic75526d93590c0f68155b4c750c2d82016d80430",
            "Cleanup: remove dependency on `six`\n\nPiperOrigin-RevId: 344397398\nChange-Id: Ief1a0c38d5c438c8eda741a447d4e6d768b03214",
            "Cleanup: remove some trivial uses of `six`\n\nPiperOrigin-RevId: 344297111\nChange-Id: I7a68b417901736b0e325e52e63adff7bd8edcfbc",
            "Make sure `ctypes.cast` still exists before calling in _create_finalizer().\n\nPiperOrigin-RevId: 344272436\nChange-Id: Id0d430df3e8f02daf67e96167222cc91b4fc0d86",
            "Cleanup: bulk-remove unnecessary __future__ imports, fix misc lint errors\n\nPiperOrigin-RevId: 344034427\nChange-Id: Ic3152c3215a768b086ca90ba4da00aa3e985faf3",
            "Fix PyMJCF handling of the reference attribute in sensors with objtype='xbody'.\n\nPiperOrigin-RevId: 344030871\nChange-Id: I8e6b0c003c5328b0af08625025e71df42d385022",
            "Use @ operator in `Camera.matrix`.\n\nPiperOrigin-RevId: 344020959\nChange-Id: I5be1d53fa3d897950aa0bd00dd03439d19c4c856",
            "Add override_schema method to schema.py\nModify attribute_test to use override_schema.\n\nPiperOrigin-RevId: 340626854\nChange-Id: I83df9a9af9b34e8aa5615ed24d4ac04ff7606d70",
            "Replace call to deprecated `np.ndarray.tostring()` method with `.tobytes()`\n\nPiperOrigin-RevId: 339888844\nChange-Id: I93b105f811f6064a500f961be886e0ab9fbc9a54",
            "Use +/-`mjMAXVAL` instead of `inf` in bounds for unlimited actuators in `action_spec`\n\n`mjMAXVAL` is a more correct bound, since setting `ctrl` to values that are greater than this would result in\n```python\nPhysicsError: Physics state is invalid. Warning(s) raised: mjWARN_BADCTRL\n```\nwhen the environment is stepped. Unbounded actions are allowed in general, provided that they are not used to set values in `ctrl` directly.\nPiperOrigin-RevId: 339746781\nChange-Id: Ie108dcf66df298652f635a421ed6d9a662101d47",
            "Update minimum version requirement for Pillow to 7.1.0\n\nOlder versions suffer from vulnerabilities, see https://github.com/deepmind/dm_control/network/alert/requirements.txt/Pillow/open\n\nPiperOrigin-RevId: 339468801\nChange-Id: Ic30fd32b2eaf4c326f58116045a1a21d88495eca",
            "Set `extent` and the near and far clipping planes to better values.\n\nPiperOrigin-RevId: 337282940\nChange-Id: Ic48181599e9a87e65d7de622d54d0dd532e24d5a",
            "Replace `zaxis` specifier with `quat` for top_camera.\n\nPiperOrigin-RevId: 336769300\nChange-Id: I29244ef444ec7e27a1c408d0daaf5a926174a9ca",
            "Add environment variable for selecting EGL device\n\nImport of refs/pull/156/head\nCloses: #118, #156\nPiperOrigin-RevId: 336440200\nChange-Id: Ib5a09cc2de12a3e3d74c4305ef7ae243128cf722",
            "Internal change to mocap proto definition.\n\nPiperOrigin-RevId: 335893588\nChange-Id: Ica6d4b6b3369c090dabdac7c5a8028f547f7a1ee",
            "Fix type annotations.\n\nPiperOrigin-RevId: 335603005\nChange-Id: I2f69a2a899633b7cb1aaee5460fb7be9dd536160",
            "Provide an option to make walls corridor arena have a minimum padding before the first obstacle. Example environment is modified to use previous defaults (so no change to example). For new use cases, the new setting is largely preferable so it is made default.\n\nPiperOrigin-RevId: 335399289\nChange-Id: If483d412dbff9d47d5ec1a62fc792f243ff9ea1a",
            "Add an option to regenerate the map when repeating a goal navigation task.\n\nPiperOrigin-RevId: 335396821\nChange-Id: Ied56d482f1fc71cda00801e6797fb1eb5db86d82",
            "Suppress invalid value warning for a `np.cos()` which is sometimes called with legitimate non-finite arguments.\n\nPiperOrigin-RevId: 335388219\nChange-Id: Iacbe762a05e1350e8db60b48682a7208e54da9b1",
            "Add arguments to floor constructor.\nImprove visual defaults.\n\nPiperOrigin-RevId: 335370229\nChange-Id: I8d5f01e808b1c0cdd5d01600e390e9ce53308257",
            "Add position argument to utils.add_walker() function.\n\nPiperOrigin-RevId: 332192182\nChange-Id: Ib1b1593d1cbb80c7b77bfca298d50910cbe6b6e4",
            "Add a utility function to resolve and \"commit\" defaults into an element's own attributes.\n\nPiperOrigin-RevId: 331746281\nChange-Id: Ib38e1f2a869923ea6ac27610b3e716cfb18724a2",
            "Make slowest viewer setting slower, and the fastest setting to be real-time.\n\nPiperOrigin-RevId: 331742021\nChange-Id: I62df7900f140abb37e0fb171422ee0a6acdb5cae",
            "Generalize ball initializer.\n\nPiperOrigin-RevId: 331423636\nChange-Id: I4c93353da571a56d72be23e2016896dcd6888b88",
            "Also accept mujoco.* as the main tag in the parser.\n\nPiperOrigin-RevId: 331411703\nChange-Id: I3821e325ca0ee76d060db45a4b5d9ff14c7348ce",
            "Change joint observations in mocap base task to be in observable joint order. Add mappings between mocap joint order and observable joint order to legacy base walker.\n\nPiperOrigin-RevId: 330388914\nChange-Id: Ib88a0911d60c58fbdce920f7b16f39c18a98aa14",
            "Add a `.matrix` property to `mujoco.Camera` that exposes the camera matrix\n\nPiperOrigin-RevId: 330349436\nChange-Id: Ib5295f0e3501b5d5c39e45c3eb2b09822322c311",
            "Implement __getattr__ in the base variation.Distribution class.\n\nPiperOrigin-RevId: 329943179\nChange-Id: Ifeb13a3f491588283f188344f8c5f926a8431886",
            "Exclude setuptools version 50.0.0 due to issue #2352.\n\nPiperOrigin-RevId: 329889379\nChange-Id: If94375047dad8a537e19fa46fdff7c243faf1771",
            "Correction to bodies_pos computation to use top-most walker frame.\n\nPiperOrigin-RevId: 328919156\nChange-Id: I3ef2adabc25a1f214f58d849dd08eabdb4ae8aaa",
            "Bug fix for feature collection.\n\nPiperOrigin-RevId: 328724116\nChange-Id: Ic93dbd1eb7f8fe026f2a3a1132cef01ddac97f50",
            "Document support for Python 3.8.\n\nPin dependency versions in requirements.txt to ones for which Python 3.8 wheels are available on PyPI.\n\nPin protobuf version in setup.py to be no less than the one that was used to generate the precompiled Python source.\n\nPiperOrigin-RevId: 327666647\nChange-Id: If90d5c68afdba5c12aa29155187358a1cea817ac",
            "Use the first spawn position if `randomize_spawn_position` is False.\n\nPiperOrigin-RevId: 327608358\nChange-Id: I7c2dc290adfd475ba23fa289a450ff12de1e34c3",
            "Make dog tail less stiff, more realistic.\nAdd angular momentum sensor.\n\nPiperOrigin-RevId: 326436629\nChange-Id: I1d65d59a5bd1b6571fb2c2fa1bcc91a4b504fa7b",
            "Replace * with = in `dog_assets/extras` filenames for Windows compatibility.\n\nFixes #149\n\nPiperOrigin-RevId: 326021314\nChange-Id: I9704bac058fa5d3cd806e9a8a13720d931765b91",
            "Add mocap joints property to ant.\n\nPiperOrigin-RevId: 324579564\nChange-Id: Ie6a793637854645cbf4b19ecbc5b0158a44a6bab",
            "Add option to exclude features in mocap feature difference computations.\n\nPiperOrigin-RevId: 324400785\nChange-Id: Ie2bd815973c67cc7f5c1bfc53f0fcd966c466b48",
            "Make PyMJCF apply prefixes to body names that are baked into MuJoCo skin files when entities are attached.\n\nPiperOrigin-RevId: 324271183\nChange-Id: I489d7900cda8b2e57f24239919fa4eccd484105c",
            "Add utility for parsing and writing skin files.\n\nPiperOrigin-RevId: 324263841\nChange-Id: Ic798e44fe6a26faf38df1baede7744a30c66f32f",
            "Add an additional camera to the rodent.\n\nPiperOrigin-RevId: 323977167\nChange-Id: Id9ab197b888e12436c64193329e73197f778ed15",
            "Fix mocap_joints property.\n\nPiperOrigin-RevId: 323611500\nChange-Id: I5b4a0d53e56f8bba3ea7a09ebd0ac636a6b42618",
            "Remove unused flags and constants.\n\nPiperOrigin-RevId: 323587211\nChange-Id: I9650939842bb77cc4d59712eafdd3c5b1e95dc40",
            "Add reference visualization for walkers with skin.\n\nPiperOrigin-RevId: 323584596\nChange-Id: I89a613c462f8ba978f46d3ac91636ebde9a71f2a",
            "Call reward fns with only kwargs to fix functionality when rewards don't use all arguments.\n\nPiperOrigin-RevId: 323344600\nChange-Id: I4d5cdf0d945c8268de5b24f93b23550231359fa6",
            "Release motion capture tracking infrastructure and task.\n\nAlso move labmaze dependency to the main dm_control package, which deprecates the use of [locomotion_mazes] extra feature.\n\nPiperOrigin-RevId: 322773188\nChange-Id: I67b1a6fe589a5704651c2ebbf6d1a0795300e40e",
            "Add README for reference pose tasks.\n\nPiperOrigin-RevId: 322764312\nChange-Id: Ia650e785a35eed1aa9c76778999baa5cc2dc1749",
            "Internal change.\n\nPiperOrigin-RevId: 322762119\nChange-Id: Ib770dc3cf7947377a4eb07d342dbe2dabc0bdb05",
            "Relase of jumping ball.\n\nPiperOrigin-RevId: 322333229\nChange-Id: I5efd7f5c78b1daa0ad7b2a9a80a2286030995545",
            "[STAGING] Mocap tracking example.\n\nPiperOrigin-RevId: 322107070\nChange-Id: I3c96796cad036b11f260799534dd13c49443a355",
            "[STAGING] Add CMU mocap data loading code to dm_control.\n\nPiperOrigin-RevId: 321821070\nChange-Id: Ib493bdb43636b642c24462ee87885e2e0faa8c04",
            "Add a property to legacy_base.Walker to indicate joint ordering in motion capture data.\n\nPiperOrigin-RevId: 321795972\nChange-Id: Ica5b554d1680fd41f06e6420205710c9c8fca687",
            "Drop support for Python 3.5, remove enum34 dependency\n\nPiperOrigin-RevId: 321753288\nChange-Id: I00370ef3e7cec95ca57b553bf9a0edf57a5fa8d1",
            "Internal change\n\nPiperOrigin-RevId: 321746460\nChange-Id: Ib96ce14bd217d7b7e7b3bf28442e22e85699a2d9",
            "Add mocap tracking bodies property to walkers.\n\nPiperOrigin-RevId: 321358316\nChange-Id: Ia403f648bbab363189a14519d8a693c54e58893f",
            "Add CMU motion capture subsets.\n\nPiperOrigin-RevId: 321350613\nChange-Id: If51feae59cce96134458f72f179485cdd58ab307",
            "Add reference pose task rewards.\n\nPiperOrigin-RevId: 321340020\nChange-Id: I631e97c8c4bb51caac6d97930a21dc822de7fcb2",
            "Drop support for Python 2.7.\n\nPiperOrigin-RevId: 321254901\nChange-Id: Iff04b7c19dea33b03f50d5ca3402d174e437f1ec",
            "Internal change.\n\nPiperOrigin-RevId: 320948823\nChange-Id: I3b48b1c4d5b7c6a4ff7c4864ca4d62e39d698704",
            "Dog model tweaks.\n- Better scapula kinematics.\n- Fix shoulder extension bug.\n- Modify some joint limits.\n- Decrease global stiffness, modify selected joint stiffness.\n- Increase global armature.\n- Add more contact exclusions.\n\nPiperOrigin-RevId: 320688305\nChange-Id: I6494838c42414ad494a6ccb46369302a2f501cc5",
            "Internal change.\n\nPiperOrigin-RevId: 320659787\nChange-Id: I513c9dbc04c9cdc30dde5806bd8a092156e7a45c",
            "Default to setting `max_geom` to the estimated max number of renderable geoms in the model\n\nThe previous fixed default of 1000 meant that geoms were sometimes omitted for complex scenes.\n\nPiperOrigin-RevId: 319497192\nChange-Id: I852430de4660838557ed51707fbd1ecf2509c03a",
            "Add another degree of freedom to the shoulder joint.\nIncrease joint ranges to allow for sitting.\nMerge ribcage, jaw and skull meshes (ribs and teeth) to bring mesh count to below MuJoCo 2.0's VFS limit on number of binary assets.\n\nPiperOrigin-RevId: 319404054\nChange-Id: I5499c2a91373c183198108236e34581245d9d99f",
            "Add common rigid body transformations.\n\nPiperOrigin-RevId: 319393997\nChange-Id: Iaaa15126914d223d450921517ba55013c5b0e207",
            "Adjust joint parameters in the Dog model and add a site at the tail tip.\n\nPiperOrigin-RevId: 319023707\nChange-Id: Id01097c4567d191c3d7f07933d8998ba56920d01",
            "Update bug IDs\n\nPiperOrigin-RevId: 318444789\nChange-Id: I2f7168e58d586fefb4e32dcaa09d3583d98993db",
            "Temporarily exclude 'dog' domain from control suite due to VFS bug\n\nAlso moved the tests for the control suite into the root directory and gave them more descriptive names\n\nPiperOrigin-RevId: 318066097\nChange-Id: I73c4d707fe8783c47b1a91298244ca3664ed56f1",
            "Remove empty cells, temporarily exclude dog domain due to VFS-related error\n\nPiperOrigin-RevId: 318049052\nChange-Id: I1b414170b8ef167ed4e8e14169b651995267ddac",
            "Update link to point at the new tech report, update BibTeX citation\n\nPiperOrigin-RevId: 318037100\nChange-Id: I4f72c64bd5365780a6cf20151b6e5365a2cb579e",
            "Insert links to the new tech report in the tutorial notebook\n\nPiperOrigin-RevId: 318035209\nChange-Id: I9ecea2f031f9963bf5c5ceedccca32e5c0496819",
            "Downsample the dog skin texture to 1024x1024\n\nThe original high-res texture has been moved to dog_assets/extras/skin_texture_highres.png.\n\nPiperOrigin-RevId: 317927405\nChange-Id: Ifaf95b3a7f1b6450ab5bb3a36eae7de35522fd8c",
            "Exclude the non-decimated Jaco meshes from the distribution\n\nPiperOrigin-RevId: 317909328\nChange-Id: I0d0841318841144480d3420505899d0b199f2f7a",
            "Install optional dependencies in the tutorial notebook (needed for locomotion mazes)\n\nPiperOrigin-RevId: 317899335\nChange-Id: I3dc59a18add54ca41ce0e7a17ca78d9128f11c26",
            "Update the requirements section to accurately reflect our current set of tests\n\nPiperOrigin-RevId: 317891596\nChange-Id: I89bf7ecf34d1c1aaac5d0dad1f42b2b5be566927",
            "Move `tutorial.ipynb` into the top-level directory so that the README link works\n\nPiperOrigin-RevId: 317889484\nChange-Id: Ib9a7a803cb86dc3a8da57d2cf74d1553ac014c6a",
            "Modify the README header to point to the tutorial Colab.\n\nPiperOrigin-RevId: 317877635\nChange-Id: I279fd05b6c5a238378aca65bbfce8a43d197e0db",
            "Allow PyMJCF models with different timestep and solver attributes to be attached by taking min/max values as appropriate.\n\nPiperOrigin-RevId: 317861863\nChange-Id: Ia1db04b003be7aba7aa2d15c8710cea339f869cf",
            "Add a tutorial Colaboratory Notebook for dm_control.\n\nPiperOrigin-RevId: 317757155\nChange-Id: Ie27551cd3181969dc90ec6a2ae9010679f8e4446",
            "Add a suite of manipulation tasks based on the Jaco arm\n\nPiperOrigin-RevId: 317728882\nChange-Id: Ia9b4103d70e0227ea2b4e6ba74058f2093901047",
            "Add `initializers` for initializing the positions of manipulators and props\n\nPiperOrigin-RevId: 317723062\nChange-Id: Ia04a381fd3e9778b6d279f9e553cba372c9366a7",
            "Add a snap-fitting Duplo brick MJCF model\n\nPiperOrigin-RevId: 317691626\nChange-Id: I3858c3a4e5fa3cf720dca90787a6804ce56ab0af",
            "Add an MJCF model of the Kinova Jaco arm\n\nPiperOrigin-RevId: 317681325\nChange-Id: I512f07e20c20408f4fe6177eefe7fa75ae85a724",
            "Add the Dog domain to the Control Suite.\n\nPiperOrigin-RevId: 317658938\nChange-Id: Ibf9a6ba9ab239e045d4d25489377369d6257aaec",
            "Pass `random_state` to observable attributes that are `Variation` objects.\n\nPiperOrigin-RevId: 317105039\nChange-Id: I82c551e1ad99f726c56f96bb9ec189c87c106f8e",
            "Better error message in dm_control's mjcf lib when a namespace is not found.\n\nPiperOrigin-RevId: 316448566\nChange-Id: I3c40138e19b57174b58cd97f9154c8e4a5e29ebe",
            "Add WalkResources function to the io module and add a tag for suite tasks that do not support reward visualization.\n\nPiperOrigin-RevId: 315466582\nChange-Id: I67cad3a80cb1a1eb92f477c1dd280d8c9579dc3e",
            "Add random_state argument to regenerate.\n\nPiperOrigin-RevId: 315267445\nChange-Id: Ide0c6569126d47b189ff1336d2b08f7347941c32",
            "Correct joint limits, move repeated specifications to defaults.\n\nPiperOrigin-RevId: 312116522\nChange-Id: Ic5c385a5d35ad71990b4b53b7027092b4a54e604",
            "Add support for `__neg__` operator for `Variation` objects.\n\nPiperOrigin-RevId: 312058464\nChange-Id: I7aad2af3ca0b4b0ab544e062e765cdd996888a6c",
            "Expose `mj_contactForce()` as a method of `Physics.data`.\n\nPiperOrigin-RevId: 311731186\nChange-Id: Ia8028e12d51d4b14021044ec6048f847f1420259",
            "Typo fix.\n\nPiperOrigin-RevId: 311497959\nChange-Id: I553b4bf37007a43f7b32c94022dd21275e6006ec",
            "Slight repositioning of corner lights to minimise goalpost shadows on the pitch.\n\nPiperOrigin-RevId: 310350088\nChange-Id: I82b9199dc187410288f59b4d19be0203be005959",
            "Replace fieldbox planes with boxes to allow scoring through a hole in the fieldbox behind the goals.\n\nPiperOrigin-RevId: 310156409\nChange-Id: I0d7a013f2eddebd13c56369670f4a5954139d4d4",
            "Adding hoarding to the soccer pitch.\n\nPiperOrigin-RevId: 309716255\nChange-Id: I439451307488de15ddfeddc8b23def6b7d1a6bb3",
            "Support contact avoidance in the uniform initializer.\n\nPiperOrigin-RevId: 309712684\nChange-Id: I6a3d148039849ca0174142964300a19184affad0",
            "Clarify docstring for `keyframe_id` argument to `Physics.reset`\n\nPiperOrigin-RevId: 309393964\nChange-Id: Id360b4b24a925f1ec6cea90c1193eceff8c27b31",
            "Add reset-to-keyframe functionality to Physics.reset()\n\nPiperOrigin-RevId: 309392225\nChange-Id: Id3425c8c057a6ac6d29e2bb8c6b31b1b409b2a04",
            "Add an option for the PositionDetector to retain detections over entire control steps, and modify soccer's Goal class to use this behaviour.\n\nPiperOrigin-RevId: 309253177\nChange-Id: I9f866a1b26b0908867f92abbff6e1b666989e1b5",
            "Make lines on the soccer pitch texture to be consistent with 'no-logo' version.\n\nPiperOrigin-RevId: 308818095\nChange-Id: Ied5a1c60f605e4dec441fbe4e3acc471865c5aee",
            "Remove erroneous python3 linter directives\n\nWe still support python2, so we must use valid python2 syntax everywhere.\n\nPiperOrigin-RevId: 308809444\nChange-Id: I6042fd19ee9f18a5bdc3e871dcc12d8bce154920",
            "Add corner lighting to pitch, increase shadow resolution, restore headlight strength to default.\n\nPiperOrigin-RevId: 308253685\nChange-Id: I8041df00eddbf873bc22924e11acc94a5255539d",
            "Make fieldbox offset configurable.\n\nPiperOrigin-RevId: 308095689\nChange-Id: Ia3eb3f8e5d2c03d00547c029af19fe5622bd82ac",
            "Implement __getitem__ for Composer variations.\n\nPiperOrigin-RevId: 307904417\nChange-Id: I44f9f2ec70878d95a5f6341dac8dc4d03ffe6d0f",
            "Make field invisible, resize ground plane visual to field size and give it the field texture, add non-colliding planes to visualise the perimeter.\n\nPiperOrigin-RevId: 307814181\nChange-Id: Ia29a03e89ab8017edd65fb6bd553339deb922a19",
            "Provide a mechanism to override arbitrary rendering flags\n\nFor convenience I've also changed `MjvScene.override_flags` so that the keys in the overrides dict can be lowercase strings instead of enum values, e.g. `{'wireframe': True}` rather than `{enums.mjtRndFlag.mjRND_WIREFRAME: True}`.\n\nPiperOrigin-RevId: 307632723\nChange-Id: I2b3cb629b3052581bff374a789d2be9c390bf0d1",
            "Fix a data race between export_with_assets_test and export_with_assets_as_zip_test\n\nThese tests were using the same output directory, so we were seeing occasional failures due to colliding output files if they are run concurrently. Instead we can use `TestCase.create_tempdir()`, which automatically generates a unique directory name, and deletes it after the test is finished.\n\nPiperOrigin-RevId: 307412047\nChange-Id: Ie70e69725bc8e4d1148a09107475e9a4b399e479",
            "Adding `reciprocal` function to `rewards.tolerance`.\n\nPiperOrigin-RevId: 307403915\nChange-Id: I006691b2ad397fb6e21b8d9f98d7b60e1855c4e4",
            "Replace PositionDetector with Goal subclass for soccer pitch.\n\nPiperOrigin-RevId: 307384858\nChange-Id: I29d3c7b0e2e018ad5371d7b3ce7f39af45fcce93",
            "Bug fix: rendering flag overrides within `Camera.render` should be transient.\n\nOtherwise rendering once with `segmentation=True` will affect all subsequent RGB frames rendered using the same `Camera` instance.\n\nPiperOrigin-RevId: 307033472\nChange-Id: Ib62e062da19dd96d3c471924d4031646c35677d0",
            "Create a fresh target for each instance of the Single Goal Maze.\n\nPiperOrigin-RevId: 306904370\nChange-Id: Ib34743d5ea497923e7fdc5878d9c550f80d649be",
            "Add `object_velocity` method wrapping `mj_ObjectVelocity`.\n\nPiperOrigin-RevId: 306862733\nChange-Id: Ic3df10a5ae785fdc0ca135dfcecd771daae31ab8",
            "Update Soccer environment to work with ant body.\n\nPiperOrigin-RevId: 306848661\nChange-Id: I44c30928dee5e1bd36027c265cefb7836d0f47e9",
            "Add standard orientation sensor to `base.Walker`.\n\nPiperOrigin-RevId: 306834126\nChange-Id: I07832acd26a7cd07b1893f00e04894672359968f",
            "Add set_velocity() implementation to `boxhead` walker.\n\nPiperOrigin-RevId: 306617621\nChange-Id: I6e119db4a017620220ffae100ddd127d217f389b",
            "Add skybox to soccer domain.\n\nPiperOrigin-RevId: 306497534\nChange-Id: I045aa447f24fa48f7ff8dab46be3f5c36454ca6f",
            "Add `single_sample` option to `UniformPointOnSphere` variation class.\n\nPiperOrigin-RevId: 306427492\nChange-Id: I83214e6f00ad69bb4645764eed009f85ed694051",
            "Release of V2020 cmu humanoid body.\n\nPiperOrigin-RevId: 305302995\nChange-Id: Ie480fc8dc5106b80fa361a9d5b8dbd83b989023e",
            "Adding CMU humanoid walker to __init__.py.\n\nPiperOrigin-RevId: 305010918\nChange-Id: I005411f6cd805480d602bd0bd4e28de894919983",
            "Add soccer pitch textures to pitch entity.\n\nPiperOrigin-RevId: 304382332\nChange-Id: Ibf1ec412f4343480156d24bfa321b879dd679e29",
            "Fix rendering buffer size for MultiplayerTrackingCamera.\n\nPiperOrigin-RevId: 304285450\nChange-Id: Ib902ac05ec18d133e613619f843e97341176343a",
            "Implement all-player tracking cameras for soccer.\n\nThe current soccer cameras either have a fixed viewpoint or follow a single entity at a fixed distance. This CL implements all-player tracking cameras, which zooms in when players are close together and zooms out when they're farther apart. This provides a more detailed view without leaving anything out.\n\nThere isn't a builtin Mujoco camera that does this, so this CL implements camera movement using composer. To avoid performance impact on experiments that aren't logging video, no tracking cameras are used by default.\n\nPiperOrigin-RevId: 304198694\nChange-Id: I4ad8a6cfdc709d4e79b18c19b0e53d4339d9b6f4",
            "Add the Ant walker to dm_control.locomotion.\n\nPiperOrigin-RevId: 303130558\nChange-Id: I1a206a3e68d79f26f3b00da095d9ec016a636565",
            "Internal change for file handling in PyMJCF.\n\nPiperOrigin-RevId: 302905337\nChange-Id: Iea05d1e7a4233ce656f67590741bc434930b2641",
            "Add export_with_assets_as_zip function for exporting MJCFs as .zip.\n\nPiperOrigin-RevId: 302873826\nChange-Id: Ie6444d9088678d907864714f4a8e8e6985d01429",
            "Adding a movable head to the BoxHead walker with an attached camera to allow for egocentric vision.\n\nPiperOrigin-RevId: 302398491\nChange-Id: I0da293b76507a1841d7943327933f14e18499821",
            "Downsize soccer asset `png`s to 64x64.\n\nPiperOrigin-RevId: 301472480\nChange-Id: Ib0c059ed1f98188b58e4a1812a3b8b5e8a5abf07",
            "Fixed incorrect home and away goal positions in pitch arena.\n\nPiperOrigin-RevId: 300833955\nChange-Id: I930ab9721f1a079fcc2549a7b642ef3198a4497b",
            "Update stable versions in `requirements.txt`\n\nPiperOrigin-RevId: 300771433\nChange-Id: I4a62b10474781234b4943536968a794f74c6c9a2",
            "Add egocentric observations of others' end_effectors.\n\nPiperOrigin-RevId: 300648743\nChange-Id: Idce50d18cb2b0bfece620ccd08c7f057cd1db335",
            "Improve lighting in soccer pitch.\n\nPlane geoms in mujoco don't actually have a height, they extend infinitely downward. Instead, the third number in the size argument represents the size of the grid which is used for rendering lighting. Lighting values for the plane are calculated at each grid vertex and interpolated in between. The current large grid size is what's causing the lighting artifacts we've been seeing in soccer videos.\n\nThis CL reduces the grid size, which makes lighting on the ground look much more realistic. It also renames the grid size variable to reflect its true purpose.]\n\nPiperOrigin-RevId: 300565743\nChange-Id: I9c5810cbaec576eeb012f584ad7c1dc659faa4cd",
            "Change `MJCFCamera.array_spec` to return a `BoundedArray` rather than an `Array`\n\nThe bounds for the three rendering modes are:\n\n* RGB: [0, 255]\n* Depth: [0, inf]\n* Segmentation: [-1, 2**31-1]\n\nThe latter two modes have loose bounds, since the exact bounds depend on parameters of the compiled MJCF model, which is not available within the `array_spec` property getter.\n\nPiperOrigin-RevId: 300079494\nChange-Id: I9a1d3efcbd488616e3be83abb874bb2d0294c005",
            "Add missing scipy dependency, remove redundant non-scipy codepath\n\nThis is needed by `dm_control.suite.quadruped`, amongst other things.\n\nPiperOrigin-RevId: 300060178\nChange-Id: I1da9474103320faff02b395a2b80a735c216dc2e",
            "Allow legacy_base.Walker to use multiple initializers.\n\nCurrently, Walker only accepts a single initializer. This means that modular initialization components (such as setting a walker-specific random pose followed by a random rotation) must either be redundantly implemented in each walker-specific initializer, or must be combined with a wrapping initializer.\n\nThis change allows Walker to optionally accept multiple initializers, which are then executed sequentially to initializer the walker.\n\nPiperOrigin-RevId: 299330267\nChange-Id: I84d0cae2fca4972458254d87306cd165b197d6ff",
            "Switch to lower-resolution egocentric camera for boxhead.\n\nPiperOrigin-RevId: 297099733\nChange-Id: Ic4cf639f995751214ef5bfd463ec60367c2c4668",
            "Move implementation of `transform_{vec,xmat}_to_egocentric_frame` from `base.Walker` to `base.Entity`.\n\nNew methods in `base.Entity` are renamed to `global_{vector,xmat}_to_local_frame`.\n\nPiperOrigin-RevId: 296900770\nChange-Id: I99538d7c4e72661d179ddcd4a84bf8464357c99b",
            "Fix incorrect copyright notice\n\nPiperOrigin-RevId: 296467089\nChange-Id: I659d0cd64c5c25717868e8f428609f2aef7d979f",
            "Add rodent tests and correct example comments.\n\nPiperOrigin-RevId: 296170048\nChange-Id: I6938cebc0a10bc09037f799fd8033f7273dc52fa",
            "Initial open-sourcing of rodent and tasks.\n\nPiperOrigin-RevId: 295778102\nChange-Id: I25775d94c799989760350f09a89226196939c3b7",
            "Add `configure_joints` method to the base Entity class.\n\nPiperOrigin-RevId: 295710629\nChange-Id: Id0349a7c601b1d0319c9785fb2843b867ac69bbc",
            "Add equality test to `WalkerPose` objects.\n\nPiperOrigin-RevId: 295552054\nChange-Id: Id92782d14538f0c5e3f60720e38c6542f57c91a3",
            "Fix ball to walker contacts.\n\nball.geom.contype defaults to None, so this was setting contype to 0 - preventing contacts with walkers when their contype is set to 0.\n\nPiperOrigin-RevId: 294666957\nChange-Id: I148fa9ff204e17a1c38b35778b4884cbe6ffd492",
            "Rollback of commit 002de80da47a5e706ce5e7876299533189377ff5.\n\n*** Reason for rollback ***\n\nWe are refactoring these added observations and taking them out of the base class as they are specialized for certain walker bodies only.\n\nPiperOrigin-RevId: 294411276\nChange-Id: I8f091a88ec9c55b109418c692b671b11879a4322",
            "Add a closer camera to the soccer ball.\n\nPiperOrigin-RevId: 294242235\nChange-Id: Iccf9e60ebaf26d4e2a38a2d629910f5897625109",
            "Move joints_vel, sensors_torque, and sensors_touch into legacy_base.Walker.\n\nPiperOrigin-RevId: 294200277\nChange-Id: I393dd969f25c050b45715a2ff748cd9bcf5cf997",
            "Correct the array size of biasprm, dynprm, and gainprm in PyMJCF's schema.\n\nPiperOrigin-RevId: 293363144\nChange-Id: I84deb37d295ac7440e6b359283b57fd883de7177",
            "Avoid dm-tree == 0.1.2 due to a bug (ImportError relating to wrapt)\n\nPiperOrigin-RevId: 292363378\nChange-Id: Ia948faaddd1908006b4a4661ea3eb497390d706c",
            "Add heterogeneous forage to basic_cmu_2019\n\nPiperOrigin-RevId: 291689387\nChange-Id: I9e77e37f279b0c3310a16043cb43ec9b4c6eb9cc",
            "Add a test case to ensure that composer.Environment can produce observation.\n\nPiperOrigin-RevId: 291197789\nChange-Id: I79f516cc93a02b2ff5e68df69ad2097dadaf3308",
            "Make Updater.observation_spec() preserve BoundedArray bounds when possible.\n\nPiperOrigin-RevId: 290595745\nChange-Id: Ibd38af3bc45d15b36ed998952865bd69a29173f3",
            "Modify BoxHead camera control to move pitch and yaw, and add geoms to visualize camera orientation.\n\nPiperOrigin-RevId: 289640211\nChange-Id: I2f1f121bd89a720ef2095b64f61e53629e18df5e",
            "Set znear to ensure egocentric camera truncates less of walker geoms.\n\nPiperOrigin-RevId: 289064808\nChange-Id: I772f193b270e2993ae938149bf0b63aba4f06280",
            "Fix image glitches when rendering position detectors from egocentric cameras.\n\nPiperOrigin-RevId: 288727021\nChange-Id: I69ffd55577535f351313cd1f5587db65e0c18dcf",
            "Allow FieldBox to be added to the environment with ball rebound.\n\n* Removed roof after switching walls to plane geoms since walls are infinitely tall.\n* Disable throw-in position detection if FieldBox is enabled with ball rebound.\n\nPiperOrigin-RevId: 288483845\nChange-Id: I7acc9f4e06327ca601821fc9b914df74abf77611",
            "Fix a bug in `egl_ext.py` due to mismatching `EGLDeviceExt` pointer types\n\nAs of PyOpenGL v3.1.4, `OpenGL.EGL` has its own `EGLDevicesEXT` member, which overrides our assignment of `EGLDeviceEXT = ctypes.c_void_p` when we later do `from OpenGL.EGL import *`. Consequently we end up with mismatching pointer types in the `CFUNCTYPE` wrapper for `_eglQueryDevicesEXT` and in the body of `eglQueryDevicesEXT`. I have bumped the required version of PyOpenGL to 3.4.1 and switched to using `EGL.EGLDevicesEXT` instead of `ctypes.c_void_p`.\n\nCloses #123\n\nPiperOrigin-RevId: 288398964\nChange-Id: If5b1a9dc929d256652e0b50c60adb43d1f98b002",
            "Add note about rodent model (coming soon).\n\nPiperOrigin-RevId: 287972816\nChange-Id: I10a71a09f03bf2091ffcb1eacd2607d80b1f9f56",
            "Added observations appendages_pos and body_quats, which measure the appendage positions and body quaternions in the egocentric frame.\n\nPiperOrigin-RevId: 287965806\nChange-Id: I79ec2278eec6302fd5e441950d1ebdfb1453ce21",
            "Apply os.path.expanduser to the --headers-dir argument of setup.py.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287770839\nChange-Id: I13d9a41090184fbbbe26d92c411669b89023141d",
            "IN README.md, clarify that MJLIB_PATH and MJKEY_PATH should point to the actual files, not the directory.\n\nGitHub issue #122\n\nPiperOrigin-RevId: 287061374\nChange-Id: I80e921464d6d9d95b0c9b8cdc949dae5aaf7658b",
            "Update `README.md` with instructions to install from PyPI and details of our versioning scheme.\n\nPiperOrigin-RevId: 286955599\nChange-Id: I297382764dec2500fcc0996757a471eaef27c5d7",
            "Added math.py with utility functions for quaternions. Refactored parse_amc.py to depend on math.py.\n\nPiperOrigin-RevId: 286594366\nChange-Id: I55e9843680c6e9fdc98c3b5904971eb3603fc9a4",
            "Add package version number based on PiperOrigin-RevId.\n\nPiperOrigin-RevId: 286587932\nChange-Id: I8773a3003e5cbc76491643dc1ba6a5ac6ed13e0d",
            "Include *.amc and *.skn as package_data in setup.py.\n\nPiperOrigin-RevId: 286367049\nChange-Id: I980964df603b434c617972b38ac699b528b8df92",
            "Include *.msh as package_data in setup.py.\n\nPiperOrigin-RevId: 286283658\nChange-Id: I6b267902604df8aafe07e747448508d41d784a42",
            "Use `six.moves.map` in `autowrap/header_parsing.py`.\n\nPiperOrigin-RevId: 286155000\nChange-Id: Iafc93d998ee747e548fec1452489c19c85b21cab",
            "Split out non-essential methods in `base.Walker` into `legacy_base.Walker` to keep the base API clean.\n\nAll current walkers have been modified to inherit from `legacy_base.Walker`.\n\nPiperOrigin-RevId: 285169387\nChange-Id: Iaaf3d3ffa0ad9451d5b0a7723cbad11e360b3358",
            "Enable updating go-to-target target position relative to current walker position (no change to default behavior).\n\nPiperOrigin-RevId: 284985301\nChange-Id: Ifccdafde9fadedf863f2ead304c6bee299978568",
            "dm_control: Import of refs/pull/121/head\n\nCloses #121\n\nPiperOrigin-RevId: 284276886\nChange-Id: I3ac8abb8314f0cc8a15d740b516f06ec0f2ba1f2",
            "Suppress exceptions due to physics warnings when initializing observation updaters\n\nIn order to initialize the buffers used by the observation updater we need the shape and dtype of the array returned by each observation callable. We usually get this by calling the observation callable and inspecting the array it returns. For `MJCFFeature` observations, this may involve calling `physics.forward` if the feature depends on a field that requires recalculation due to other changes to the physics state. However, at the point when this happens there is no guarantee that the physics state will be valid, since it has not yet been fully initialized by `initialize_episode`. Because of this, the call to `physics.forward` might raise a `PhysicsError`.\n\nIn practice it does not matter whether or not the physics state is valid, since we only care about the shape and dtype of the observation array, not its contents. We therefore suppress `PhysicsError`s originating from this initial call to the observation callable.\n\nPiperOrigin-RevId: 283497708\nChange-Id: I0c7b1bf1e968dadfe8101fbcbe072b1687f5a4de",
            "Correct to generic texture and material name.\n\nPiperOrigin-RevId: 281310221\nChange-Id: I8634448185119723cc8f0efcbc60f4aafb367c01",
            "Add support for evaluating arbitrary nested structures of \"variation\" callables\n\nThis introduces a dependency on `dm-tree`.\n\nI also corrected the name of the `dm-env` package in `setup.py` and `requirements.txt` (the module is called `dm_env`, the package is called `dm-env`).\n\nPiperOrigin-RevId: 280667371\nChange-Id: I5d23f354482fa9e8cad84e88bba54f20d25cf3d3",
            "Add examples for go-to-target and maze-forage tasks.\n\nPiperOrigin-RevId: 279772854\nChange-Id: I42cd7334a3e86baf0a4e97e2deb36a15c6dd3503",
            "Initial commit of task for going to a target in a maze.\n\nPiperOrigin-RevId: 279355909\nChange-Id: Iea7cc197deab05513a43c83157fd46eb38c2019b",
            "Remove unused function.\n\nPiperOrigin-RevId: 279355261\nChange-Id: Ida7fbce1e20c84c125b0410fc5604a6e8610669b",
            "Initial commit of target (\"prop\") object.\n\nPiperOrigin-RevId: 278634513\nChange-Id: I8cbf0ef014eb6084a1831351dc4a97c4b29e504c",
            "Initial commit of maze arena.\n\nPiperOrigin-RevId: 278628475\nChange-Id: I0937ede681dde865753e70291562a5c452700c41",
            "Provide aesthetic option to make environments have an outdoor \"natural\" ground texture and skybox.\n\nPiperOrigin-RevId: 278394238\nChange-Id: Ic73cdaaa47c1b62e94e9821461911f4194272956",
            "Update required version of pillow to 6.2.0 due to CVE-2019-16865\n\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-16865\n\nPiperOrigin-RevId: 276712484\nChange-Id: Id2e25eff0dab32939970c22b24842cbf951f4e90",
            "Provide simple script to launch viewer with example environment.\n\nPiperOrigin-RevId: 276031990\nChange-Id: Ifc9aae48fccb3b04ec2accaa2a462d519f334d35",
            "Add binary MSH format support for PyMJCF meshes.\n\nReference:\nhttp://www.mujoco.org/book/XMLreference.html#mesh\nPiperOrigin-RevId: 276031678\nChange-Id: I5512c21d7a85060bcdf3506c54f7e0da4aa02447",
            "An environment wrapper to expose Mujoco step timing profile data.\n\n(This uses Python's time.time() for now, which may be fairly expensive. A native function would be preferable.)\n\nPiperOrigin-RevId: 275541994\nChange-Id: I1fc7188f2cdde9e2b213e07532cc9f175b5f203d",
            "Implicitly copy `task_kwargs` in `suite.build_environment`\n\nPiperOrigin-RevId: 275218644\nChange-Id: I527b4388789f1157157ec7da8cb32734bae90dfd",
            "Add tracking for player's forward velocity.\n\nPiperOrigin-RevId: 274799877\nChange-Id: I3581cb746033ce77452735842ac2cd1a7be58ee9",
            "Check if a renderer has been instantiated.\n\nPiperOrigin-RevId: 274353223\nChange-Id: I304776825994dcd86a961ae9a6ac1bc973ede0e9",
            "dm_control: Import of refs/pull/115/head\n\nResolves #115\n\nPiperOrigin-RevId: 274194230\nChange-Id: I21c742a868be226da5bd61c8ffc60f43b314d1f0",
            "Use Walker's apply_action callback instead of setting ctrl directly.\n\nPiperOrigin-RevId: 273626416\nChange-Id: I6f7ba74b03af24ed176997da0e9918f5280bd887",
            "Only execute the observation callable to infer array spec if one is not explicitly specified.\n\nPiperOrigin-RevId: 272622380\nChange-Id: I59548a82f6e21ef93ff37d6a4843a3a336499ce0",
            "Added a property to get the Pitch's ground geom.\n\nPiperOrigin-RevId: 271538587\nChange-Id: Ib6ecd7537db0a56361f63ae3ee3b54f43833cbbb",
            "Extract FullscreenQuadRenderer class to a dedicated file.\n\nPiperOrigin-RevId: 269292716\nChange-Id: Ib0798910b99ce70d41ffacdf18932f3bbb30897f\n\nRemove trailing whitespace in dm_control/viewer/gui/__init__.py\n\nPiperOrigin-RevId: 271228095\nChange-Id: I7e60f4038b08b884c04e9be90559b02ff2326542",
            "Add institution to BibTex citation.\n\nPiperOrigin-RevId: 269165658\nChange-Id: Ib2044f60f4ece8efa06d0724e245d582c7d1480f",
            "Add BibTex citation to README.\n\nPiperOrigin-RevId: 268879720\nChange-Id: I9b5680c02930ca114dd9d803ff45600aa5cc0038",
            "dm_control: Import of refs/pull/113/head\n\nPiperOrigin-RevId: 266227722",
            "Change implementation details of private methods composer.Environment.{_make_physics,_recompile_physics} and rename them appropriately.\n\nPiperOrigin-RevId: 263517933",
            "Suppress \"This executor has already been terminated\" warnings during process exit.\n\nFixes #79\n\nPiperOrigin-RevId: 263407703",
            "Make the lowered non-gaps ground-plane invisible.\n\nPiperOrigin-RevId: 263183194",
            "Replace references to \"Domain Explorer\" with \"dm_control viewer\".\n\nDomain Explorer is the name for an internal version of the viewer which has a slightly different feature set.\n\nPiperOrigin-RevId: 263108802",
            "Allow conflicting values of njmax and nconmax when attaching two MJCF models.\n\nWhen the values of these attributes are conflicting, PyMJCF takes the larger value of the two models. On detach, the original values are _not_ restored.\n\nPiperOrigin-RevId: 262441029",
            "dm_control: Import of refs/pull/110/head\n\nDerive the names of `mesh`, `texture` and `hfield` assets from the filename if the `name` attribute is not specified explicitly. This is for consistency with the behaviour of MuJoCo's compiler: http://www.mujoco.org/book/XMLreference.html#asset.\n\nPiperOrigin-RevId: 262373722",
            "Add non-trivial actions to the environment_hooks_test.\n\nPiperOrigin-RevId: 262361629",
            "Replace environment interface code with dm_env import.\n\nPiperOrigin-RevId: 260989812",
            "Add an indexing capability to `observable.MJCFFeature`, and replace existing `observable.Generic` that are used purely to perform array slicing.\n\nPiperOrigin-RevId: 259917242",
            "Raise error if _find_non_contacting_height() does not terminate. This should never happen for this task but is added to safeguard in case of future modifications.\n\nPiperOrigin-RevId: 258642433",
            "Add site sensors in position detector.\n\nPiperOrigin-RevId: 258537866",
            "Add logging to import logic in dm_control/_render/__init__.py\n\nPiperOrigin-RevId: 258344886",
            "Expose `disable_walker_contacts` as an option in soccer loader.\n\nCloses #105.\n\nPiperOrigin-RevId: 255381790",
            "Return a different np.ndarray instance for each player's reward\n\nThis is safer than returning a list of pointers to the same array, which could have unintended consequences if the shared array is modified in place.\n\nPiperOrigin-RevId: 255201761",
            "Fix some nagging Deprecation and FutureWarnings\n\nPiperOrigin-RevId: 254724757",
            "Implement environment reward based on goals scored/conceded at each timestep\n\nPreviously the reward returned by the environment was always 0 at every timestep (in practice this did not matter, since we were deriving shaping rewards from statistics in the observations rather than using the environment reward). I have also implemented `get_reward_spec` and `get_discount_spec` methods for the soccer task, and added some information to the `README.md` describing how rewards and episode terminations work for the soccer environment.\n\nPiperOrigin-RevId: 254631394",
            "Let _get_default_action(action_spec) support action_specs that are instances of collections.Mapping.\n\nPiperOrigin-RevId: 253011287",
            "Provide user options for corridor terminations.\nChange default behavior of gaps to have termination when walker falls off the platforms.\nRemove action cost.\n\nPiperOrigin-RevId: 252791634",
            "Defer creation of rendering contexts until `Physics.contexts` is first accessed\n\nThis avoids wasting GPU resources if no rendering is actually being performed (#96).\n\nPiperOrigin-RevId: 252495234",
            "Change the default upright_pose to use qpos0 values from mjModel instead.\n\nThis makes the upright pose initializer behave the same way as MuJoCo's internal reset logic.\n\nPiperOrigin-RevId: 252412607",
            "Add a GoToTarget task to dm_control/locomotion\n\nPiperOrigin-RevId: 252026684",
            "Remove erroneous comment.\n\nPiperOrigin-RevId: 251439880",
            "Ensure soccer initializer sets position of walker correctly regardless of walker initializer.\n\nThis replaces the assumption that the walker pose initializer sets the (x, y) position to (0., 0.).\n\nAlso added unit tests for UniformInitializer.\n\nPiperOrigin-RevId: 250300853",
            "Ensure that array specs unhashable\n\nTwo specs that compare equal can have different hash values, which can lead to strange behavior with hash-based data structures. This is only an issue in Python2 - in Python3, objects that lack an explicit `__hash__` method are already treated as unhashable.\n\nPiperOrigin-RevId: 249798603",
            "Return 0 rather than NaN for teammate stats if there is no teammate.\n\nPiperOrigin-RevId: 248052410",
            "Allow reflectance of floor to be overriden.\n\nPiperOrigin-RevId: 247581685",
            "Split the helper classes in environment_hooks_test.py into a separate source file.\n\nPiperOrigin-RevId: 247295463",
            "Fix links to README.md files.\n\nPiperOrigin-RevId: 246981334",
            "Fix scaling and placement of images in locomotion/README.md\n\nPiperOrigin-RevId: 246521212",
            "Link to README files for locomotion and soccer from top-level README\n\nPiperOrigin-RevId: 246516818",
            "Release tasks for ICLR paper \"Hierarchical Visuomotor Control of Humanoids\".\n\nPiperOrigin-RevIds: 246277982, 246292589",
            "Fix broken formatting of table in dm_control/README.md\n\nPiperOrigin-RevId: 246189376",
            "Add missing numpy import to Quickstart for soccer.\n\nPiperOrigin-RevId: 246150196",
            "Add `ground_contact_geoms` property to the Walker base class.\n\nThis property is used to determine geoms that are allowed to be in contact with the ground during \"normal\" locomotion.\n\nPiperOrigin-RevId: 246114030",
            "Make a readonly copy of each argument of `WalkerPose`, and turn `WalkerPose` into a class.\n\nPiperOrigin-RevId: 246039614",
            "Rename `end_effector_ids` property to `end_effector_geom_ids`.\n\nPiperOrigin-RevId: 246036922",
            "Make `shift_pose` work with arbitrary numeric inputs.\n\nCurrently, the method fails if e.g. a list if integers is passed in to the `quaternion` argument.\n\nPiperOrigin-RevId: 245761218",
            "Revert memoization of stringified attribute values\n\nThe memoisation logic cannot detect changes to array attributes (i.e. mutations of an existing NDArray rather than assignments into the attribute). This means that for some users the generated XML isn't correct updated when an array attribute is partially modified.\n\nPiperOrigin-RevId: 245283278",
            "Add nose-xunitmp to requirements.txt\n\nThis allows us to parallelize the test suite whilst still collecting the results in xunit format.\n\nPiperOrigin-RevId: 245235542",
            "Add video and description for quadruped domain.\n\nPiperOrigin-RevId: 245205938",
            "Allow passing in `random_state` to `soccer.load`\n\nPiperOrigin-RevId: 245017266",
            "Document the versions of Ubuntu and Python that we test `dm_control` against\n\nCombination of PiperOrigin-RevIds: 244846645, 245024282",
            "Avoid some repeated type checking, speed up `_synchronize_from_backing_array`\n\nPiperOrigin-RevId: 243967627",
            "Randomize the cheetah's internal joints at the start of each episode\n\nThis randomization has quite a subtle effect on the initial state since we run the simulation forward for 2 seconds at the start of each episode, allowing the joints to settle in a similar position across episodes.\n\nI also added a regression test that checks that two consecutive initial states have different observations.\n\nCloses #86\n\nPiperOrigin-RevId: 243584776",
            "Clean up some unnecessary `[:]` indexing\n\nPiperOrigin-RevId: 243279693",
            "Speed up `Physics.set_control`\n\nPiperOrigin-RevId: 243272069",
            "Adding a quadruped to the Control Suite.\n\nBased on the 'ant' model introduced in [1]. Main modifications to the body are:\n- 4 DoFs per leg, 1 constraining tendon.\n- 3 actuators per leg: 'yaw', 'lift', 'extend'.\n- Filtered position actuators with timescale of 100ms.\n- Sensors include an IMU, force/torque sensors, and rangefinders.\n\nFour tasks:\n- `walk` and `run`: self-right the body then move forward at a desired speed.\n- `escape`: escape a bowl-shaped random terrain (uses rangefinders).\n- `fetch`, go to a moving ball and bring it to a target.\n\nAlso:\n- Standardised the material for target sites.\n\n[1] https://arxiv.org/abs/1506.02438\n\nCloses #44\n\nPiperOrigin-RevId: 243240616",
            "Don't count team scores when the time size is zero.\n\nPiperOrigin-RevId: 242898883",
            "Make reward visualisation colouring more sensitive for rewards near 1.0.\n\nPiperOrigin-RevId: 242845482",
            "Reset geom colors to defaults in initialize_episode when visualize_rewards == True\n\nOtherwise in the first frame of each episode they will be colored according to the reward from the final step of the previous episode.\n\nPiperOrigin-RevId: 242697158",
            "Catch and ignore GLError in the PyOpenGL implementation of create_initialized_headless_egl_display.\n\nFixes #70\n\nPiperOrigin-RevId: 240153693",
            "dm_control: Import of refs/pull/81/head\n\nModify viewer runtime to detect when the physics has been \"reloaded\" via one of the `reload_from_*` methods.\n\nPiperOrigin-RevId: 239807896",
            "Deprecate `composer.Environment.step_spec`, add `reward_spec` and `discount_spec`\n\nPiperOrigin-RevId: 239807451",
            "Add `reward_spec`, `discount_spec` and `make_step_spec` helper, remove `step_spec`\n\nPiperOrigin-RevId: 239645208",
            "Increase threshold and number of iterations for `buf_to_npy` leak test\n\nPiperOrigin-RevId: 239484692",
            "Memoize stringified attribute values and remove `isinstance` calls to reduce cost.\n\nPiperOrigin-RevId: 239086106",
            "Performance optimization: remove unnecessary reentrant lock from `CachedProperty`\n\nPiperOrigin-RevId: 239083279",
            "Cache the `element_id` in a Physics binding.\n\nPiperOrigin-RevId: 239075550",
            "Performance optimization: avoid NDArray allocations when checking for MuJoCo warnings.\n\nPiperOrigin-RevId: 239073897",
            "Add egocentric cameras to humanoid models\n\nPiperOrigin-RevId: 238973645",
            "Modify standard observables to only perform `physics.bind` at the beginning of an episode.\n\nPiperOrigin-RevId: 238471699",
            "Reduce the font size used in the viewer\n\nWith the old font size the help menu was sometimes being truncated.\n\nCombination of PiperOrigin-RevIds: 238005911, 238202961",
            "Make rangefinder rendering disabled by default.\n\nPiperOrigin-RevId: 237674201",
            "Allow overriding keys and querying by intersections of tags in `TaggedTasks`\n\nPiperOrigin-RevId: 236629556",
            "Change pitch parameters from goal_length_ratio to goal_size.\n\nPiperOrigin-RevId: 236093539",
            "Make pitch walls transparent.\n\nPiperOrigin-RevId: 235961702",
            "Rename `soccer.*Observables` --> `soccer.*ObservablesAdder`\n\nThis is to disambiguate them from `composer.Observables`, which has different semantics.\n\nPiperOrigin-RevId: 235561159",
            "Make GLFW the default rendering backend\n\nDefaulting to EGL means that the viewer won't work unless the `MUJOCO_GL` environment variable is set to `glfw` (#78). I have also updated the README to make this a bit clearer.\n\nPiperOrigin-RevId: 235502880",
            "Allow cameras to take a max_geom argument, in order to support scenes with many geoms.\n\nPiperOrigin-RevId: 235414877",
            "Add tracking cameras to the soccer ball.\n\nPiperOrigin-RevId: 234987072",
            "Make `after_compile` the first thing that is executed immediately after MJCF compilation.\n\nAs part of this change, `_recompile_physics` no longer calls `physics.reset()`, so that the reset only happens once at the start of an episode.\n\nPiperOrigin-RevId: 234981142",
            "Update README for soccer.\n\n* Add a link to the main README for installation instructions\n* Add a screenshot image of the soccer environment.\n* Update path to website.\n\nPiperOrigin-RevId: 234980652",
            "Replace dependency on pypng with PIL/Pillow\n\nAlso fixed incorrect implementation of alpha blending.\n\nPiperOrigin-RevId: 234971572",
            "Release dm_control.locomotion, containing a multi-agent soccer environment\n\nPiperOrigin-RevId: 234823536",
            "Rename `initialize_episode` --> `__call__` in `composer.Initializer`\n\nPiperOrigin-RevId: 234775654",
            "Rename `dm_control.render` -> `dm_control._render`\n\nThis is to reflect the fact that it should be considered private.\n\nPiperOrigin-RevId: 234454137",
            "Rename `ImagesNotClose` --> `ImagesNotCloseError`\n\nPiperOrigin-RevId: 234116673",
            "Add proper handling of function pointer types in autowrap.\n\nCurrently, all function pointers are marshaled as `ctypes.c_void_p`, and `set_callback` always wraps a Python callable into a CFUNCTYPE with a fixed signature. However, different MuJoCo callbacks have different function signatures. In particular, sensor and actuator callbacks take in an additional argument compared to the \"generic\" function pointer type.\n\nIn this CL, we modify autowrap to generate code that wraps callbacks into CFUNCTYPE with the correct signature. The generated wrapper code exposes callbacks (both global ones and those that appear in UI-related structs) as Python properties, where the getters and setters automatically handles the wrapping of Python callables.\n\nPiperOrigin-RevId: 233789558",
            "Remove unused `.name` property from `composer.Task` and `composer.Environment`\n\nPiperOrigin-RevId: 233381516",
            "Add test for invalid camera rotation matrix when quaternion in XML is not normalized\n\nProviding an un-normalized camera quaternion in the XML results in an invalid rotation matrix within `cam_xmat` (det != 1). This is not the case for bodies, geoms, or sites. This should be fixed upstream in MuJoCo. For now I have added a test case with `expectedFailure`.\n\nPiperOrigin-RevId: 232455629",
            "Adding a segmentation camera to the mujoco wrapper.\n\nCombination of PiperOrigin-RevIds: 232317383, 233379579, 232460303",
            "Update `requirements.txt` to most recent working package versions from PyPI\n\nPiperOrigin-RevId: 232312115",
            "Expose the array of `mjvGeom` structs in `mjvScene->geoms` as a `recarray`\n\nThis enables vectorized access to the struct fields.\n\nPiperOrigin-RevId: 232032245",
            "Change implementation of Entity.attachment_site to not reference a private attribute.\n\nEntities are not required to have a `_mjcf_root` attribute. In particular, `ModelWrapperEntity` does not have that.\n\nFixes #73\n\nPiperOrigin-RevId: 231412701",
            "Fix bug preventing humanoid_CMU tasks from being loaded in explore script.\n\nWhen looking up the tasks from the string provided, the explore script was converting all task strings to lower case. However, humanoid_CMU (and all associated tasks) contain 'CMU' in capital letters, and therefore could not be loaded.\n\nPiperOrigin-RevId: 231215268",
            "Add support for multi-array action_specs in viewer.\n\nPiperOrigin-RevId: 230801344",
            "Add option to shift_pose to rotate velocities as well.\n\nPiperOrigin-RevId: 230716764",
            "Fix bug in dm_control/viewer/renderer.py.\n\nPiperOrigin-RevId: 230703780",
            "Add tests for set_pose and shift_pose\n\nPiperOrigin-RevId: 230677378",
            "Add an option for the Environment to ignore episode reset failures and retry.\n\nThis is useful for when failure in `initialize_episode` (e.g. IK does not converge) means that `initialize_episode_mjcf` needs to be run again.\n\nPiperOrigin-RevId: 227865185",
            "Clarify that STRUCT_DECL is non-nested, only used within the context of unions\n\nPiperOrigin-RevId: 227673730",
            "Add a Biased Random Walk distribution.\n\nPiperOrigin-RevId: 225989697",
            "Recursively include all data files rather than listing them separately per package\n\nPiperOrigin-RevId: 225347602",
            "Update docstrings to better reflect observation types that are used in practice\n\nPiperOrigin-RevId: 225346998",
            "Add 'rgba' column indexing to FieldIndexer class.\n\nPiperOrigin-RevId: 224327379",
            "Fix link formatting in README.md due to line break.\n\nPiperOrigin-RevId: 223523251",
            "Update README.md to document headless hardware rendering support via EGL.\n\nPiperOrigin-RevId: 223519939",
            "Add missing `priority` attribute to `default/geom` schema element.\n\nPiperOrigin-RevId: 223500267",
            "Add support for Nvidia hardware-accelerated headless rendering via EGL.\n\nAfter this change, headless EGL is used by default on machines with an Nvidia GPU installed.\n\nCloses: #63\nPiperOrigin-RevId: 223498983",
            "Fix a bug in termination logic of PassthroughRenderExecutor.\n\nThe `terminate` method of render executor classes no longer return the result of `cleanup_callable` since this isn't being used anywhere.\n\nPiperOrigin-RevId: 223403588",
            "Modernize various test constructs.\n\n* Replace deprecated assertRaisesRegexp with assertRaisesRegex.\n* Replace assertEqual(len(foo), len(bar)) with assertLen(foo, len(bar))\n* Add super calls to setUp and tearDown methods.\n\nPiperOrigin-RevId: 223390138",
            "Replace deprecated `logging.warn` with `logging.warning`\n\nPiperOrigin-RevId: 223332047",
            "Add an option to exclude self from iter_entities.\n\nPiperOrigin-RevId: 222638361",
            "Don't conflate `mjtRndFlag` with `mjtVisFlag`\n\n`mjtRndFlag` should be used to index into `mjvScene->flags`, whereas `mjtVisFlag` should be used to index into `mjvOption->flags`.\n\nPiperOrigin-RevId: 221105358",
            "Adding missing `joint/group` attribute to joint default schema.\n\nPiperOrigin-RevId: 221102085",
            "Ensure that GL libraries are loaded before libmujoco on Linux\n\nFix for segfaults reported in #24 and #58.\n\nPiperOrigin-RevId: 221092123",
            "Fix formatting of very long arrays in generated XML\n\n`np.array2string` truncates very long arrays (such as mesh vertices) by inserting '...' to represent the skipped elements. We now use `np.savetxt` instead, with a more precise string representation for floats.\n\nPiperOrigin-RevId: 220796989",
            "Factor out the creation of observation updater from the _recompile_physics method.\n\nPiperOrigin-RevId: 220705572",
            "The `polycoef` attribute of a tendon equality constraint should be an array of length 5.\n\nPiperOrigin-RevId: 220265194",
            "Fix a typo in the docstring for `viewer.launch`\n\nPiperOrigin-RevId: 219390916",
            "Add an environment wrapper that applies Gaussian noise to actions\n\nThis means that the transition dynamics of the wrapped environment are no longer deterministic. I have added an `--action_noise` flag to the `explore.py` script that can be used to visualize the effect of adding different amounts of action noise.\n\nPiperOrigin-RevId: 219046964",
            "Fix a segfault that occurs when closing the viewer window\n\nCloses #51\n\nPiperOrigin-RevId: 218836266",
            "Remove non-module imports from IK code\n\nPiperOrigin-RevId: 218375897",
            "In MuJoCo 2.0, solimp is 5 numbers.\n\nPiperOrigin-RevId: 218321031",
            "Remove unnecessary comments from imports\n\nPiperOrigin-RevId: 218308970",
            "Import only modules within dm_control/viewer/\n\nPiperOrigin-RevId: 218249222",
            "Fix a bug in PassthroughRenderExecutor that causes a race condition when repeatedly instantiating and destroying rendering contexts.\n\nFixes: #48\nPiperOrigin-RevId: 217892325",
            "Log a message to indicate the MuJoCo library version.\n\nPiperOrigin-RevId: 217848969",
            "Add a regression test for detecting constant components in observations\n\nPiperOrigin-RevId: 217848274",
            "Overhaul observation spaces for the manipulator and stacker tasks\n\n* The 'hand' and 'boxes' observations in the stacker domain (and the 'hand' observation in the manipulator) always returned constant values since they were based on `model.body_{pos,quat}`, which is the position and orientation of in the initial configuration of the model rather than `data.x{pos,quat}` which gives the current position during simulation.\n* The position and orientation of the target in the stacker task were not observable (at least when using features rather than pixels).\n* The `position` and `boxes` observations contained redundant information about the cartesian positions and orientations of the boxes.\n\nAs well as fixing these issues, I have tried to disentangle the various observation components, and generally cleaned up the task implementations a bit. All joint position observations in these domains are now returned as (sin, cos) for consistency, rather than only splitting unbounded joints. I also renamed the `observable` and `observe_target` arguments to `fully_observable` for consistency and clarity.\n\nPiperOrigin-RevId: 217845353",
            "Remove constant z-component from reacher observations\n\nPiperOrigin-RevId: 217722753",
            "Don't leak file descriptors in `lqr.py`\n\nPiperOrigin-RevId: 217559468",
            "Remove unnecessary `zaxis` from tracking cameras\n\nPiperOrigin-RevId: 217483519",
            "Simplify import logic in `dm_control/viewer/gui/__init__.py`\n\nPiperOrigin-RevId: 217473775",
            "Make the `.copy()` method of `SynchronizingArrayWrapper` return a normal `numpy.ndarray`\n\nPreviously it returned a broken `SynchronizingArrayWrapper` that wasn't associated with any `Physics` instance.\n\nAlso:\n- We now raise an exception when attempting to pickle a `SynchronizingArrayWrapper` instance, since they cannot be safely pickled.\n- Made `SynchronizingArrayWrapper` public\n- Added `__slots__` to `SynchronizingArrayWrapper`\nPiperOrigin-RevId: 217307050",
            "Update README.md with MuJoCo v2.0-specific paths and filenames\n\nPiperOrigin-RevId: 217221608",
            "Replace some unnecessary string concatenation in `c_declarations.py`\n\nI also removed some unnecessary whitespace from the generated bindings, and did some other aesthetic cleanup.\n\nPiperOrigin-RevId: 217202498",
            "Updated the docstring for `mjcf.Physics.bind`\n\nPiperOrigin-RevId: 217200519",
            "Upgrade schema.xml for MuJoCo 2.0.\n\nPiperOrigin-RevId: 217198960",
            "Update MuJoCo bindings to work with MuJoCo v2.00\n\n* Updated the name and default path to the shared library in `dm_control/mujoco/wrapper/util.py`. As of 2.0 these are now platform-dependent.\n* `mjv_select` now outputs the ID of the selected geom or skin.\n* Updated the reference images and `image_utils_test.py` due to a change affecting how shadows are rendered. An unusual feature of the humanoid model is a light positioned inside one of the torso geoms. Previously this light did not cast any shadows, whereas now it does.\n* Added functionality to `mjcf.Physics` that automatically disables certain performance optimizations when new values are written to `mjModel->{body,site,geom}_{pos,quat}` and `mjModel->body_{ipos,iquat}`. These performance optimizations would otherwise cause the new values to be ignored by MuJoCo's simulation pipeline.\n\nPiperOrigin-RevId: 217129080",
            "Update `struct_indexer` documentation: it no longer returns a namedtuple.\n\nPiperOrigin-RevId: 217113157",
            "Ensure that consecutive observations are not views onto the same memory addresses\n\nThis means that observation arrays will not be mutated when the environment steps (#34).\n\nPiperOrigin-RevId: 216901616",
            "Add a defensive call to `MjrContext.free()` in the quickstart example code\n\nThis is a temporary workaround for issue #48.\n\nPiperOrigin-RevId: 216900306",
            "Change environment in README to match the animation.\n\nPiperOrigin-RevId: 216665152",
            "Fix the relative path to the GIF in the viewer README\n\nPiperOrigin-RevId: 216590116",
            "Add `dm_control.composer`, a Python framework for constructing MuJoCo-based RL environments\n\nNote: this is a dummy revision ID that is sufficiently new to include all the changes here. This change doesn't correspond to any single revision in Piper.\n\nPiperOrigin-RevId: 216541434",
            "Add `dm_control.mjcf`, a library for manipulating MuJoCo MJCF models",
            "Add `dm_control.viewer` an interactive viewer for MuJoCo environments",
            "Fix `image_utils_test.py` so that it will pass when using hardware rendering\n\nI also fixed the seed of numpy's RNG seed to remove any possibility for non-determinism.\n\nPiperOrigin-RevId: 216336262",
            "Use the PassthroughRenderExecutor when using GLFW.\n\nPiperOrigin-RevId: 216331137",
            "Add userdata to humanoid test model.\n\nPiperOrigin-RevId: 216327085",
            "Use custom containers rather than namedtuples for `Physics.named.{model,data}`\n\nIn versions before Python 3.7, CPython has a limit of 255 explicitly passed arguments in a call. We will run into this limit when attempting to create a `model` namedtuple in MuJoCo v2.00, since `mjModel` has 256 named indexer fields.\n\nPiperOrigin-RevId: 216243607",
            "Use `subtreelinvel` sensors rather than indexing `mjData->subtree_linvel` to get COM velocity\n\nPiperOrigin-RevId: 216243403",
            "When using GLFW on Mac, only use the main thread for tests that create GL contexts\n\nOn Mac it is only safe to create GLFW windows on the main thread.\n\nPiperOrigin-RevId: 215909208",
            "Generate separate reference images for hardware and software rendering backends\n\nThe output of software rendering differs slightly from that of hardware rendering because OSMesa lacks support for multisample antialiasing, which is enabled automatically in MuJoCo.\n\nPiperOrigin-RevId: 215905571",
            "Replace a couple of deprecated assertions in `control_test.py`\n\nPiperOrigin-RevId: 215545954",
            "Remove the memory-checking context manager\n\nThis code is currently unused, and does not work on platforms other than Linux.\n\nPiperOrigin-RevId: 215545896",
            "Add an environment variable for selecting a specific OpenGL backend\n\nI removed the old `DISABLE_MUJOCO_RENDERING` environment variable since we now support software rendering on headless machines. I also updated the Linux documentation with installation instructions for GLX and OSMesa.\n\nPiperOrigin-RevId: 215386215",
            "Expose the `_scene` attribute of `mujoco.Camera`\n\nThis allows access to the rendering flags, stereo more, GL cameras etc.\n\nPiperOrigin-RevId: 214918490",
            "Import only modules in tests.\n\nPiperOrigin-RevId: 212638813",
            "Resolve inconsistent exception paradigm.\n\nPiperOrigin-RevId: 207724232",
            "Add support for named indexing into arrays with dimension `na` (e.g. `mjData->act`)\n\nThese dimensions correspond to the subset of actuators that have internal state.\n\nPiperOrigin-RevId: 207272312",
            "Add a utility module for performing inverse kinematics on MuJoCo models\n\nPiperOrigin-RevId: 207116592",
            "Expose arrays of C structs as numpy recarrays\n\nThis allows operations over multiple contacts, warnings etc. to be vectorized.\n\nPiperOrigin-RevId: 205838148",
            "Replace `six.moves.xrange` with `six.moves.range`\n\nPiperOrigin-RevId: 204824655",
            "Add environment_kwargs to all remaining domains and add test coverage.\n\nPiperOrigin-RevId: 203459169",
            "Disable multithreaded rendering tests for the GLFW backend\n\nPiperOrigin-RevId: 203262688",
            "Fix incorrect asymmetric shoulder joint limits in CMU humanoid body.\n\nPiperOrigin-RevId: 203031824",
            "Split documentation by submodule,fix broken links\n\nCombination of PiperOrigin-RevIds: 202624113, 204304457",
            "Remove dm_control.utils.corruptors\n\nPiperOrigin-RevId: 202449557",
            "OSMesa rendering context loaded via PyOpenGL.\n\nPiperOrigin-RevId: 202105657",
            "Double the RSS growth tolerance in `util_test`\n\nPiperOrigin-RevId: 202010739",
            "Move calls that don't require a GL context out of `_render_on_gl_thread`\n\nPiperOrigin-RevId: 201512864",
            "Add `environment_kwargs` to environment loader.\n\nThis allows specification of things like `flat_observation`.\n\nPiperOrigin-RevId: 200390995",
            "Fix documentation for the humanoid initialization function.\n\nPiperOrigin-RevId: 199280699",
            "Make target ball in manipulator task slightly smaller to avoid overlap aliasing and increase the visual salience of solved states.\n\nPiperOrigin-RevId: 198861141",
            "Add reference counting for GL contexts.\n\nThis prevents a GL context from being freed whilst there are still live `mjrContext` pointer(s) that were created within that context. This is necessary because the `mjrContext` finalizers must be called whilst the GL context is active.\n\nPiperOrigin-RevId: 197318023",
            "Generalize three_poles task to k-poles, and make sparse/dense reward flag configurable.\n\nPiperOrigin-RevId: 195804734",
            "Simplify physics.step code.\nNo change to functionality.\n\nPiperOrigin-RevId: 194729650",
            "Fix non-determistic behavior in manipulator and stacker tasks\n\nI also added a unit test for environment determinism.\n\nPiperOrigin-RevId: 194422332",
            "Use a step counter rather than `physics.time()` to enforce episode time limits\n\nThis circumvents a problem where the step count sometimes differs from `time_limit / control_timestep` due to accumulation of rounding error in `mjData->time`.\n\nPiperOrigin-RevId: 192746383",
            "Add a test case for repeatedly creating and destroying rendering contexts\n\nPiperOrigin-RevId: 190765498",
            "Update module docstring for `render/base.py`\n\nPiperOrigin-RevId: 190643792",
            "Simplify and speed up `check_invalid_state`\n\nPiperOrigin-RevId: 190595606",
            "Expand on actuator <-> action correspondence in the suite.\n\nPiperOrigin-RevId: 189638902",
            "Prepend assets dict keys with './' to match filenames in XML\n\nPiperOrigin-RevId: 189602660",
            "Remove tech report pdf: The docs point to the version on arXiv.",
            "Create output directory for debugging images if it doesn't exist already.\n\nAlso log the output paths in the error message for convenience.\n\nPiperOrigin-RevId: 188318258",
            "Remove asynchronous termination mode of rendering context.\n\nPiperOrigin-RevId: 188221784",
            "Use the RTLD_GLOBAL flag when loading in libmujoco.so. This is so that the symbols are visible to custom callbacks that are loaded in later.\n\nPiperOrigin-RevId: 188192496",
            "Remove unnecessary support for changing offscreen framebuffer size\n\nManual edit of PiperOrigin-RevId: 187781454",
            "Use `ctypes.util.find_library(\"c\")` instead of hard-coded \"libc.so.6\" in memory checker\n\nPiperOrigin-RevId: 187781364",
            "Hard-code platform-dependent prefix and extension for MuJoCo shared library\n\nInferring these from the name of the C standard library is brittle.\n\nPiperOrigin-RevId: 187603692",
            "Fix GLFW renderer tests\n\nPiperOrigin-RevId: 187601551",
            "Remove an incorrect comment\n\nPiperOrigin-RevId: 187530822",
            "Implement a managed version of MjrContext that frees native resources when the ctypes pointer is garbage-collected.\n\nThe existing MjrContext has not been removed, but is renamed UnmanagedMjrContext.\n\nPiperOrigin-RevId: 187473745",
            "Add a render executor class to help redirect OpenGL calls to the correct thread.\n\nThis is a combination of the following  PiperOrigin-RevIds: 186767813, 187324907, 190618190",
            "Add rendering test case with multiple cameras per Physics instance\n\nAlso modified the humanoid test model to make the camera views more sensible and generated new golden frame sequences.\n\nPiperOrigin-RevId: 186020341",
            "Expose MJAPI functions that take no arguments\n\nPiperOrigin-RevId: 185732795",
            "Remove unused `Tasks` container class\n\nPiperOrigin-RevId: 185730800",
            "Reorder imports.\n\nPiperOrigin-RevId: 185576978",
            "Name each member of the observation spec.\n\nPiperOrigin-RevId: 185354017",
            "Deactivate the context before it is released.\n\nPiperOrigin-RevId: 185293839",
            "Do not raise an exception if a PhysicsError occurs in `forward` when entering a `reset_context`.\n\nPiperOrigin-RevId: 183970397",
            "Add force and touch sensors to humanoid model.\n\nPiperOrigin-RevId: 183964602",
            "Rename `resources.py` -> `io.py`",
            "Don't raise an exception on MuJoCo warnings that occurred prior to a step.\n\nPiperOrigin-RevId: 183857058",
            "Add a .gitignore file\n\nPiperOrigin-RevId: 183296913",
            "Skip tests that require an OpenGL context if DISABLE_MUJOCO_RENDERING is set\n\nAlso fixed a Python3 incompatibility in `engine.py` and added a missing test dependency on scipy.\n\nPiperOrigin-RevId: 183157102",
            "Add an environment variable that can be used to globally disable OpenGL rendering support\n\nSetting `DISABLE_MUJOCO_RENDERING` before launching the Python interpreter will cause OpenGL context creation to be skipped when `mujoco.Physics` is instantiated. This allows the MuJoCo Python bindings to be used on platforms where an OpenGL context cannot be created, provided that no actual rendering calls are made.\n\nPiperOrigin-RevId: 183136732",
            "All MuJoCo warnings trigger an invalid state error.\n\nPiperOrigin-RevId: 182929842",
            "Forward `--headers-dir` argument from `setup.py install` to `setup.py build_mjbindings`\n\nThis allows users to specify a custom path to the directory containing the MuJoCo headers at installation time (#19).\n\nAn amalgam of PiperOrigin-RevIds 182839659, 183276093",
            "Raise a ValueError if a VFS filename exceeds the character limit\n\nPiperOrigin-RevId: 182238432",
            "Add AUTHORS file.\n\nPiperOrigin-RevId: 182212272",
            "Add an optional `step_spec` method to the environment interface.\n\nThis may be used to define more general environments, e.g. with non-scalar rewards.\n\nPiperOrigin-RevId: 182206830",
            "Add rendering integration tests and related infrastructure\n\nPiperOrigin-RevId: 182205862",
            "dm_control: Import of refs/pull/15/head\n\nPiperOrigin-RevId: 182193834",
            "dm_control: Import of refs/pull/17/head\n\nPiperOrigin-RevId: 182187057",
            "Remove a broken test case from decorators_test\n\nPiperOrigin-RevId: 182176090",
            "Fix a Python3 incompatibility in pixels_test\n\nPiperOrigin-RevId: 182174713",
            "Fix run_threaded decorator so that it works with named_parameters\n\nPiperOrigin-RevId: 182068715",
            "Remove n_sub_steps argument to Physics.step()\n\nPiperOrigin-RevId: 182055020",
            "Add a method to Physics for explicitly freeing native resources.\n\nThis API is only intended for advanced users, in situations where Physics objects are frequently discarded and recreated. In this case, explicitly calling `free` on a Physics object that is no longer needed can lead to a reduced memory footprint of the process.\n\nPiperOrigin-RevId: 181902022",
            "Fix a bug affecting finalizers\n\nPreviously we were tracking an incorrect address (the address of the ctypes pointer object, rather than the address of the C struct it points to). Usually this still works because it's unlikely that `addressof(ptr)` will be reassigned after `ptr` gets garbage collected and before the finalizer gets called.\n\nI've also added another logging statement when the finalizer is created (which should be immediately after the pointer is allocated).\n\nPiperOrigin-RevId: 181799057",
            "Make OpenGL context-switching conditional\n\nAn amalgam of PiperOrigin-RevIds 181453904, 181814593, 182262535",
            "Add __init__.py to suite/wrappers directory.\n\nPiperOrigin-RevId: 181448240",
            "Clarified docstrings for `action_spec` and `before_step` methods.\n\nRenamed `actions` --> `action` in `suite.base.Task.before_step` for consistency with `control.Task`.\n\nPiperOrigin-RevId: 181446609",
            "Shorten title in README.md\n\nPiperOrigin-RevId: 181034353",
            "Manually load libGL and libGLEW on Linux.\n\nWe need to do this because libmujoco150.so doesn't have a dynamic\ndependency on these libraries.\n\nPiperOrigin-RevId: 180846845",
            "Merge pull request #1 from cclauss/patch-1\n\nDefine xrange() for Python 3",
            "Placate pylint sort order",
            "Placate pylint sort order",
            "from six.moves import xrange",
            "from six.moves import xrange",
            "Define xrange() for Python 3",
            "Define xrange() for Python 3",
            "Update paper link.\n\nPiperOrigin-RevId: 180623113",
            "Initial commit."
        ]
    }
}