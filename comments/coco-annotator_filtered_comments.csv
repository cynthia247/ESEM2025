Version,Commit Message
v0.11.1,"import Home from ""@/views/Home"";"
v0.11.1,"mode: ""history"","
v0.11.1,"setKeypointIndex(keypoint, newIndex) {"
v0.11.1,let oldIndex = keypoint.indexLabel;
v0.11.1,if (newIndex == oldIndex) return;
v0.11.1,keypoint.indexLabel = parseInt(newIndex);
v0.11.1,if (oldIndex >= 0) {
v0.11.1,delete this._labelled[oldIndex];
v0.11.1,let otherIndices = this._edges[oldIndex];
v0.11.1,if (otherIndices) {
v0.11.1,"otherIndices.forEach(i => this.removeLine([i, oldIndex]));"
v0.11.1,}
v0.11.1,// TODO: Remove assoicated lines
v0.11.1,}
v0.11.1,if (newIndex >= 0) {
v0.11.1,this._labelled[newIndex] = keypoint;
v0.11.1,this._drawLines(keypoint);
v0.11.1,}
v0.11.1,}
v0.11.1,keypoint.color = this.strokeColor;
v0.11.1,We need to move the line aswell
v0.11.1,If labels convert to indexs
v0.11.1,Draw line if points exist
v0.11.1,Order doesn't matter so can sort first
v0.11.1,Cantor pairing function
v0.11.1,convert 3-digit hex to 6-digits.
v0.11.1,invert color components
v0.11.1,pad each with zeros and return
v0.11.1,"e: { test: true, data: ""info"" }"
v0.11.1,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.11.1,
v0.11.1,The MIT License (MIT)
v0.11.1,
v0.11.1,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.11.1,
v0.11.1,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.11.1,"of this software and associated documentation files (the ""Software""), to deal"
v0.11.1,"in the Software without restriction, including without limitation the rights"
v0.11.1,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.11.1,"copies of the Software, and to permit persons to whom the Software is"
v0.11.1,"furnished to do so, subject to the following conditions:"
v0.11.1,
v0.11.1,The above copyright notice and this permission notice shall be included in
v0.11.1,all copies or substantial portions of the Software.
v0.11.1,
v0.11.1,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.11.1,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.11.1,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.11.1,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.11.1,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.11.1,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.11.1,THE SOFTWARE.
v0.11.1,compare the color of the sample
v0.11.1,walk to left side starting with the left neighbor
v0.11.1,compare the color of the sample
v0.11.1,walk to right side starting with the right neighbor
v0.11.1,compare the color of the sample
v0.11.1,check minmax for X
v0.11.1,add two scanning lines in the opposite direction (y - dir) if necessary
v0.11.1,add the scanning line in the direction (y + dir) if necessary
v0.11.1,check minmax for Y if necessary
v0.11.1,calc gauss weights
v0.11.1,normalization weights
v0.11.1,walk through all source points for blur
v0.11.1,walk through x-neighbors
v0.11.1,walk through y-neighbors
v0.11.1,"copy visited points (only ""black"")"
v0.11.1,walk through inner values except points on the boundary of the image
v0.11.1,"check if any neighbor with a ""white"" color"
v0.11.1,if (visitedData[k + 1] + visitedData[k - 1] +
v0.11.1,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.11.1,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.11.1,walk through points on the boundary of the image if necessary
v0.11.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.1,walk through radius-neighbors of border points and add them to the result array
v0.11.1,walk through x-neighbors
v0.11.1,check the uniqueness
v0.11.1,walk through y-neighbors
v0.11.1,check the uniqueness
v0.11.1,calc gauss weights
v0.11.1,normalization weights
v0.11.1,walk through all border points for blur
v0.11.1,walk through x-neighbors
v0.11.1,check minmax
v0.11.1,walk through y-neighbors
v0.11.1,check minmax
v0.11.1,walk through inner values except points on the boundary of the image
v0.11.1,"check if any neighbor with a ""white"" color"
v0.11.1,if (data[k + 1] + data[k - 1] +
v0.11.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.11.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.11.1,walk through points on the boundary of the image if necessary
v0.11.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.1,walk through inner values except points on the boundary of the image
v0.11.1,"check if any neighbor with a ""white"" color"
v0.11.1,if (data[k + 1] + data[k - 1] +
v0.11.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.11.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.11.1,walk through points on the boundary of the image if necessary
v0.11.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.1,"walk through inner values and copy only ""black"" points to the result mask"
v0.11.1,"all [dx,dy] pairs (array index is the direction)"
v0.11.1,5 6 7
v0.11.1,4 X 0
v0.11.1,3 2 1
v0.11.1,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.11.1,need contour tracing
v0.11.1,bypass all the neighbors around the current point in a clockwise
v0.11.1,get the next point by new direction
v0.11.1,black boundary pixel
v0.11.1,walk through all contours
v0.11.1,contour isn't simplified
v0.11.1,no intermediate points
v0.11.1,calc the distance from current point to edge
v0.11.1,"if the max ""deviation"" is larger than allowed then..."
v0.11.1,## File Watcher
v0.11.1,Flask/Gunicorn
v0.11.1,
v0.11.1,LOG_LEVEL - The granularity of log output
v0.11.1,
v0.11.1,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.11.1,
v0.11.1,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.11.1,clients that a single process can handle.
v0.11.1,
v0.11.1,A positive integer generally set to around 1000.
v0.11.1,
v0.11.1,WORKER_TIMEOUT - If a worker does not notify the master process
v0.11.1,in this number of seconds it is killed and a new worker is
v0.11.1,spawned to replace it.
v0.11.1,
v0.11.1,## Workers
v0.11.1,## Dataset Options
v0.11.1,## User Options
v0.11.1,## Models
v0.11.1,Remove all poeple who were annotating when
v0.11.1,the server shutdown
v0.11.1,invalid image ID
v0.11.1,Remove user from pervious room
v0.11.1,Remove user from room
v0.11.1,Listen to directory events as some file systems don't generate
v0.11.1,per-file `deleted` events when moving/deleting directories
v0.11.1,check if its a hidden file
v0.11.1,Compute segmentation
v0.11.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.11.1,Cruve
v0.11.1,Point
v0.11.1,Make sure shape is not all outside the image
v0.11.1,len 4 means this is a line with no width; it contributes
v0.11.1,"no area to the mask, and if we include it, coco will treat"
v0.11.1,it instead as a bbox (and throw an error)
v0.11.1,Compute segmentation
v0.11.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.11.1,find a point that's inside the canvas
v0.11.1,"print('point:', point, flush=True)"
v0.11.1,Cruve
v0.11.1,Point
v0.11.1,prev_point_outside = prev_point[0] > image_width or prev_point[0] < 0 or prev_point[1] > image_height or prev_point[1] < 0
v0.11.1,Make sure shape is not all outside the image
v0.11.1,len 4 means this is a line with no width; it contributes
v0.11.1,"no area to the mask, and if we include it, coco will treat"
v0.11.1,it instead as a bbox (and throw an error)
v0.11.1,Convert into rle
v0.11.1,@api.route('/<int:annotation_id>/mask')
v0.11.1,class AnnotationMask(Resource):
v0.11.1,"def get(self, annotation_id):"
v0.11.1,""""""" Returns the binary mask of an annotation """""""
v0.11.1,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.11.1,padding = args.get('padding')
v0.11.1,threshold = args.get('threshold')
v0.11.1,Calculate annotation counts by category in this dataset
v0.11.1,Calculate the annotation count in the current category in this dataset
v0.11.1,Calculate the annotated images count in the current category in this dataset
v0.11.1,Check if dataset exists
v0.11.1,Make sure folder starts with is in proper format
v0.11.1,Get directory
v0.11.1,Remove parsed arguments
v0.11.1,Generate query from remaining arugments
v0.11.1,Change category_ids__in to list
v0.11.1,Initialize mongo query with required elements:
v0.11.1,Define query names that should use complex logic:
v0.11.1,Add additional 'and' arguments to mongo query that do not require complex_query logic
v0.11.1,Add additional arguments to mongo query that require more complex logic to construct
v0.11.1,Only show annotated images with selected category_ids
v0.11.1,Only show non-annotated images
v0.11.1,Ahow annotated images with selected category_ids or non-annotated images
v0.11.1,Perform mongodb query
v0.11.1,for image in images:
v0.11.1,image_json = query_util.fix_ids(image)
v0.11.1,"query = AnnotationModel.objects(image_id=image.id, deleted=False)"
v0.11.1,category_ids = query.distinct('category_id')
v0.11.1,"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')"
v0.11.1,image_json['annotations'] = query.count()
v0.11.1,image_json['categories'] = query_util.fix_ids(categories)
v0.11.1,images_json.append(image_json)
v0.11.1,check if the id exits
v0.11.1,check if there is anything to update
v0.11.1,check if the name is empty
v0.11.1,update name of the category
v0.11.1,check if the name to update exits already in db
v0.11.1,@ToDo: Is it necessary to allow equal category names among different creators?
v0.11.1,it is only triggered when the name already exists and the creator is the same
v0.11.1,Create /api/ space
v0.11.1,Remove default namespace
v0.11.1,Setup API namespaces
v0.11.1,Check if current user can access dataset
v0.11.1,Iterate every category passed in the data
v0.11.1,Find corresponding category object in the database
v0.11.1,Iterate every annotation from the data annotations
v0.11.1,Find corresponding annotation object in database
v0.11.1,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.11.1,"the annotation twice, checking if the paperjs exists."
v0.11.1,Update annotation in database
v0.11.1,Update paperjs if it exists
v0.11.1,Generate coco formatted segmentation data
v0.11.1,Get next and previous image
v0.11.1,Generate data about the image to return to client
v0.11.1,import pycocotools.mask as mask
v0.11.1,iterate though all categoires and upsert
v0.11.1,category id mapping  ( file : database )
v0.11.1,Create any missing categories
v0.11.1,map category ids
v0.11.1,update progress
v0.11.1,image id mapping ( file: database )
v0.11.1,Find all images
v0.11.1,update progress
v0.11.1,"is_crowd = annotation.get('iscrowed', False)"
v0.11.1,Category 1 Test
v0.11.1,Category 2 Test
v0.11.1,Category 3 Test
v0.11.1,TODO write tests for data
v0.11.1,"Type of task: Importer, Exporter, Scanner, etc."
v0.11.1,: Start date of the executor
v0.11.1,: End date of the executor
v0.11.1,If any of the information is relevant to the task
v0.11.1,it should be added
v0.11.1,Send socket update every 10%
v0.11.1,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.11.1,-- Contants
v0.11.1,Set maximum thumbnail size (h x w) to use on dataset page
v0.11.1,-- Private
v0.11.1,-- Database
v0.11.1,Absolute path to image file
v0.11.1,True if the image is annotated
v0.11.1,Poeple currently annotation the image
v0.11.1,Get dataset name from path
v0.11.1,Resize image to fit in MAX_THUMBNAIL_DIM envelope as necessary
v0.11.1,Save as a jpeg to improve loading time
v0.11.1,(note file extension will not match but allows for backwards compatibility)
v0.11.1,TODO: Fix why using the functions throws an error
v0.11.1,meta = {'allow_inheritance': True}
v0.11.1,https://github.com/MongoEngine/mongoengine/issues/1171
v0.11.1,Use this methods until a solution is found
v0.11.1,map category names to ids; create as needed
v0.11.0,"import Home from ""@/views/Home"";"
v0.11.0,"mode: ""history"","
v0.11.0,"setKeypointIndex(keypoint, newIndex) {"
v0.11.0,let oldIndex = keypoint.indexLabel;
v0.11.0,if (newIndex == oldIndex) return;
v0.11.0,keypoint.indexLabel = parseInt(newIndex);
v0.11.0,if (oldIndex >= 0) {
v0.11.0,delete this._labelled[oldIndex];
v0.11.0,let otherIndices = this._edges[oldIndex];
v0.11.0,if (otherIndices) {
v0.11.0,"otherIndices.forEach(i => this.removeLine([i, oldIndex]));"
v0.11.0,}
v0.11.0,// TODO: Remove assoicated lines
v0.11.0,}
v0.11.0,if (newIndex >= 0) {
v0.11.0,this._labelled[newIndex] = keypoint;
v0.11.0,this._drawLines(keypoint);
v0.11.0,}
v0.11.0,}
v0.11.0,keypoint.color = this.strokeColor;
v0.11.0,We need to move the line aswell
v0.11.0,If labels convert to indexs
v0.11.0,Draw line if points exist
v0.11.0,Order doesn't matter so can sort first
v0.11.0,Cantor pairing function
v0.11.0,convert 3-digit hex to 6-digits.
v0.11.0,invert color components
v0.11.0,pad each with zeros and return
v0.11.0,"e: { test: true, data: ""info"" }"
v0.11.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.11.0,
v0.11.0,The MIT License (MIT)
v0.11.0,
v0.11.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.11.0,
v0.11.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.11.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.11.0,"in the Software without restriction, including without limitation the rights"
v0.11.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.11.0,"copies of the Software, and to permit persons to whom the Software is"
v0.11.0,"furnished to do so, subject to the following conditions:"
v0.11.0,
v0.11.0,The above copyright notice and this permission notice shall be included in
v0.11.0,all copies or substantial portions of the Software.
v0.11.0,
v0.11.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.11.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.11.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.11.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.11.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.11.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.11.0,THE SOFTWARE.
v0.11.0,compare the color of the sample
v0.11.0,walk to left side starting with the left neighbor
v0.11.0,compare the color of the sample
v0.11.0,walk to right side starting with the right neighbor
v0.11.0,compare the color of the sample
v0.11.0,check minmax for X
v0.11.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.11.0,add the scanning line in the direction (y + dir) if necessary
v0.11.0,check minmax for Y if necessary
v0.11.0,calc gauss weights
v0.11.0,normalization weights
v0.11.0,walk through all source points for blur
v0.11.0,walk through x-neighbors
v0.11.0,walk through y-neighbors
v0.11.0,"copy visited points (only ""black"")"
v0.11.0,walk through inner values except points on the boundary of the image
v0.11.0,"check if any neighbor with a ""white"" color"
v0.11.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.11.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.11.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.11.0,walk through points on the boundary of the image if necessary
v0.11.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.0,walk through radius-neighbors of border points and add them to the result array
v0.11.0,walk through x-neighbors
v0.11.0,check the uniqueness
v0.11.0,walk through y-neighbors
v0.11.0,check the uniqueness
v0.11.0,calc gauss weights
v0.11.0,normalization weights
v0.11.0,walk through all border points for blur
v0.11.0,walk through x-neighbors
v0.11.0,check minmax
v0.11.0,walk through y-neighbors
v0.11.0,check minmax
v0.11.0,walk through inner values except points on the boundary of the image
v0.11.0,"check if any neighbor with a ""white"" color"
v0.11.0,if (data[k + 1] + data[k - 1] +
v0.11.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.11.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.11.0,walk through points on the boundary of the image if necessary
v0.11.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.0,walk through inner values except points on the boundary of the image
v0.11.0,"check if any neighbor with a ""white"" color"
v0.11.0,if (data[k + 1] + data[k - 1] +
v0.11.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.11.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.11.0,walk through points on the boundary of the image if necessary
v0.11.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.11.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.11.0,"all [dx,dy] pairs (array index is the direction)"
v0.11.0,5 6 7
v0.11.0,4 X 0
v0.11.0,3 2 1
v0.11.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.11.0,need contour tracing
v0.11.0,bypass all the neighbors around the current point in a clockwise
v0.11.0,get the next point by new direction
v0.11.0,black boundary pixel
v0.11.0,walk through all contours
v0.11.0,contour isn't simplified
v0.11.0,no intermediate points
v0.11.0,calc the distance from current point to edge
v0.11.0,"if the max ""deviation"" is larger than allowed then..."
v0.11.0,## File Watcher
v0.11.0,Flask/Gunicorn
v0.11.0,
v0.11.0,LOG_LEVEL - The granularity of log output
v0.11.0,
v0.11.0,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.11.0,
v0.11.0,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.11.0,clients that a single process can handle.
v0.11.0,
v0.11.0,A positive integer generally set to around 1000.
v0.11.0,
v0.11.0,WORKER_TIMEOUT - If a worker does not notify the master process
v0.11.0,in this number of seconds it is killed and a new worker is
v0.11.0,spawned to replace it.
v0.11.0,
v0.11.0,## Workers
v0.11.0,## Dataset Options
v0.11.0,## User Options
v0.11.0,## Models
v0.11.0,Remove all poeple who were annotating when
v0.11.0,the server shutdown
v0.11.0,invalid image ID
v0.11.0,Remove user from pervious room
v0.11.0,Remove user from room
v0.11.0,check if its a hidden file
v0.11.0,Compute segmentation
v0.11.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.11.0,Cruve
v0.11.0,Point
v0.11.0,Make sure shape is not all outside the image
v0.11.0,len 4 means this is a line with no width; it contributes
v0.11.0,"no area to the mask, and if we include it, coco will treat"
v0.11.0,it instead as a bbox (and throw an error)
v0.11.0,Compute segmentation
v0.11.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.11.0,find a point that's inside the canvas
v0.11.0,"print('point:', point, flush=True)"
v0.11.0,Cruve
v0.11.0,Point
v0.11.0,prev_point_outside = prev_point[0] > image_width or prev_point[0] < 0 or prev_point[1] > image_height or prev_point[1] < 0
v0.11.0,Make sure shape is not all outside the image
v0.11.0,len 4 means this is a line with no width; it contributes
v0.11.0,"no area to the mask, and if we include it, coco will treat"
v0.11.0,it instead as a bbox (and throw an error)
v0.11.0,Convert into rle
v0.11.0,@api.route('/<int:annotation_id>/mask')
v0.11.0,class AnnotationMask(Resource):
v0.11.0,"def get(self, annotation_id):"
v0.11.0,""""""" Returns the binary mask of an annotation """""""
v0.11.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.11.0,padding = args.get('padding')
v0.11.0,threshold = args.get('threshold')
v0.11.0,Calculate annotation counts by category in this dataset
v0.11.0,Calculate the annotation count in the current category in this dataset
v0.11.0,Calculate the annotated images count in the current category in this dataset
v0.11.0,Check if dataset exists
v0.11.0,Make sure folder starts with is in proper format
v0.11.0,Get directory
v0.11.0,Remove parsed arguments
v0.11.0,Generate query from remaining arugments
v0.11.0,Change category_ids__in to list
v0.11.0,Initialize mongo query with required elements:
v0.11.0,Define query names that should use complex logic:
v0.11.0,Add additional 'and' arguments to mongo query that do not require complex_query logic
v0.11.0,Add additional arguments to mongo query that require more complex logic to construct
v0.11.0,Only show annotated images with selected category_ids
v0.11.0,Only show non-annotated images
v0.11.0,Ahow annotated images with selected category_ids or non-annotated images
v0.11.0,Perform mongodb query
v0.11.0,for image in images:
v0.11.0,image_json = query_util.fix_ids(image)
v0.11.0,"query = AnnotationModel.objects(image_id=image.id, deleted=False)"
v0.11.0,category_ids = query.distinct('category_id')
v0.11.0,"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')"
v0.11.0,image_json['annotations'] = query.count()
v0.11.0,image_json['categories'] = query_util.fix_ids(categories)
v0.11.0,images_json.append(image_json)
v0.11.0,check if the id exits
v0.11.0,check if there is anything to update
v0.11.0,check if the name is empty
v0.11.0,update name of the category
v0.11.0,check if the name to update exits already in db
v0.11.0,@ToDo: Is it necessary to allow equal category names among different creators?
v0.11.0,it is only triggered when the name already exists and the creator is the same
v0.11.0,Create /api/ space
v0.11.0,Remove default namespace
v0.11.0,Setup API namespaces
v0.11.0,Check if current user can access dataset
v0.11.0,Iterate every category passed in the data
v0.11.0,Find corresponding category object in the database
v0.11.0,Iterate every annotation from the data annotations
v0.11.0,Find corresponding annotation object in database
v0.11.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.11.0,"the annotation twice, checking if the paperjs exists."
v0.11.0,Update annotation in database
v0.11.0,Update paperjs if it exists
v0.11.0,Generate coco formatted segmentation data
v0.11.0,Get next and previous image
v0.11.0,Generate data about the image to return to client
v0.11.0,import pycocotools.mask as mask
v0.11.0,iterate though all categoires and upsert
v0.11.0,category id mapping  ( file : database )
v0.11.0,Create any missing categories
v0.11.0,map category ids
v0.11.0,update progress
v0.11.0,image id mapping ( file: database )
v0.11.0,Find all images
v0.11.0,update progress
v0.11.0,"is_crowd = annotation.get('iscrowed', False)"
v0.11.0,Category 1 Test
v0.11.0,Category 2 Test
v0.11.0,Category 3 Test
v0.11.0,TODO write tests for data
v0.11.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.11.0,: Start date of the executor
v0.11.0,: End date of the executor
v0.11.0,If any of the information is relevant to the task
v0.11.0,it should be added
v0.11.0,Send socket update every 10%
v0.11.0,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.11.0,-- Contants
v0.11.0,Set maximum thumbnail size (h x w) to use on dataset page
v0.11.0,-- Private
v0.11.0,-- Database
v0.11.0,Absolute path to image file
v0.11.0,True if the image is annotated
v0.11.0,Poeple currently annotation the image
v0.11.0,Get dataset name from path
v0.11.0,logger.debug(f'Generating thumbnail for {self.id}')
v0.11.0,Resize image to fit in MAX_THUMBNAIL_DIM envelope as necessary
v0.11.0,Save as a jpeg to improve loading time
v0.11.0,(note file extension will not match but allows for backwards compatibility)
v0.11.0,TODO: Fix why using the functions throws an error
v0.11.0,meta = {'allow_inheritance': True}
v0.11.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.11.0,Use this methods until a solution is found
v0.11.0,map category names to ids; create as needed
v0.10.6,"import Home from ""@/views/Home"";"
v0.10.6,"mode: ""history"","
v0.10.6,TODO: Remove assoicated lines
v0.10.6,We need to move the line aswell
v0.10.6,If labels convert to indexs
v0.10.6,Draw line if points exist
v0.10.6,Order doesn't matter so can sort first
v0.10.6,Cantor pairing function
v0.10.6,convert 3-digit hex to 6-digits.
v0.10.6,invert color components
v0.10.6,pad each with zeros and return
v0.10.6,"e: { test: true, data: ""info"" }"
v0.10.6,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.6,
v0.10.6,The MIT License (MIT)
v0.10.6,
v0.10.6,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.6,
v0.10.6,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.6,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.6,"in the Software without restriction, including without limitation the rights"
v0.10.6,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.6,"copies of the Software, and to permit persons to whom the Software is"
v0.10.6,"furnished to do so, subject to the following conditions:"
v0.10.6,
v0.10.6,The above copyright notice and this permission notice shall be included in
v0.10.6,all copies or substantial portions of the Software.
v0.10.6,
v0.10.6,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.6,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.6,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.6,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.6,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.6,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.6,THE SOFTWARE.
v0.10.6,compare the color of the sample
v0.10.6,walk to left side starting with the left neighbor
v0.10.6,compare the color of the sample
v0.10.6,walk to right side starting with the right neighbor
v0.10.6,compare the color of the sample
v0.10.6,check minmax for X
v0.10.6,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.6,add the scanning line in the direction (y + dir) if necessary
v0.10.6,check minmax for Y if necessary
v0.10.6,calc gauss weights
v0.10.6,normalization weights
v0.10.6,walk through all source points for blur
v0.10.6,walk through x-neighbors
v0.10.6,walk through y-neighbors
v0.10.6,"copy visited points (only ""black"")"
v0.10.6,walk through inner values except points on the boundary of the image
v0.10.6,"check if any neighbor with a ""white"" color"
v0.10.6,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.6,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.6,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.6,walk through points on the boundary of the image if necessary
v0.10.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.6,walk through radius-neighbors of border points and add them to the result array
v0.10.6,walk through x-neighbors
v0.10.6,check the uniqueness
v0.10.6,walk through y-neighbors
v0.10.6,check the uniqueness
v0.10.6,calc gauss weights
v0.10.6,normalization weights
v0.10.6,walk through all border points for blur
v0.10.6,walk through x-neighbors
v0.10.6,check minmax
v0.10.6,walk through y-neighbors
v0.10.6,check minmax
v0.10.6,walk through inner values except points on the boundary of the image
v0.10.6,"check if any neighbor with a ""white"" color"
v0.10.6,if (data[k + 1] + data[k - 1] +
v0.10.6,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.6,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.6,walk through points on the boundary of the image if necessary
v0.10.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.6,walk through inner values except points on the boundary of the image
v0.10.6,"check if any neighbor with a ""white"" color"
v0.10.6,if (data[k + 1] + data[k - 1] +
v0.10.6,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.6,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.6,walk through points on the boundary of the image if necessary
v0.10.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.6,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.6,"all [dx,dy] pairs (array index is the direction)"
v0.10.6,5 6 7
v0.10.6,4 X 0
v0.10.6,3 2 1
v0.10.6,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.6,need contour tracing
v0.10.6,bypass all the neighbors around the current point in a clockwise
v0.10.6,get the next point by new direction
v0.10.6,black boundary pixel
v0.10.6,walk through all contours
v0.10.6,contour isn't simplified
v0.10.6,no intermediate points
v0.10.6,calc the distance from current point to edge
v0.10.6,"if the max ""deviation"" is larger than allowed then..."
v0.10.6,## File Watcher
v0.10.6,Flask/Gunicorn
v0.10.6,
v0.10.6,LOG_LEVEL - The granularity of log output
v0.10.6,
v0.10.6,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.6,
v0.10.6,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.6,clients that a single process can handle.
v0.10.6,
v0.10.6,A positive integer generally set to around 1000.
v0.10.6,
v0.10.6,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.6,in this number of seconds it is killed and a new worker is
v0.10.6,spawned to replace it.
v0.10.6,
v0.10.6,## Workers
v0.10.6,## Dataset Options
v0.10.6,## User Options
v0.10.6,## Models
v0.10.6,Remove all poeple who were annotating when
v0.10.6,the server shutdown
v0.10.6,invalid image ID
v0.10.6,Remove user from pervious room
v0.10.6,Remove user from room
v0.10.6,check if its a hidden file
v0.10.6,Compute segmentation
v0.10.6,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.6,Cruve
v0.10.6,Point
v0.10.6,Make sure shape is not all outside the image
v0.10.6,len 4 means this is a line with no width; it contributes
v0.10.6,"no area to the mask, and if we include it, coco will treat"
v0.10.6,it instead as a bbox (and throw an error)
v0.10.6,Convert into rle
v0.10.6,@api.route('/<int:annotation_id>/mask')
v0.10.6,class AnnotationMask(Resource):
v0.10.6,"def get(self, annotation_id):"
v0.10.6,""""""" Returns the binary mask of an annotation """""""
v0.10.6,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.6,padding = args.get('padding')
v0.10.6,threshold = args.get('threshold')
v0.10.6,Check if dataset exists
v0.10.6,Make sure folder starts with is in proper format
v0.10.6,Get directory
v0.10.6,Remove parsed arguments
v0.10.6,Generate query from remaining arugments
v0.10.6,for image in images:
v0.10.6,image_json = query_util.fix_ids(image)
v0.10.6,"query = AnnotationModel.objects(image_id=image.id, deleted=False)"
v0.10.6,category_ids = query.distinct('category_id')
v0.10.6,"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')"
v0.10.6,image_json['annotations'] = query.count()
v0.10.6,image_json['categories'] = query_util.fix_ids(categories)
v0.10.6,images_json.append(image_json)
v0.10.6,check if the id exits
v0.10.6,check if the name to update is the same as already stored
v0.10.6,check if the name is empty
v0.10.6,update name of the category
v0.10.6,check if the name to update exits already in db
v0.10.6,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.6,it is only triggered when the name already exists and the creator is the same
v0.10.6,Create /api/ space
v0.10.6,Remove default namespace
v0.10.6,Setup API namespaces
v0.10.6,Check if current user can access dataset
v0.10.6,Iterate every category passed in the data
v0.10.6,Find corresponding category object in the database
v0.10.6,Iterate every annotation from the data annotations
v0.10.6,Find corresponding annotation object in database
v0.10.6,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.6,"the annotation twice, checking if the paperjs exists."
v0.10.6,Update annotation in database
v0.10.6,Update paperjs if it exists
v0.10.6,Generate coco formatted segmentation data
v0.10.6,Get next and previous image
v0.10.6,Generate data about the image to return to client
v0.10.6,import pycocotools.mask as mask
v0.10.6,iterate though all categoires and upsert
v0.10.6,category id mapping  ( file : database )
v0.10.6,Create any missing categories
v0.10.6,map category ids
v0.10.6,update progress
v0.10.6,image id mapping ( file: database )
v0.10.6,Find all images
v0.10.6,update progress
v0.10.6,"is_crowd = annotation.get('iscrowed', False)"
v0.10.6,Category 1 Test
v0.10.6,Category 2 Test
v0.10.6,Category 3 Test
v0.10.6,TODO write tests for data
v0.10.6,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.6,: Start date of the executor
v0.10.6,: End date of the executor
v0.10.6,If any of the information is relevant to the task
v0.10.6,it should be added
v0.10.6,Send socket update every 10%
v0.10.6,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.6,-- Contants
v0.10.6,-- Private
v0.10.6,-- Database
v0.10.6,Absolute path to image file
v0.10.6,True if the image is annotated
v0.10.6,Poeple currently annotation the image
v0.10.6,Get dataset name from path
v0.10.6,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.6,TODO: Fix why using the functions throws an error
v0.10.6,meta = {'allow_inheritance': True}
v0.10.6,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.6,Use this methods until a solution is found
v0.10.6,map category names to ids; create as needed
v0.10.5,"import Home from ""@/views/Home"";"
v0.10.5,"mode: ""history"","
v0.10.5,TODO: Remove assoicated lines
v0.10.5,We need to move the line aswell
v0.10.5,If labels convert to indexs
v0.10.5,Draw line if points exist
v0.10.5,Order doesn't matter so can sort first
v0.10.5,Cantor pairing function
v0.10.5,convert 3-digit hex to 6-digits.
v0.10.5,invert color components
v0.10.5,pad each with zeros and return
v0.10.5,"e: { test: true, data: ""info"" }"
v0.10.5,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.5,
v0.10.5,The MIT License (MIT)
v0.10.5,
v0.10.5,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.5,
v0.10.5,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.5,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.5,"in the Software without restriction, including without limitation the rights"
v0.10.5,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.5,"copies of the Software, and to permit persons to whom the Software is"
v0.10.5,"furnished to do so, subject to the following conditions:"
v0.10.5,
v0.10.5,The above copyright notice and this permission notice shall be included in
v0.10.5,all copies or substantial portions of the Software.
v0.10.5,
v0.10.5,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.5,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.5,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.5,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.5,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.5,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.5,THE SOFTWARE.
v0.10.5,compare the color of the sample
v0.10.5,walk to left side starting with the left neighbor
v0.10.5,compare the color of the sample
v0.10.5,walk to right side starting with the right neighbor
v0.10.5,compare the color of the sample
v0.10.5,check minmax for X
v0.10.5,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.5,add the scanning line in the direction (y + dir) if necessary
v0.10.5,check minmax for Y if necessary
v0.10.5,calc gauss weights
v0.10.5,normalization weights
v0.10.5,walk through all source points for blur
v0.10.5,walk through x-neighbors
v0.10.5,walk through y-neighbors
v0.10.5,"copy visited points (only ""black"")"
v0.10.5,walk through inner values except points on the boundary of the image
v0.10.5,"check if any neighbor with a ""white"" color"
v0.10.5,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.5,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.5,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.5,walk through points on the boundary of the image if necessary
v0.10.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.5,walk through radius-neighbors of border points and add them to the result array
v0.10.5,walk through x-neighbors
v0.10.5,check the uniqueness
v0.10.5,walk through y-neighbors
v0.10.5,check the uniqueness
v0.10.5,calc gauss weights
v0.10.5,normalization weights
v0.10.5,walk through all border points for blur
v0.10.5,walk through x-neighbors
v0.10.5,check minmax
v0.10.5,walk through y-neighbors
v0.10.5,check minmax
v0.10.5,walk through inner values except points on the boundary of the image
v0.10.5,"check if any neighbor with a ""white"" color"
v0.10.5,if (data[k + 1] + data[k - 1] +
v0.10.5,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.5,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.5,walk through points on the boundary of the image if necessary
v0.10.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.5,walk through inner values except points on the boundary of the image
v0.10.5,"check if any neighbor with a ""white"" color"
v0.10.5,if (data[k + 1] + data[k - 1] +
v0.10.5,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.5,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.5,walk through points on the boundary of the image if necessary
v0.10.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.5,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.5,"all [dx,dy] pairs (array index is the direction)"
v0.10.5,5 6 7
v0.10.5,4 X 0
v0.10.5,3 2 1
v0.10.5,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.5,need contour tracing
v0.10.5,bypass all the neighbors around the current point in a clockwise
v0.10.5,get the next point by new direction
v0.10.5,black boundary pixel
v0.10.5,walk through all contours
v0.10.5,contour isn't simplified
v0.10.5,no intermediate points
v0.10.5,calc the distance from current point to edge
v0.10.5,"if the max ""deviation"" is larger than allowed then..."
v0.10.5,## File Watcher
v0.10.5,Flask/Gunicorn
v0.10.5,
v0.10.5,LOG_LEVEL - The granularity of log output
v0.10.5,
v0.10.5,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.5,
v0.10.5,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.5,clients that a single process can handle.
v0.10.5,
v0.10.5,A positive integer generally set to around 1000.
v0.10.5,
v0.10.5,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.5,in this number of seconds it is killed and a new worker is
v0.10.5,spawned to replace it.
v0.10.5,
v0.10.5,## Workers
v0.10.5,## Dataset Options
v0.10.5,## User Options
v0.10.5,## Models
v0.10.5,Remove all poeple who were annotating when
v0.10.5,the server shutdown
v0.10.5,invalid image ID
v0.10.5,Remove user from pervious room
v0.10.5,Remove user from room
v0.10.5,check if its a hidden file
v0.10.5,Compute segmentation
v0.10.5,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.5,Cruve
v0.10.5,Point
v0.10.5,Make sure shape is not all outside the image
v0.10.5,len 4 means this is a line with no width; it contributes
v0.10.5,"no area to the mask, and if we include it, coco will treat"
v0.10.5,it instead as a bbox (and throw an error)
v0.10.5,Convert into rle
v0.10.5,@api.route('/<int:annotation_id>/mask')
v0.10.5,class AnnotationMask(Resource):
v0.10.5,"def get(self, annotation_id):"
v0.10.5,""""""" Returns the binary mask of an annotation """""""
v0.10.5,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.5,padding = args.get('padding')
v0.10.5,threshold = args.get('threshold')
v0.10.5,Check if dataset exists
v0.10.5,Make sure folder starts with is in proper format
v0.10.5,Get directory
v0.10.5,Remove parsed arguments
v0.10.5,Generate query from remaining arugments
v0.10.5,for image in images:
v0.10.5,image_json = query_util.fix_ids(image)
v0.10.5,"query = AnnotationModel.objects(image_id=image.id, deleted=False)"
v0.10.5,category_ids = query.distinct('category_id')
v0.10.5,"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')"
v0.10.5,image_json['annotations'] = query.count()
v0.10.5,image_json['categories'] = query_util.fix_ids(categories)
v0.10.5,images_json.append(image_json)
v0.10.5,check if the id exits
v0.10.5,check if the name to update is the same as already stored
v0.10.5,check if the name is empty
v0.10.5,update name of the category
v0.10.5,check if the name to update exits already in db
v0.10.5,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.5,it is only triggered when the name already exists and the creator is the same
v0.10.5,Create /api/ space
v0.10.5,Remove default namespace
v0.10.5,Setup API namespaces
v0.10.5,Check if current user can access dataset
v0.10.5,Iterate every category passed in the data
v0.10.5,Find corresponding category object in the database
v0.10.5,Iterate every annotation from the data annotations
v0.10.5,Find corresponding annotation object in database
v0.10.5,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.5,"the annotation twice, checking if the paperjs exists."
v0.10.5,Update annotation in database
v0.10.5,Update paperjs if it exists
v0.10.5,Generate coco formatted segmentation data
v0.10.5,Get next and previous image
v0.10.5,Generate data about the image to return to client
v0.10.5,import pycocotools.mask as mask
v0.10.5,iterate though all categoires and upsert
v0.10.5,category id mapping  ( file : database )
v0.10.5,Create any missing categories
v0.10.5,map category ids
v0.10.5,update progress
v0.10.5,image id mapping ( file: database )
v0.10.5,Find all images
v0.10.5,update progress
v0.10.5,"is_crowd = annotation.get('iscrowed', False)"
v0.10.5,Category 1 Test
v0.10.5,Category 2 Test
v0.10.5,Category 3 Test
v0.10.5,TODO write tests for data
v0.10.5,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.5,: Start date of the executor
v0.10.5,: End date of the executor
v0.10.5,If any of the information is relevant to the task
v0.10.5,it should be added
v0.10.5,Send socket update every 10%
v0.10.5,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.5,-- Contants
v0.10.5,-- Private
v0.10.5,-- Database
v0.10.5,Absolute path to image file
v0.10.5,True if the image is annotated
v0.10.5,Poeple currently annotation the image
v0.10.5,Get dataset name from path
v0.10.5,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.5,TODO: Fix why using the functions throws an error
v0.10.5,meta = {'allow_inheritance': True}
v0.10.5,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.5,Use this methods until a solution is found
v0.10.5,map category names to ids; create as needed
v0.10.4,"import Home from ""@/views/Home"";"
v0.10.4,"mode: ""history"","
v0.10.4,TODO: Remove assoicated lines
v0.10.4,We need to move the line aswell
v0.10.4,If labels convert to indexs
v0.10.4,Draw line if points exist
v0.10.4,Order doesn't matter so can sort first
v0.10.4,Cantor pairing function
v0.10.4,convert 3-digit hex to 6-digits.
v0.10.4,invert color components
v0.10.4,pad each with zeros and return
v0.10.4,"e: { test: true, data: ""info"" }"
v0.10.4,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.4,
v0.10.4,The MIT License (MIT)
v0.10.4,
v0.10.4,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.4,
v0.10.4,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.4,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.4,"in the Software without restriction, including without limitation the rights"
v0.10.4,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.4,"copies of the Software, and to permit persons to whom the Software is"
v0.10.4,"furnished to do so, subject to the following conditions:"
v0.10.4,
v0.10.4,The above copyright notice and this permission notice shall be included in
v0.10.4,all copies or substantial portions of the Software.
v0.10.4,
v0.10.4,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.4,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.4,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.4,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.4,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.4,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.4,THE SOFTWARE.
v0.10.4,compare the color of the sample
v0.10.4,walk to left side starting with the left neighbor
v0.10.4,compare the color of the sample
v0.10.4,walk to right side starting with the right neighbor
v0.10.4,compare the color of the sample
v0.10.4,check minmax for X
v0.10.4,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.4,add the scanning line in the direction (y + dir) if necessary
v0.10.4,check minmax for Y if necessary
v0.10.4,calc gauss weights
v0.10.4,normalization weights
v0.10.4,walk through all source points for blur
v0.10.4,walk through x-neighbors
v0.10.4,walk through y-neighbors
v0.10.4,"copy visited points (only ""black"")"
v0.10.4,walk through inner values except points on the boundary of the image
v0.10.4,"check if any neighbor with a ""white"" color"
v0.10.4,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.4,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.4,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.4,walk through points on the boundary of the image if necessary
v0.10.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.4,walk through radius-neighbors of border points and add them to the result array
v0.10.4,walk through x-neighbors
v0.10.4,check the uniqueness
v0.10.4,walk through y-neighbors
v0.10.4,check the uniqueness
v0.10.4,calc gauss weights
v0.10.4,normalization weights
v0.10.4,walk through all border points for blur
v0.10.4,walk through x-neighbors
v0.10.4,check minmax
v0.10.4,walk through y-neighbors
v0.10.4,check minmax
v0.10.4,walk through inner values except points on the boundary of the image
v0.10.4,"check if any neighbor with a ""white"" color"
v0.10.4,if (data[k + 1] + data[k - 1] +
v0.10.4,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.4,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.4,walk through points on the boundary of the image if necessary
v0.10.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.4,walk through inner values except points on the boundary of the image
v0.10.4,"check if any neighbor with a ""white"" color"
v0.10.4,if (data[k + 1] + data[k - 1] +
v0.10.4,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.4,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.4,walk through points on the boundary of the image if necessary
v0.10.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.4,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.4,"all [dx,dy] pairs (array index is the direction)"
v0.10.4,5 6 7
v0.10.4,4 X 0
v0.10.4,3 2 1
v0.10.4,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.4,need contour tracing
v0.10.4,bypass all the neighbors around the current point in a clockwise
v0.10.4,get the next point by new direction
v0.10.4,black boundary pixel
v0.10.4,walk through all contours
v0.10.4,contour isn't simplified
v0.10.4,no intermediate points
v0.10.4,calc the distance from current point to edge
v0.10.4,"if the max ""deviation"" is larger than allowed then..."
v0.10.4,## File Watcher
v0.10.4,Flask/Gunicorn
v0.10.4,
v0.10.4,LOG_LEVEL - The granularity of log output
v0.10.4,
v0.10.4,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.4,
v0.10.4,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.4,clients that a single process can handle.
v0.10.4,
v0.10.4,A positive integer generally set to around 1000.
v0.10.4,
v0.10.4,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.4,in this number of seconds it is killed and a new worker is
v0.10.4,spawned to replace it.
v0.10.4,
v0.10.4,## Workers
v0.10.4,## Dataset Options
v0.10.4,## User Options
v0.10.4,## Models
v0.10.4,Remove all poeple who were annotating when
v0.10.4,the server shutdown
v0.10.4,invalid image ID
v0.10.4,Remove user from pervious room
v0.10.4,Remove user from room
v0.10.4,check if its a hidden file
v0.10.4,Compute segmentation
v0.10.4,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.4,Cruve
v0.10.4,Point
v0.10.4,Make sure shape is not all outside the image
v0.10.4,len 4 means this is a line with no width; it contributes
v0.10.4,"no area to the mask, and if we include it, coco will treat"
v0.10.4,it instead as a bbox (and throw an error)
v0.10.4,Convert into rle
v0.10.4,@api.route('/<int:annotation_id>/mask')
v0.10.4,class AnnotationMask(Resource):
v0.10.4,"def get(self, annotation_id):"
v0.10.4,""""""" Returns the binary mask of an annotation """""""
v0.10.4,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.4,padding = args.get('padding')
v0.10.4,threshold = args.get('threshold')
v0.10.4,"print(query, flush=True)"
v0.10.4,Check if dataset exists
v0.10.4,Make sure folder starts with is in proper format
v0.10.4,Get directory
v0.10.4,check if the id exits
v0.10.4,check if the name to update is the same as already stored
v0.10.4,check if the name is empty
v0.10.4,update name of the category
v0.10.4,check if the name to update exits already in db
v0.10.4,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.4,it is only triggered when the name already exists and the creator is the same
v0.10.4,Create /api/ space
v0.10.4,Remove default namespace
v0.10.4,Setup API namespaces
v0.10.4,Check if current user can access dataset
v0.10.4,Iterate every category passed in the data
v0.10.4,Find corresponding category object in the database
v0.10.4,Iterate every annotation from the data annotations
v0.10.4,Find corresponding annotation object in database
v0.10.4,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.4,"the annotation twice, checking if the paperjs exists."
v0.10.4,Update annotation in database
v0.10.4,Update paperjs if it exists
v0.10.4,Generate coco formatted segmentation data
v0.10.4,Get next and previous image
v0.10.4,Generate data about the image to return to client
v0.10.4,import pycocotools.mask as mask
v0.10.4,iterate though all categoires and upsert
v0.10.4,category id mapping  ( file : database )
v0.10.4,Create any missing categories
v0.10.4,map category ids
v0.10.4,update progress
v0.10.4,image id mapping ( file: database )
v0.10.4,Find all images
v0.10.4,update progress
v0.10.4,"is_crowd = annotation.get('iscrowed', False)"
v0.10.4,Category 1 Test
v0.10.4,Category 2 Test
v0.10.4,Category 3 Test
v0.10.4,TODO write tests for data
v0.10.4,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.4,: Start date of the executor
v0.10.4,: End date of the executor
v0.10.4,If any of the information is relevant to the task
v0.10.4,it should be added
v0.10.4,Send socket update every 10%
v0.10.4,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.4,-- Contants
v0.10.4,-- Private
v0.10.4,-- Database
v0.10.4,Absolute path to image file
v0.10.4,True if the image is annotated
v0.10.4,Poeple currently annotation the image
v0.10.4,Get dataset name from path
v0.10.4,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.4,TODO: Fix why using the functions throws an error
v0.10.4,changing permission of folder to upload images with out sudo permissions (anyone can upload images)
v0.10.4,meta = {'allow_inheritance': True}
v0.10.4,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.4,Use this methods until a solution is found
v0.10.4,map category names to ids; create as needed
v0.10.3,"import Home from ""@/views/Home"";"
v0.10.3,"mode: ""history"","
v0.10.3,TODO: Remove assoicated lines
v0.10.3,We need to move the line aswell
v0.10.3,If labels convert to indexs
v0.10.3,Draw line if points exist
v0.10.3,Order doesn't matter so can sort first
v0.10.3,Cantor pairing function
v0.10.3,convert 3-digit hex to 6-digits.
v0.10.3,invert color components
v0.10.3,pad each with zeros and return
v0.10.3,"e: { test: true, data: ""info"" }"
v0.10.3,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.3,
v0.10.3,The MIT License (MIT)
v0.10.3,
v0.10.3,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.3,
v0.10.3,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.3,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.3,"in the Software without restriction, including without limitation the rights"
v0.10.3,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.3,"copies of the Software, and to permit persons to whom the Software is"
v0.10.3,"furnished to do so, subject to the following conditions:"
v0.10.3,
v0.10.3,The above copyright notice and this permission notice shall be included in
v0.10.3,all copies or substantial portions of the Software.
v0.10.3,
v0.10.3,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.3,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.3,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.3,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.3,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.3,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.3,THE SOFTWARE.
v0.10.3,compare the color of the sample
v0.10.3,walk to left side starting with the left neighbor
v0.10.3,compare the color of the sample
v0.10.3,walk to right side starting with the right neighbor
v0.10.3,compare the color of the sample
v0.10.3,check minmax for X
v0.10.3,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.3,add the scanning line in the direction (y + dir) if necessary
v0.10.3,check minmax for Y if necessary
v0.10.3,calc gauss weights
v0.10.3,normalization weights
v0.10.3,walk through all source points for blur
v0.10.3,walk through x-neighbors
v0.10.3,walk through y-neighbors
v0.10.3,"copy visited points (only ""black"")"
v0.10.3,walk through inner values except points on the boundary of the image
v0.10.3,"check if any neighbor with a ""white"" color"
v0.10.3,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.3,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.3,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.3,walk through points on the boundary of the image if necessary
v0.10.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.3,walk through radius-neighbors of border points and add them to the result array
v0.10.3,walk through x-neighbors
v0.10.3,check the uniqueness
v0.10.3,walk through y-neighbors
v0.10.3,check the uniqueness
v0.10.3,calc gauss weights
v0.10.3,normalization weights
v0.10.3,walk through all border points for blur
v0.10.3,walk through x-neighbors
v0.10.3,check minmax
v0.10.3,walk through y-neighbors
v0.10.3,check minmax
v0.10.3,walk through inner values except points on the boundary of the image
v0.10.3,"check if any neighbor with a ""white"" color"
v0.10.3,if (data[k + 1] + data[k - 1] +
v0.10.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.3,walk through points on the boundary of the image if necessary
v0.10.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.3,walk through inner values except points on the boundary of the image
v0.10.3,"check if any neighbor with a ""white"" color"
v0.10.3,if (data[k + 1] + data[k - 1] +
v0.10.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.3,walk through points on the boundary of the image if necessary
v0.10.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.3,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.3,"all [dx,dy] pairs (array index is the direction)"
v0.10.3,5 6 7
v0.10.3,4 X 0
v0.10.3,3 2 1
v0.10.3,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.3,need contour tracing
v0.10.3,bypass all the neighbors around the current point in a clockwise
v0.10.3,get the next point by new direction
v0.10.3,black boundary pixel
v0.10.3,walk through all contours
v0.10.3,contour isn't simplified
v0.10.3,no intermediate points
v0.10.3,calc the distance from current point to edge
v0.10.3,"if the max ""deviation"" is larger than allowed then..."
v0.10.3,## File Watcher
v0.10.3,Flask/Gunicorn
v0.10.3,
v0.10.3,LOG_LEVEL - The granularity of log output
v0.10.3,
v0.10.3,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.3,
v0.10.3,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.3,clients that a single process can handle.
v0.10.3,
v0.10.3,A positive integer generally set to around 1000.
v0.10.3,
v0.10.3,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.3,in this number of seconds it is killed and a new worker is
v0.10.3,spawned to replace it.
v0.10.3,
v0.10.3,## Workers
v0.10.3,## Dataset Options
v0.10.3,## User Options
v0.10.3,## Models
v0.10.3,Remove all poeple who were annotating when
v0.10.3,the server shutdown
v0.10.3,invalid image ID
v0.10.3,Remove user from pervious room
v0.10.3,Remove user from room
v0.10.3,check if its a hidden file
v0.10.3,Compute segmentation
v0.10.3,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.3,Cruve
v0.10.3,Point
v0.10.3,Make sure shape is not all outside the image
v0.10.3,len 4 means this is a line with no width; it contributes
v0.10.3,"no area to the mask, and if we include it, coco will treat"
v0.10.3,it instead as a bbox (and throw an error)
v0.10.3,Convert into rle
v0.10.3,@api.route('/<int:annotation_id>/mask')
v0.10.3,class AnnotationMask(Resource):
v0.10.3,"def get(self, annotation_id):"
v0.10.3,""""""" Returns the binary mask of an annotation """""""
v0.10.3,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.3,padding = args.get('padding')
v0.10.3,threshold = args.get('threshold')
v0.10.3,"print(query, flush=True)"
v0.10.3,Check if dataset exists
v0.10.3,Make sure folder starts with is in proper format
v0.10.3,Get directory
v0.10.3,check if the id exits
v0.10.3,check if the name to update is the same as already stored
v0.10.3,check if the name is empty
v0.10.3,update name of the category
v0.10.3,check if the name to update exits already in db
v0.10.3,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.3,it is only triggered when the name already exists and the creator is the same
v0.10.3,Create /api/ space
v0.10.3,Remove default namespace
v0.10.3,Setup API namespaces
v0.10.3,Check if current user can access dataset
v0.10.3,Iterate every category passed in the data
v0.10.3,Find corresponding category object in the database
v0.10.3,Iterate every annotation from the data annotations
v0.10.3,Find corresponding annotation object in database
v0.10.3,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.3,"the annotation twice, checking if the paperjs exists."
v0.10.3,Update annotation in database
v0.10.3,Update paperjs if it exists
v0.10.3,Generate coco formatted segmentation data
v0.10.3,Get next and previous image
v0.10.3,Generate data about the image to return to client
v0.10.3,import pycocotools.mask as mask
v0.10.3,iterate though all categoires and upsert
v0.10.3,category id mapping  ( file : database )
v0.10.3,Create any missing categories
v0.10.3,map category ids
v0.10.3,update progress
v0.10.3,image id mapping ( file: database )
v0.10.3,Find all images
v0.10.3,update progress
v0.10.3,"is_crowd = annotation.get('iscrowed', False)"
v0.10.3,Category 1 Test
v0.10.3,Category 2 Test
v0.10.3,Category 3 Test
v0.10.3,TODO write tests for data
v0.10.3,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.3,: Start date of the executor
v0.10.3,: End date of the executor
v0.10.3,If any of the information is relevant to the task
v0.10.3,it should be added
v0.10.3,Send socket update every 10%
v0.10.3,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.3,-- Contants
v0.10.3,-- Private
v0.10.3,-- Database
v0.10.3,Absolute path to image file
v0.10.3,True if the image is annotated
v0.10.3,Poeple currently annotation the image
v0.10.3,Get dataset name from path
v0.10.3,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.3,TODO: Fix why using the functions throws an error
v0.10.3,meta = {'allow_inheritance': True}
v0.10.3,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.3,Use this methods until a solution is found
v0.10.3,map category names to ids; create as needed
v0.10.2,"import Home from ""@/views/Home"";"
v0.10.2,"mode: ""history"","
v0.10.2,TODO: Remove assoicated lines
v0.10.2,We need to move the line aswell
v0.10.2,If labels convert to indexs
v0.10.2,Draw line if points exist
v0.10.2,Order doesn't matter so can sort first
v0.10.2,Cantor pairing function
v0.10.2,convert 3-digit hex to 6-digits.
v0.10.2,invert color components
v0.10.2,pad each with zeros and return
v0.10.2,"e: { test: true, data: ""info"" }"
v0.10.2,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.2,
v0.10.2,The MIT License (MIT)
v0.10.2,
v0.10.2,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.2,
v0.10.2,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.2,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.2,"in the Software without restriction, including without limitation the rights"
v0.10.2,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.2,"copies of the Software, and to permit persons to whom the Software is"
v0.10.2,"furnished to do so, subject to the following conditions:"
v0.10.2,
v0.10.2,The above copyright notice and this permission notice shall be included in
v0.10.2,all copies or substantial portions of the Software.
v0.10.2,
v0.10.2,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.2,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.2,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.2,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.2,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.2,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.2,THE SOFTWARE.
v0.10.2,compare the color of the sample
v0.10.2,walk to left side starting with the left neighbor
v0.10.2,compare the color of the sample
v0.10.2,walk to right side starting with the right neighbor
v0.10.2,compare the color of the sample
v0.10.2,check minmax for X
v0.10.2,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.2,add the scanning line in the direction (y + dir) if necessary
v0.10.2,check minmax for Y if necessary
v0.10.2,calc gauss weights
v0.10.2,normalization weights
v0.10.2,walk through all source points for blur
v0.10.2,walk through x-neighbors
v0.10.2,walk through y-neighbors
v0.10.2,"copy visited points (only ""black"")"
v0.10.2,walk through inner values except points on the boundary of the image
v0.10.2,"check if any neighbor with a ""white"" color"
v0.10.2,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.2,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.2,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.2,walk through points on the boundary of the image if necessary
v0.10.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.2,walk through radius-neighbors of border points and add them to the result array
v0.10.2,walk through x-neighbors
v0.10.2,check the uniqueness
v0.10.2,walk through y-neighbors
v0.10.2,check the uniqueness
v0.10.2,calc gauss weights
v0.10.2,normalization weights
v0.10.2,walk through all border points for blur
v0.10.2,walk through x-neighbors
v0.10.2,check minmax
v0.10.2,walk through y-neighbors
v0.10.2,check minmax
v0.10.2,walk through inner values except points on the boundary of the image
v0.10.2,"check if any neighbor with a ""white"" color"
v0.10.2,if (data[k + 1] + data[k - 1] +
v0.10.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.2,walk through points on the boundary of the image if necessary
v0.10.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.2,walk through inner values except points on the boundary of the image
v0.10.2,"check if any neighbor with a ""white"" color"
v0.10.2,if (data[k + 1] + data[k - 1] +
v0.10.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.2,walk through points on the boundary of the image if necessary
v0.10.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.2,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.2,"all [dx,dy] pairs (array index is the direction)"
v0.10.2,5 6 7
v0.10.2,4 X 0
v0.10.2,3 2 1
v0.10.2,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.2,need contour tracing
v0.10.2,bypass all the neighbors around the current point in a clockwise
v0.10.2,get the next point by new direction
v0.10.2,black boundary pixel
v0.10.2,walk through all contours
v0.10.2,contour isn't simplified
v0.10.2,no intermediate points
v0.10.2,calc the distance from current point to edge
v0.10.2,"if the max ""deviation"" is larger than allowed then..."
v0.10.2,## File Watcher
v0.10.2,Flask/Gunicorn
v0.10.2,
v0.10.2,LOG_LEVEL - The granularity of log output
v0.10.2,
v0.10.2,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.2,
v0.10.2,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.2,clients that a single process can handle.
v0.10.2,
v0.10.2,A positive integer generally set to around 1000.
v0.10.2,
v0.10.2,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.2,in this number of seconds it is killed and a new worker is
v0.10.2,spawned to replace it.
v0.10.2,
v0.10.2,## Workers
v0.10.2,## Dataset Options
v0.10.2,## User Options
v0.10.2,## Models
v0.10.2,Remove all poeple who were annotating when
v0.10.2,the server shutdown
v0.10.2,invalid image ID
v0.10.2,Remove user from pervious room
v0.10.2,Remove user from room
v0.10.2,check if its a hidden file
v0.10.2,Compute segmentation
v0.10.2,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.2,Cruve
v0.10.2,Point
v0.10.2,Make sure shape is not all outside the image
v0.10.2,len 4 means this is a line with no width; it contributes
v0.10.2,"no area to the mask, and if we include it, coco will treat"
v0.10.2,it instead as a bbox (and throw an error)
v0.10.2,Convert into rle
v0.10.2,@api.route('/<int:annotation_id>/mask')
v0.10.2,class AnnotationMask(Resource):
v0.10.2,"def get(self, annotation_id):"
v0.10.2,""""""" Returns the binary mask of an annotation """""""
v0.10.2,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.2,padding = args.get('padding')
v0.10.2,threshold = args.get('threshold')
v0.10.2,"print(query, flush=True)"
v0.10.2,Check if dataset exists
v0.10.2,Make sure folder starts with is in proper format
v0.10.2,Get directory
v0.10.2,check if the id exits
v0.10.2,check if the name to update is the same as already stored
v0.10.2,check if the name is empty
v0.10.2,update name of the category
v0.10.2,check if the name to update exits already in db
v0.10.2,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.2,it is only triggered when the name already exists and the creator is the same
v0.10.2,Create /api/ space
v0.10.2,Remove default namespace
v0.10.2,Setup API namespaces
v0.10.2,Check if current user can access dataset
v0.10.2,Iterate every category passed in the data
v0.10.2,Find corresponding category object in the database
v0.10.2,Iterate every annotation from the data annotations
v0.10.2,Find corresponding annotation object in database
v0.10.2,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.2,"the annotation twice, checking if the paperjs exists."
v0.10.2,Update annotation in database
v0.10.2,Update paperjs if it exists
v0.10.2,Generate coco formatted segmentation data
v0.10.2,Get next and previous image
v0.10.2,Generate data about the image to return to client
v0.10.2,import pycocotools.mask as mask
v0.10.2,iterate though all categoires and upsert
v0.10.2,category id mapping  ( file : database )
v0.10.2,Create any missing categories
v0.10.2,map category ids
v0.10.2,update progress
v0.10.2,image id mapping ( file: database )
v0.10.2,Find all images
v0.10.2,update progress
v0.10.2,"is_crowd = annotation.get('iscrowed', False)"
v0.10.2,Category 1 Test
v0.10.2,Category 2 Test
v0.10.2,Category 3 Test
v0.10.2,TODO write tests for data
v0.10.2,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.2,: Start date of the executor
v0.10.2,: End date of the executor
v0.10.2,If any of the information is relevant to the task
v0.10.2,it should be added
v0.10.2,Send socket update every 10%
v0.10.2,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.2,-- Contants
v0.10.2,-- Private
v0.10.2,-- Database
v0.10.2,Absolute path to image file
v0.10.2,True if the image is annotated
v0.10.2,Poeple currently annotation the image
v0.10.2,Get dataset name from path
v0.10.2,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.2,TODO: Fix why using the functions throws an error
v0.10.2,meta = {'allow_inheritance': True}
v0.10.2,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.2,Use this methods until a solution is found
v0.10.2,map category names to ids; create as needed
v0.10.1,"import Home from ""@/views/Home"";"
v0.10.1,"mode: ""history"","
v0.10.1,TODO: Remove assoicated lines
v0.10.1,We need to move the line aswell
v0.10.1,If labels convert to indexs
v0.10.1,Draw line if points exist
v0.10.1,Order doesn't matter so can sort first
v0.10.1,Cantor pairing function
v0.10.1,convert 3-digit hex to 6-digits.
v0.10.1,invert color components
v0.10.1,pad each with zeros and return
v0.10.1,"e: { test: true, data: ""info"" }"
v0.10.1,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.1,
v0.10.1,The MIT License (MIT)
v0.10.1,
v0.10.1,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.1,
v0.10.1,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.1,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.1,"in the Software without restriction, including without limitation the rights"
v0.10.1,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.1,"copies of the Software, and to permit persons to whom the Software is"
v0.10.1,"furnished to do so, subject to the following conditions:"
v0.10.1,
v0.10.1,The above copyright notice and this permission notice shall be included in
v0.10.1,all copies or substantial portions of the Software.
v0.10.1,
v0.10.1,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.1,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.1,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.1,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.1,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.1,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.1,THE SOFTWARE.
v0.10.1,compare the color of the sample
v0.10.1,walk to left side starting with the left neighbor
v0.10.1,compare the color of the sample
v0.10.1,walk to right side starting with the right neighbor
v0.10.1,compare the color of the sample
v0.10.1,check minmax for X
v0.10.1,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.1,add the scanning line in the direction (y + dir) if necessary
v0.10.1,check minmax for Y if necessary
v0.10.1,calc gauss weights
v0.10.1,normalization weights
v0.10.1,walk through all source points for blur
v0.10.1,walk through x-neighbors
v0.10.1,walk through y-neighbors
v0.10.1,"copy visited points (only ""black"")"
v0.10.1,walk through inner values except points on the boundary of the image
v0.10.1,"check if any neighbor with a ""white"" color"
v0.10.1,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.1,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.1,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.1,walk through points on the boundary of the image if necessary
v0.10.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.1,walk through radius-neighbors of border points and add them to the result array
v0.10.1,walk through x-neighbors
v0.10.1,check the uniqueness
v0.10.1,walk through y-neighbors
v0.10.1,check the uniqueness
v0.10.1,calc gauss weights
v0.10.1,normalization weights
v0.10.1,walk through all border points for blur
v0.10.1,walk through x-neighbors
v0.10.1,check minmax
v0.10.1,walk through y-neighbors
v0.10.1,check minmax
v0.10.1,walk through inner values except points on the boundary of the image
v0.10.1,"check if any neighbor with a ""white"" color"
v0.10.1,if (data[k + 1] + data[k - 1] +
v0.10.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.1,walk through points on the boundary of the image if necessary
v0.10.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.1,walk through inner values except points on the boundary of the image
v0.10.1,"check if any neighbor with a ""white"" color"
v0.10.1,if (data[k + 1] + data[k - 1] +
v0.10.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.1,walk through points on the boundary of the image if necessary
v0.10.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.1,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.1,"all [dx,dy] pairs (array index is the direction)"
v0.10.1,5 6 7
v0.10.1,4 X 0
v0.10.1,3 2 1
v0.10.1,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.1,need contour tracing
v0.10.1,bypass all the neighbors around the current point in a clockwise
v0.10.1,get the next point by new direction
v0.10.1,black boundary pixel
v0.10.1,walk through all contours
v0.10.1,contour isn't simplified
v0.10.1,no intermediate points
v0.10.1,calc the distance from current point to edge
v0.10.1,"if the max ""deviation"" is larger than allowed then..."
v0.10.1,## File Watcher
v0.10.1,Flask/Gunicorn
v0.10.1,
v0.10.1,LOG_LEVEL - The granularity of log output
v0.10.1,
v0.10.1,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.1,
v0.10.1,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.1,clients that a single process can handle.
v0.10.1,
v0.10.1,A positive integer generally set to around 1000.
v0.10.1,
v0.10.1,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.1,in this number of seconds it is killed and a new worker is
v0.10.1,spawned to replace it.
v0.10.1,
v0.10.1,## Workers
v0.10.1,## Dataset Options
v0.10.1,## User Options
v0.10.1,## Models
v0.10.1,Remove all poeple who were annotating when
v0.10.1,the server shutdown
v0.10.1,invalid image ID
v0.10.1,Remove user from pervious room
v0.10.1,Remove user from room
v0.10.1,check if its a hidden file
v0.10.1,Compute segmentation
v0.10.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.1,Cruve
v0.10.1,Point
v0.10.1,Make sure shape is not all outside the image
v0.10.1,len 4 means this is a line with no width; it contributes
v0.10.1,"no area to the mask, and if we include it, coco will treat"
v0.10.1,it instead as a bbox (and throw an error)
v0.10.1,Convert into rle
v0.10.1,@api.route('/<int:annotation_id>/mask')
v0.10.1,class AnnotationMask(Resource):
v0.10.1,"def get(self, annotation_id):"
v0.10.1,""""""" Returns the binary mask of an annotation """""""
v0.10.1,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.1,padding = args.get('padding')
v0.10.1,threshold = args.get('threshold')
v0.10.1,"print(query, flush=True)"
v0.10.1,Check if dataset exists
v0.10.1,Make sure folder starts with is in proper format
v0.10.1,Get directory
v0.10.1,check if the id exits
v0.10.1,check if the name to update is the same as already stored
v0.10.1,check if the name is empty
v0.10.1,update name of the category
v0.10.1,check if the name to update exits already in db
v0.10.1,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.1,it is only triggered when the name already exists and the creator is the same
v0.10.1,Create /api/ space
v0.10.1,Remove default namespace
v0.10.1,Setup API namespaces
v0.10.1,Check if current user can access dataset
v0.10.1,Iterate every category passed in the data
v0.10.1,Find corresponding category object in the database
v0.10.1,Iterate every annotation from the data annotations
v0.10.1,Find corresponding annotation object in database
v0.10.1,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.1,"the annotation twice, checking if the paperjs exists."
v0.10.1,Update annotation in database
v0.10.1,Update paperjs if it exists
v0.10.1,Generate coco formatted segmentation data
v0.10.1,Get next and previous image
v0.10.1,Generate data about the image to return to client
v0.10.1,import pycocotools.mask as mask
v0.10.1,category id mapping  ( file : database )
v0.10.1,Create any missing categories
v0.10.1,map category ids
v0.10.1,update progress
v0.10.1,image id mapping ( file: database )
v0.10.1,Find all images
v0.10.1,update progress
v0.10.1,"is_crowd = annotation.get('iscrowed', False)"
v0.10.1,Category 1 Test
v0.10.1,Category 2 Test
v0.10.1,Category 3 Test
v0.10.1,TODO write tests for data
v0.10.1,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.1,: Start date of the executor
v0.10.1,: End date of the executor
v0.10.1,If any of the information is relevant to the task
v0.10.1,it should be added
v0.10.1,Send socket update every 10%
v0.10.1,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.1,-- Contants
v0.10.1,-- Private
v0.10.1,-- Database
v0.10.1,Absolute path to image file
v0.10.1,True if the image is annotated
v0.10.1,Poeple currently annotation the image
v0.10.1,Get dataset name from path
v0.10.1,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.1,TODO: Fix why using the functions throws an error
v0.10.1,meta = {'allow_inheritance': True}
v0.10.1,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.1,Use this methods until a solution is found
v0.10.1,map category names to ids; create as needed
v0.10.0,"import Home from ""@/views/Home"";"
v0.10.0,"mode: ""history"","
v0.10.0,TODO: Remove assoicated lines
v0.10.0,We need to move the line aswell
v0.10.0,If labels convert to indexs
v0.10.0,Draw line if points exist
v0.10.0,Order doesn't matter so can sort first
v0.10.0,Cantor pairing function
v0.10.0,convert 3-digit hex to 6-digits.
v0.10.0,invert color components
v0.10.0,pad each with zeros and return
v0.10.0,"e: { test: true, data: ""info"" }"
v0.10.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.10.0,
v0.10.0,The MIT License (MIT)
v0.10.0,
v0.10.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.10.0,
v0.10.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.10.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.10.0,"in the Software without restriction, including without limitation the rights"
v0.10.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.10.0,"copies of the Software, and to permit persons to whom the Software is"
v0.10.0,"furnished to do so, subject to the following conditions:"
v0.10.0,
v0.10.0,The above copyright notice and this permission notice shall be included in
v0.10.0,all copies or substantial portions of the Software.
v0.10.0,
v0.10.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.10.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.10.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.10.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.10.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.10.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.10.0,THE SOFTWARE.
v0.10.0,compare the color of the sample
v0.10.0,walk to left side starting with the left neighbor
v0.10.0,compare the color of the sample
v0.10.0,walk to right side starting with the right neighbor
v0.10.0,compare the color of the sample
v0.10.0,check minmax for X
v0.10.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.10.0,add the scanning line in the direction (y + dir) if necessary
v0.10.0,check minmax for Y if necessary
v0.10.0,calc gauss weights
v0.10.0,normalization weights
v0.10.0,walk through all source points for blur
v0.10.0,walk through x-neighbors
v0.10.0,walk through y-neighbors
v0.10.0,"copy visited points (only ""black"")"
v0.10.0,walk through inner values except points on the boundary of the image
v0.10.0,"check if any neighbor with a ""white"" color"
v0.10.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.10.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.10.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.10.0,walk through points on the boundary of the image if necessary
v0.10.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.0,walk through radius-neighbors of border points and add them to the result array
v0.10.0,walk through x-neighbors
v0.10.0,check the uniqueness
v0.10.0,walk through y-neighbors
v0.10.0,check the uniqueness
v0.10.0,calc gauss weights
v0.10.0,normalization weights
v0.10.0,walk through all border points for blur
v0.10.0,walk through x-neighbors
v0.10.0,check minmax
v0.10.0,walk through y-neighbors
v0.10.0,check minmax
v0.10.0,walk through inner values except points on the boundary of the image
v0.10.0,"check if any neighbor with a ""white"" color"
v0.10.0,if (data[k + 1] + data[k - 1] +
v0.10.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.0,walk through points on the boundary of the image if necessary
v0.10.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.0,walk through inner values except points on the boundary of the image
v0.10.0,"check if any neighbor with a ""white"" color"
v0.10.0,if (data[k + 1] + data[k - 1] +
v0.10.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.10.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.10.0,walk through points on the boundary of the image if necessary
v0.10.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.10.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.10.0,"all [dx,dy] pairs (array index is the direction)"
v0.10.0,5 6 7
v0.10.0,4 X 0
v0.10.0,3 2 1
v0.10.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.10.0,need contour tracing
v0.10.0,bypass all the neighbors around the current point in a clockwise
v0.10.0,get the next point by new direction
v0.10.0,black boundary pixel
v0.10.0,walk through all contours
v0.10.0,contour isn't simplified
v0.10.0,no intermediate points
v0.10.0,calc the distance from current point to edge
v0.10.0,"if the max ""deviation"" is larger than allowed then..."
v0.10.0,## File Watcher
v0.10.0,Flask/Gunicorn
v0.10.0,
v0.10.0,LOG_LEVEL - The granularity of log output
v0.10.0,
v0.10.0,"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical"""
v0.10.0,
v0.10.0,WORKER_CONNECTIONS - limits the maximum number of simultaneous
v0.10.0,clients that a single process can handle.
v0.10.0,
v0.10.0,A positive integer generally set to around 1000.
v0.10.0,
v0.10.0,WORKER_TIMEOUT - If a worker does not notify the master process
v0.10.0,in this number of seconds it is killed and a new worker is
v0.10.0,spawned to replace it.
v0.10.0,
v0.10.0,## Workers
v0.10.0,## Dataset Options
v0.10.0,## User Options
v0.10.0,## Models
v0.10.0,Remove all poeple who were annotating when
v0.10.0,the server shutdown
v0.10.0,invalid image ID
v0.10.0,Remove user from pervious room
v0.10.0,Remove user from room
v0.10.0,check if its a hidden file
v0.10.0,Compute segmentation
v0.10.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.10.0,Cruve
v0.10.0,Point
v0.10.0,Make sure shape is not all outside the image
v0.10.0,len 4 means this is a line with no width; it contributes
v0.10.0,"no area to the mask, and if we include it, coco will treat"
v0.10.0,it instead as a bbox (and throw an error)
v0.10.0,Convert into rle
v0.10.0,@api.route('/<int:annotation_id>/mask')
v0.10.0,class AnnotationMask(Resource):
v0.10.0,"def get(self, annotation_id):"
v0.10.0,""""""" Returns the binary mask of an annotation """""""
v0.10.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.10.0,"print(query, flush=True)"
v0.10.0,Check if dataset exists
v0.10.0,Make sure folder starts with is in proper format
v0.10.0,Get directory
v0.10.0,check if the id exits
v0.10.0,check if the name to update is the same as already stored
v0.10.0,check if the name is empty
v0.10.0,update name of the category
v0.10.0,check if the name to update exits already in db
v0.10.0,@ToDo: Is it necessary to allow equal category names among different creators?
v0.10.0,it is only triggered when the name already exists and the creator is the same
v0.10.0,Create /api/ space
v0.10.0,Remove default namespace
v0.10.0,Setup API namespaces
v0.10.0,Check if current user can access dataset
v0.10.0,Iterate every category passed in the data
v0.10.0,Find corresponding category object in the database
v0.10.0,Iterate every annotation from the data annotations
v0.10.0,Find corresponding annotation object in database
v0.10.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.10.0,"the annotation twice, checking if the paperjs exists."
v0.10.0,Update annotation in database
v0.10.0,Update paperjs if it exists
v0.10.0,Generate coco formatted segmentation data
v0.10.0,Get next and previous image
v0.10.0,Generate data about the image to return to client
v0.10.0,import pycocotools.mask as mask
v0.10.0,category id mapping  ( file : database )
v0.10.0,Create any missing categories
v0.10.0,map category ids
v0.10.0,update progress
v0.10.0,image id mapping ( file: database )
v0.10.0,Find all images
v0.10.0,update progress
v0.10.0,Category 1 Test
v0.10.0,Category 2 Test
v0.10.0,Category 3 Test
v0.10.0,TODO write tests for data
v0.10.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.10.0,: Start date of the executor
v0.10.0,: End date of the executor
v0.10.0,If any of the information is relevant to the task
v0.10.0,it should be added
v0.10.0,Send socket update every 10%
v0.10.0,"logger.debug(f""Emitting {percent} progress update for task {self.id}"")"
v0.10.0,-- Contants
v0.10.0,-- Private
v0.10.0,-- Database
v0.10.0,Absolute path to image file
v0.10.0,True if the image is annotated
v0.10.0,Poeple currently annotation the image
v0.10.0,Get dataset name from path
v0.10.0,logger.debug(f'Generating thumbnail for {self.id}')
v0.10.0,TODO: Fix why using the functions throws an error
v0.10.0,"def download_images(self, keywords, limit=100):"
v0.10.0,task = TaskModel(
v0.10.0,"name=""Downloading {} images to {} with keywords {}"".format(limit, self.name, keywords),"
v0.10.0,"dataset_id=self.id,"
v0.10.0,"group=""Downloading Images"""
v0.10.0,)
v0.10.0,"def download_images(task, dataset, keywords, limit):"
v0.10.0,def custom_print(string):
v0.10.0,"__builtins__.print(""%f -- %s"" % (time.time(), string))"
v0.10.0,print = dprint
v0.10.0,task.log()
v0.10.0,for keyword in args['keywords']:
v0.10.0,response = gid.googleimagesdownload()
v0.10.0,response.download({
v0.10.0,"""keywords"": keyword,"
v0.10.0,"""limit"": args['limit'],"
v0.10.0,"""output_directory"": output_dir,"
v0.10.0,"""no_numbering"": True,"
v0.10.0,"""format"": ""jpg"","
v0.10.0,"""type"": ""photo"","
v0.10.0,"""print_urls"": False,"
v0.10.0,"""print_paths"": False,"
v0.10.0,"""print_size"": False"
v0.10.0,})
v0.10.0,return task
v0.10.0,meta = {'allow_inheritance': True}
v0.10.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.10.0,Use this methods until a solution is found
v0.10.0,map category names to ids; create as needed
v0.9.0,Category 1 Test
v0.9.0,Category 2 Test
v0.9.0,Category 3 Test
v0.9.0,TODO write tests for data
v0.9.0,"import Home from ""@/views/Home"";"
v0.9.0,"mode: ""history"","
v0.9.0,TODO: Remove assoicated lines
v0.9.0,We need to move the line aswell
v0.9.0,If labels convert to indexs
v0.9.0,Draw line if points exist
v0.9.0,Order doesn't matter so can sort first
v0.9.0,Cantor pairing function
v0.9.0,convert 3-digit hex to 6-digits.
v0.9.0,invert color components
v0.9.0,pad each with zeros and return
v0.9.0,"e: { test: true, data: ""info"" }"
v0.9.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.9.0,
v0.9.0,The MIT License (MIT)
v0.9.0,
v0.9.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.9.0,
v0.9.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.9.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.9.0,"in the Software without restriction, including without limitation the rights"
v0.9.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.9.0,"copies of the Software, and to permit persons to whom the Software is"
v0.9.0,"furnished to do so, subject to the following conditions:"
v0.9.0,
v0.9.0,The above copyright notice and this permission notice shall be included in
v0.9.0,all copies or substantial portions of the Software.
v0.9.0,
v0.9.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.9.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.9.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.9.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.9.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.9.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.9.0,THE SOFTWARE.
v0.9.0,compare the color of the sample
v0.9.0,walk to left side starting with the left neighbor
v0.9.0,compare the color of the sample
v0.9.0,walk to right side starting with the right neighbor
v0.9.0,compare the color of the sample
v0.9.0,check minmax for X
v0.9.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.9.0,add the scanning line in the direction (y + dir) if necessary
v0.9.0,check minmax for Y if necessary
v0.9.0,calc gauss weights
v0.9.0,normalization weights
v0.9.0,walk through all source points for blur
v0.9.0,walk through x-neighbors
v0.9.0,walk through y-neighbors
v0.9.0,"copy visited points (only ""black"")"
v0.9.0,walk through inner values except points on the boundary of the image
v0.9.0,"check if any neighbor with a ""white"" color"
v0.9.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.9.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.9.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.9.0,walk through points on the boundary of the image if necessary
v0.9.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.9.0,walk through radius-neighbors of border points and add them to the result array
v0.9.0,walk through x-neighbors
v0.9.0,check the uniqueness
v0.9.0,walk through y-neighbors
v0.9.0,check the uniqueness
v0.9.0,calc gauss weights
v0.9.0,normalization weights
v0.9.0,walk through all border points for blur
v0.9.0,walk through x-neighbors
v0.9.0,check minmax
v0.9.0,walk through y-neighbors
v0.9.0,check minmax
v0.9.0,walk through inner values except points on the boundary of the image
v0.9.0,"check if any neighbor with a ""white"" color"
v0.9.0,if (data[k + 1] + data[k - 1] +
v0.9.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.9.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.9.0,walk through points on the boundary of the image if necessary
v0.9.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.9.0,walk through inner values except points on the boundary of the image
v0.9.0,"check if any neighbor with a ""white"" color"
v0.9.0,if (data[k + 1] + data[k - 1] +
v0.9.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.9.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.9.0,walk through points on the boundary of the image if necessary
v0.9.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.9.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.9.0,"all [dx,dy] pairs (array index is the direction)"
v0.9.0,5 6 7
v0.9.0,4 X 0
v0.9.0,3 2 1
v0.9.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.9.0,need contour tracing
v0.9.0,bypass all the neighbors around the current point in a clockwise
v0.9.0,get the next point by new direction
v0.9.0,black boundary pixel
v0.9.0,walk through all contours
v0.9.0,contour isn't simplified
v0.9.0,no intermediate points
v0.9.0,calc the distance from current point to edge
v0.9.0,"if the max ""deviation"" is larger than allowed then..."
v0.9.0,File Watcher
v0.9.0,Flask instance
v0.9.0,Dataset Options
v0.9.0,User Options
v0.9.0,Models
v0.9.0,-- Contants
v0.9.0,-- Private
v0.9.0,-- Database
v0.9.0,Absolute path to image file
v0.9.0,True if the image is annotated
v0.9.0,Poeple currently annotation the image
v0.9.0,Users who have annotated this image
v0.9.0,Amount of time spent in the annotator viewing this image
v0.9.0,Get dataset name from path
v0.9.0,TODO: Fix why using the functions throws an error
v0.9.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.9.0,: Start date of the executor
v0.9.0,: End date of the executor
v0.9.0,If any of the information is relevant to the task
v0.9.0,it should be added
v0.9.0,Send socket update every 10%
v0.9.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.9.0,Use this methods until a solution is found
v0.9.0,map category names to ids; create as needed
v0.9.0,Remove all poeple who were annotating when
v0.9.0,the server shutdown
v0.9.0,invalid image ID
v0.9.0,Remove user from pervious room
v0.9.0,Remove user from room
v0.9.0,check if its a hidden file
v0.9.0,Compute segmentation
v0.9.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.9.0,Cruve
v0.9.0,Point
v0.9.0,Make sure shape is not all outside the image
v0.9.0,len 4 means this is a line with no width; it contributes
v0.9.0,"no area to the mask, and if we include it, coco will treat"
v0.9.0,it instead as a bbox (and throw an error)
v0.9.0,Convert into rle
v0.9.0,category id mapping  ( file : database )
v0.9.0,Create any missing categories
v0.9.0,map category ids
v0.9.0,update progress
v0.9.0,image id mapping ( file: database )
v0.9.0,Find all images
v0.9.0,update progress
v0.9.0,@api.route('/<int:annotation_id>/mask')
v0.9.0,class AnnotationMask(Resource):
v0.9.0,"def get(self, annotation_id):"
v0.9.0,""""""" Returns the binary mask of an annotation """""""
v0.9.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.9.0,"print(query, flush=True)"
v0.9.0,Check if dataset exists
v0.9.0,Make sure folder starts with is in proper format
v0.9.0,Get directory
v0.9.0,check if the id exits
v0.9.0,check if the name to update is the same as already stored
v0.9.0,check if the name is empty
v0.9.0,update name of the category
v0.9.0,check if the name to update exits already in db
v0.9.0,@ToDo: Is it necessary to allow equal category names among different creators?
v0.9.0,it is only triggered when the name already exists and the creator is the same
v0.9.0,Create /api/ space
v0.9.0,Remove default namespace
v0.9.0,Setup API namespaces
v0.9.0,Check if current user can access dataset
v0.9.0,Iterate every category passed in the data
v0.9.0,Find corresponding category object in the database
v0.9.0,Iterate every annotation from the data annotations
v0.9.0,Find corresponding annotation object in database
v0.9.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.9.0,"the annotation twice, checking if the paperjs exists."
v0.9.0,Update annotation in database
v0.9.0,Update paperjs if it exists
v0.9.0,Generate coco formatted segmentation data
v0.9.0,Get next and previous image
v0.9.0,Generate data about the image to return to client
v0.8.0,Category 1 Test
v0.8.0,Category 2 Test
v0.8.0,Category 3 Test
v0.8.0,TODO write tests for data
v0.8.0,"import Home from ""@/views/Home"";"
v0.8.0,"mode: ""history"","
v0.8.0,TODO: Remove assoicated lines
v0.8.0,We need to move the line aswell
v0.8.0,If labels convert to indexs
v0.8.0,Draw line if points exist
v0.8.0,Order doesn't matter so can sort first
v0.8.0,Cantor pairing function
v0.8.0,convert 3-digit hex to 6-digits.
v0.8.0,invert color components
v0.8.0,pad each with zeros and return
v0.8.0,"e: { test: true, data: ""info"" }"
v0.8.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.8.0,
v0.8.0,The MIT License (MIT)
v0.8.0,
v0.8.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.8.0,
v0.8.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.8.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.8.0,"in the Software without restriction, including without limitation the rights"
v0.8.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.8.0,"copies of the Software, and to permit persons to whom the Software is"
v0.8.0,"furnished to do so, subject to the following conditions:"
v0.8.0,
v0.8.0,The above copyright notice and this permission notice shall be included in
v0.8.0,all copies or substantial portions of the Software.
v0.8.0,
v0.8.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.8.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.8.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.8.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.8.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.8.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.8.0,THE SOFTWARE.
v0.8.0,compare the color of the sample
v0.8.0,walk to left side starting with the left neighbor
v0.8.0,compare the color of the sample
v0.8.0,walk to right side starting with the right neighbor
v0.8.0,compare the color of the sample
v0.8.0,check minmax for X
v0.8.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.8.0,add the scanning line in the direction (y + dir) if necessary
v0.8.0,check minmax for Y if necessary
v0.8.0,calc gauss weights
v0.8.0,normalization weights
v0.8.0,walk through all source points for blur
v0.8.0,walk through x-neighbors
v0.8.0,walk through y-neighbors
v0.8.0,"copy visited points (only ""black"")"
v0.8.0,walk through inner values except points on the boundary of the image
v0.8.0,"check if any neighbor with a ""white"" color"
v0.8.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.8.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.8.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.8.0,walk through points on the boundary of the image if necessary
v0.8.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.8.0,walk through radius-neighbors of border points and add them to the result array
v0.8.0,walk through x-neighbors
v0.8.0,check the uniqueness
v0.8.0,walk through y-neighbors
v0.8.0,check the uniqueness
v0.8.0,calc gauss weights
v0.8.0,normalization weights
v0.8.0,walk through all border points for blur
v0.8.0,walk through x-neighbors
v0.8.0,check minmax
v0.8.0,walk through y-neighbors
v0.8.0,check minmax
v0.8.0,walk through inner values except points on the boundary of the image
v0.8.0,"check if any neighbor with a ""white"" color"
v0.8.0,if (data[k + 1] + data[k - 1] +
v0.8.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.8.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.8.0,walk through points on the boundary of the image if necessary
v0.8.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.8.0,walk through inner values except points on the boundary of the image
v0.8.0,"check if any neighbor with a ""white"" color"
v0.8.0,if (data[k + 1] + data[k - 1] +
v0.8.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.8.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.8.0,walk through points on the boundary of the image if necessary
v0.8.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.8.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.8.0,"all [dx,dy] pairs (array index is the direction)"
v0.8.0,5 6 7
v0.8.0,4 X 0
v0.8.0,3 2 1
v0.8.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.8.0,need contour tracing
v0.8.0,bypass all the neighbors around the current point in a clockwise
v0.8.0,get the next point by new direction
v0.8.0,black boundary pixel
v0.8.0,walk through all contours
v0.8.0,contour isn't simplified
v0.8.0,no intermediate points
v0.8.0,calc the distance from current point to edge
v0.8.0,"if the max ""deviation"" is larger than allowed then..."
v0.8.0,"from flask import Blueprint, render_template"
v0.8.0,"client = Blueprint('client', __name__, static_folder='client')"
v0.8.0,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.8.0,@client.route('/')
v0.8.0,def index():
v0.8.0,return render_template('index.html')
v0.8.0,@client.route('/images/<int:dataset_id>')
v0.8.0,@client.route('/datasets/<int:dataset_id>')
v0.8.0,def index(dataset_id):
v0.8.0,return render_template('images.html')
v0.8.0,
v0.8.0,
v0.8.0,@client.route('/annotate/<int:image_id>')
v0.8.0,@client.route('/editor/<int:image_id>')
v0.8.0,def annotate(image_id):
v0.8.0,return render_template('annotator.html')
v0.8.0,
v0.8.0,
v0.8.0,@client.route('/datasets/')
v0.8.0,def datasets():
v0.8.0,return render_template('datasets.html')
v0.8.0,
v0.8.0,
v0.8.0,@client.route('/categories/')
v0.8.0,def categories():
v0.8.0,return render_template('categories.html')
v0.8.0,
v0.8.0,
v0.8.0,@client.route('/undo/')
v0.8.0,def undo():
v0.8.0,return render_template('undo.html')
v0.8.0,File Watcher
v0.8.0,Flask instance
v0.8.0,Dataset Options
v0.8.0,User Options
v0.8.0,Models
v0.8.0,Get dataset name from path
v0.8.0,TODO: Fix why using the functions throws an error
v0.8.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.8.0,: Start date of the executor
v0.8.0,: End date of the executor
v0.8.0,If any of the information is relevant to the task
v0.8.0,it should be added
v0.8.0,Send socket update every 10%
v0.8.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.8.0,Use this methods until a solution is found
v0.8.0,map category names to ids; create as needed
v0.8.0,Remove all poeple who were annotating when
v0.8.0,the server shutdown
v0.8.0,invalid image ID
v0.8.0,Remove user from pervious room
v0.8.0,Remove user from room
v0.8.0,Check if thumbnails directory
v0.8.0,Compute segmentation
v0.8.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.8.0,Cruve
v0.8.0,Point
v0.8.0,Make sure shape is not all outside the image
v0.8.0,len 4 means this is a line with no width; it contributes
v0.8.0,"no area to the mask, and if we include it, coco will treat"
v0.8.0,it instead as a bbox (and throw an error)
v0.8.0,Convert into rle
v0.8.0,category id mapping  ( file : database )
v0.8.0,Create any missing categories
v0.8.0,map category ids
v0.8.0,update progress
v0.8.0,image id mapping ( file: database )
v0.8.0,Find all images
v0.8.0,update progress
v0.8.0,@api.route('/<int:annotation_id>/mask')
v0.8.0,class AnnotationMask(Resource):
v0.8.0,"def get(self, annotation_id):"
v0.8.0,""""""" Returns the binary mask of an annotation """""""
v0.8.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.8.0,"print(query, flush=True)"
v0.8.0,Check if dataset exists
v0.8.0,Make sure folder starts with is in proper format
v0.8.0,Get directory
v0.8.0,Create /api/ space
v0.8.0,Remove default namespace
v0.8.0,Setup API namespaces
v0.8.0,Check if current user can access dataset
v0.8.0,Iterate every category passed in the data
v0.8.0,Find corresponding category object in the database
v0.8.0,Iterate every annotation from the data annotations
v0.8.0,Find corresponding annotation object in database
v0.8.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.8.0,"the annotation twice, checking if the paperjs exists."
v0.8.0,Update annotation in database
v0.8.0,Update paperjs if it exists
v0.8.0,Generate coco formatted segmentation data
v0.8.0,Get next and previous image
v0.8.0,Generate data about the image to return to client
v0.7.2,Category 1 Test
v0.7.2,Category 2 Test
v0.7.2,Category 3 Test
v0.7.2,TODO write tests for data
v0.7.2,"import Home from ""@/views/Home"";"
v0.7.2,"mode: ""history"","
v0.7.2,TODO: Remove assoicated lines
v0.7.2,We need to move the line aswell
v0.7.2,If labels convert to indexs
v0.7.2,Draw line if points exist
v0.7.2,Order doesn't matter so can sort first
v0.7.2,Cantor pairing function
v0.7.2,convert 3-digit hex to 6-digits.
v0.7.2,invert color components
v0.7.2,pad each with zeros and return
v0.7.2,"e: { test: true, data: ""info"" }"
v0.7.2,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.7.2,
v0.7.2,The MIT License (MIT)
v0.7.2,
v0.7.2,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.7.2,
v0.7.2,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.7.2,"of this software and associated documentation files (the ""Software""), to deal"
v0.7.2,"in the Software without restriction, including without limitation the rights"
v0.7.2,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.7.2,"copies of the Software, and to permit persons to whom the Software is"
v0.7.2,"furnished to do so, subject to the following conditions:"
v0.7.2,
v0.7.2,The above copyright notice and this permission notice shall be included in
v0.7.2,all copies or substantial portions of the Software.
v0.7.2,
v0.7.2,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.7.2,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.7.2,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.7.2,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.7.2,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.7.2,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.7.2,THE SOFTWARE.
v0.7.2,compare the color of the sample
v0.7.2,walk to left side starting with the left neighbor
v0.7.2,compare the color of the sample
v0.7.2,walk to right side starting with the right neighbor
v0.7.2,compare the color of the sample
v0.7.2,check minmax for X
v0.7.2,add two scanning lines in the opposite direction (y - dir) if necessary
v0.7.2,add the scanning line in the direction (y + dir) if necessary
v0.7.2,check minmax for Y if necessary
v0.7.2,calc gauss weights
v0.7.2,normalization weights
v0.7.2,walk through all source points for blur
v0.7.2,walk through x-neighbors
v0.7.2,walk through y-neighbors
v0.7.2,"copy visited points (only ""black"")"
v0.7.2,walk through inner values except points on the boundary of the image
v0.7.2,"check if any neighbor with a ""white"" color"
v0.7.2,if (visitedData[k + 1] + visitedData[k - 1] +
v0.7.2,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.7.2,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.7.2,walk through points on the boundary of the image if necessary
v0.7.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.2,walk through radius-neighbors of border points and add them to the result array
v0.7.2,walk through x-neighbors
v0.7.2,check the uniqueness
v0.7.2,walk through y-neighbors
v0.7.2,check the uniqueness
v0.7.2,calc gauss weights
v0.7.2,normalization weights
v0.7.2,walk through all border points for blur
v0.7.2,walk through x-neighbors
v0.7.2,check minmax
v0.7.2,walk through y-neighbors
v0.7.2,check minmax
v0.7.2,walk through inner values except points on the boundary of the image
v0.7.2,"check if any neighbor with a ""white"" color"
v0.7.2,if (data[k + 1] + data[k - 1] +
v0.7.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.2,walk through points on the boundary of the image if necessary
v0.7.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.2,walk through inner values except points on the boundary of the image
v0.7.2,"check if any neighbor with a ""white"" color"
v0.7.2,if (data[k + 1] + data[k - 1] +
v0.7.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.2,walk through points on the boundary of the image if necessary
v0.7.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.2,"walk through inner values and copy only ""black"" points to the result mask"
v0.7.2,"all [dx,dy] pairs (array index is the direction)"
v0.7.2,5 6 7
v0.7.2,4 X 0
v0.7.2,3 2 1
v0.7.2,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.7.2,need contour tracing
v0.7.2,bypass all the neighbors around the current point in a clockwise
v0.7.2,get the next point by new direction
v0.7.2,black boundary pixel
v0.7.2,walk through all contours
v0.7.2,contour isn't simplified
v0.7.2,no intermediate points
v0.7.2,calc the distance from current point to edge
v0.7.2,"if the max ""deviation"" is larger than allowed then..."
v0.7.2,"from flask import Blueprint, render_template"
v0.7.2,"client = Blueprint('client', __name__, static_folder='client')"
v0.7.2,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.7.2,@client.route('/')
v0.7.2,def index():
v0.7.2,return render_template('index.html')
v0.7.2,@client.route('/images/<int:dataset_id>')
v0.7.2,@client.route('/datasets/<int:dataset_id>')
v0.7.2,def index(dataset_id):
v0.7.2,return render_template('images.html')
v0.7.2,
v0.7.2,
v0.7.2,@client.route('/annotate/<int:image_id>')
v0.7.2,@client.route('/editor/<int:image_id>')
v0.7.2,def annotate(image_id):
v0.7.2,return render_template('annotator.html')
v0.7.2,
v0.7.2,
v0.7.2,@client.route('/datasets/')
v0.7.2,def datasets():
v0.7.2,return render_template('datasets.html')
v0.7.2,
v0.7.2,
v0.7.2,@client.route('/categories/')
v0.7.2,def categories():
v0.7.2,return render_template('categories.html')
v0.7.2,
v0.7.2,
v0.7.2,@client.route('/undo/')
v0.7.2,def undo():
v0.7.2,return render_template('undo.html')
v0.7.2,File Watcher
v0.7.2,Flask instance
v0.7.2,Dataset Options
v0.7.2,Coco Importer Options
v0.7.2,User Options
v0.7.2,Get dataset name from path
v0.7.2,TODO: Fix why using the functions throws an error
v0.7.2,"Type of task: Importer, Exporter, Scanner, etc."
v0.7.2,: Start date of the executor
v0.7.2,: End date of the executor
v0.7.2,If any of the information is relevant to the task
v0.7.2,it should be added
v0.7.2,Send socket update every 10%
v0.7.2,https://github.com/MongoEngine/mongoengine/issues/1171
v0.7.2,Use this methods until a solution is found
v0.7.2,map category names to ids; create as needed
v0.7.2,Remove all poeple who were annotating when
v0.7.2,the server shutdown
v0.7.2,invalid image ID
v0.7.2,Remove user from pervious room
v0.7.2,Remove user from room
v0.7.2,Check if thumbnails directory
v0.7.2,Compute segmentation
v0.7.2,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.7.2,Cruve
v0.7.2,Point
v0.7.2,Make sure shape is not all outside the image
v0.7.2,len 4 means this is a line with no width; it contributes
v0.7.2,"no area to the mask, and if we include it, coco will treat"
v0.7.2,it instead as a bbox (and throw an error)
v0.7.2,Convert into rle
v0.7.2,Create any missing categories
v0.7.2,Add any new categories to dataset
v0.7.2,"split images up into batches, import them in parallel"
v0.7.2,process all images before moving on to annotations
v0.7.2,"split annotations up into batches, import them in parallel"
v0.7.2,update the category ids for the images
v0.7.2,"split images up into batches, import them in parallel"
v0.7.2,process all images before moving on to annotations
v0.7.2,release resources
v0.7.2,Find all images
v0.7.2,"is_crowd = annotation.get('iscrowed', False)"
v0.7.2,Check if annotation already exists
v0.7.2,Create annotation
v0.7.2,annotation.iscrowd = is_crowd
v0.7.2,category id mapping  ( file : database )
v0.7.2,Create any missing categories
v0.7.2,map category ids
v0.7.2,update progress
v0.7.2,image id mapping ( file: database )
v0.7.2,Find all images
v0.7.2,update progress
v0.7.2,@api.route('/<int:annotation_id>/mask')
v0.7.2,class AnnotationMask(Resource):
v0.7.2,"def get(self, annotation_id):"
v0.7.2,""""""" Returns the binary mask of an annotation """""""
v0.7.2,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.7.2,"print(query, flush=True)"
v0.7.2,Check if dataset exists
v0.7.2,Make sure folder starts with is in proper format
v0.7.2,Get directory
v0.7.2,Create /api/ space
v0.7.2,Remove default namespace
v0.7.2,Setup API namespaces
v0.7.2,Check if current user can access dataset
v0.7.2,Iterate every category passed in the data
v0.7.2,Find corresponding category object in the database
v0.7.2,Iterate every annotation from the data annotations
v0.7.2,Find corresponding annotation object in database
v0.7.2,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.7.2,"the annotation twice, checking if the paperjs exists."
v0.7.2,Update annotation in database
v0.7.2,Update paperjs if it exists
v0.7.2,Generate coco formatted segmentation data
v0.7.2,Get next and previous image
v0.7.2,Generate data about the image to return to client
v0.7.1,Category 1 Test
v0.7.1,Category 2 Test
v0.7.1,Category 3 Test
v0.7.1,TODO write tests for data
v0.7.1,"import Home from ""@/views/Home"";"
v0.7.1,"mode: ""history"","
v0.7.1,TODO: Remove assoicated lines
v0.7.1,We need to move the line aswell
v0.7.1,If labels convert to indexs
v0.7.1,Draw line if points exist
v0.7.1,Order doesn't matter so can sort first
v0.7.1,Cantor pairing function
v0.7.1,convert 3-digit hex to 6-digits.
v0.7.1,invert color components
v0.7.1,pad each with zeros and return
v0.7.1,"e: { test: true, data: ""info"" }"
v0.7.1,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.7.1,
v0.7.1,The MIT License (MIT)
v0.7.1,
v0.7.1,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.7.1,
v0.7.1,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.7.1,"of this software and associated documentation files (the ""Software""), to deal"
v0.7.1,"in the Software without restriction, including without limitation the rights"
v0.7.1,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.7.1,"copies of the Software, and to permit persons to whom the Software is"
v0.7.1,"furnished to do so, subject to the following conditions:"
v0.7.1,
v0.7.1,The above copyright notice and this permission notice shall be included in
v0.7.1,all copies or substantial portions of the Software.
v0.7.1,
v0.7.1,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.7.1,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.7.1,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.7.1,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.7.1,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.7.1,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.7.1,THE SOFTWARE.
v0.7.1,compare the color of the sample
v0.7.1,walk to left side starting with the left neighbor
v0.7.1,compare the color of the sample
v0.7.1,walk to right side starting with the right neighbor
v0.7.1,compare the color of the sample
v0.7.1,check minmax for X
v0.7.1,add two scanning lines in the opposite direction (y - dir) if necessary
v0.7.1,add the scanning line in the direction (y + dir) if necessary
v0.7.1,check minmax for Y if necessary
v0.7.1,calc gauss weights
v0.7.1,normalization weights
v0.7.1,walk through all source points for blur
v0.7.1,walk through x-neighbors
v0.7.1,walk through y-neighbors
v0.7.1,"copy visited points (only ""black"")"
v0.7.1,walk through inner values except points on the boundary of the image
v0.7.1,"check if any neighbor with a ""white"" color"
v0.7.1,if (visitedData[k + 1] + visitedData[k - 1] +
v0.7.1,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.7.1,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.7.1,walk through points on the boundary of the image if necessary
v0.7.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.1,walk through radius-neighbors of border points and add them to the result array
v0.7.1,walk through x-neighbors
v0.7.1,check the uniqueness
v0.7.1,walk through y-neighbors
v0.7.1,check the uniqueness
v0.7.1,calc gauss weights
v0.7.1,normalization weights
v0.7.1,walk through all border points for blur
v0.7.1,walk through x-neighbors
v0.7.1,check minmax
v0.7.1,walk through y-neighbors
v0.7.1,check minmax
v0.7.1,walk through inner values except points on the boundary of the image
v0.7.1,"check if any neighbor with a ""white"" color"
v0.7.1,if (data[k + 1] + data[k - 1] +
v0.7.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.1,walk through points on the boundary of the image if necessary
v0.7.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.1,walk through inner values except points on the boundary of the image
v0.7.1,"check if any neighbor with a ""white"" color"
v0.7.1,if (data[k + 1] + data[k - 1] +
v0.7.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.1,walk through points on the boundary of the image if necessary
v0.7.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.1,"walk through inner values and copy only ""black"" points to the result mask"
v0.7.1,"all [dx,dy] pairs (array index is the direction)"
v0.7.1,5 6 7
v0.7.1,4 X 0
v0.7.1,3 2 1
v0.7.1,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.7.1,need contour tracing
v0.7.1,bypass all the neighbors around the current point in a clockwise
v0.7.1,get the next point by new direction
v0.7.1,black boundary pixel
v0.7.1,walk through all contours
v0.7.1,contour isn't simplified
v0.7.1,no intermediate points
v0.7.1,calc the distance from current point to edge
v0.7.1,"if the max ""deviation"" is larger than allowed then..."
v0.7.1,"from flask import Blueprint, render_template"
v0.7.1,"client = Blueprint('client', __name__, static_folder='client')"
v0.7.1,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.7.1,@client.route('/')
v0.7.1,def index():
v0.7.1,return render_template('index.html')
v0.7.1,@client.route('/images/<int:dataset_id>')
v0.7.1,@client.route('/datasets/<int:dataset_id>')
v0.7.1,def index(dataset_id):
v0.7.1,return render_template('images.html')
v0.7.1,
v0.7.1,
v0.7.1,@client.route('/annotate/<int:image_id>')
v0.7.1,@client.route('/editor/<int:image_id>')
v0.7.1,def annotate(image_id):
v0.7.1,return render_template('annotator.html')
v0.7.1,
v0.7.1,
v0.7.1,@client.route('/datasets/')
v0.7.1,def datasets():
v0.7.1,return render_template('datasets.html')
v0.7.1,
v0.7.1,
v0.7.1,@client.route('/categories/')
v0.7.1,def categories():
v0.7.1,return render_template('categories.html')
v0.7.1,
v0.7.1,
v0.7.1,@client.route('/undo/')
v0.7.1,def undo():
v0.7.1,return render_template('undo.html')
v0.7.1,File Watcher
v0.7.1,Flask instance
v0.7.1,Dataset Options
v0.7.1,Coco Importer Options
v0.7.1,User Options
v0.7.1,Get dataset name from path
v0.7.1,"Type of task: Importer, Exporter, Scanner, etc."
v0.7.1,: Start date of the executor
v0.7.1,: End date of the executor
v0.7.1,If any of the information is relevant to the task
v0.7.1,it should be added
v0.7.1,Send socket update every 10%
v0.7.1,https://github.com/MongoEngine/mongoengine/issues/1171
v0.7.1,Use this methods until a solution is found
v0.7.1,map category names to ids; create as needed
v0.7.1,Remove all poeple who were annotating when
v0.7.1,the server shutdown
v0.7.1,invalid image ID
v0.7.1,Remove user from pervious room
v0.7.1,Remove user from room
v0.7.1,Check if thumbnails directory
v0.7.1,Compute segmentation
v0.7.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.7.1,Cruve
v0.7.1,Point
v0.7.1,Make sure shape is not all outside the image
v0.7.1,len 4 means this is a line with no width; it contributes
v0.7.1,"no area to the mask, and if we include it, coco will treat"
v0.7.1,it instead as a bbox (and throw an error)
v0.7.1,Convert into rle
v0.7.1,Create any missing categories
v0.7.1,Add any new categories to dataset
v0.7.1,"split images up into batches, import them in parallel"
v0.7.1,process all images before moving on to annotations
v0.7.1,"split annotations up into batches, import them in parallel"
v0.7.1,update the category ids for the images
v0.7.1,"split images up into batches, import them in parallel"
v0.7.1,process all images before moving on to annotations
v0.7.1,release resources
v0.7.1,Find all images
v0.7.1,"is_crowd = annotation.get('iscrowed', False)"
v0.7.1,Check if annotation already exists
v0.7.1,Create annotation
v0.7.1,annotation.iscrowd = is_crowd
v0.7.1,category id mapping  ( file : database )
v0.7.1,Create any missing categories
v0.7.1,map category ids
v0.7.1,update progress
v0.7.1,image id mapping ( file: database )
v0.7.1,Find all images
v0.7.1,update progress
v0.7.1,@api.route('/<int:annotation_id>/mask')
v0.7.1,class AnnotationMask(Resource):
v0.7.1,"def get(self, annotation_id):"
v0.7.1,""""""" Returns the binary mask of an annotation """""""
v0.7.1,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.7.1,"print(query, flush=True)"
v0.7.1,Check if dataset exists
v0.7.1,Make sure folder starts with is in proper format
v0.7.1,Get directory
v0.7.1,Create /api/ space
v0.7.1,Remove default namespace
v0.7.1,Setup API namespaces
v0.7.1,Check if current user can access dataset
v0.7.1,Iterate every category passed in the data
v0.7.1,Find corresponding category object in the database
v0.7.1,Iterate every annotation from the data annotations
v0.7.1,Find corresponding annotation object in database
v0.7.1,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.7.1,"the annotation twice, checking if the paperjs exists."
v0.7.1,Update annotation in database
v0.7.1,Update paperjs if it exists
v0.7.1,Generate coco formatted segmentation data
v0.7.1,Get next and previous image
v0.7.1,Generate data about the image to return to client
v0.7.0,Category 1 Test
v0.7.0,Category 2 Test
v0.7.0,Category 3 Test
v0.7.0,TODO write tests for data
v0.7.0,"import Home from ""@/views/Home"";"
v0.7.0,"mode: ""history"","
v0.7.0,TODO: Remove assoicated lines
v0.7.0,We need to move the line aswell
v0.7.0,If labels convert to indexs
v0.7.0,Draw line if points exist
v0.7.0,Order doesn't matter so can sort first
v0.7.0,Cantor pairing function
v0.7.0,convert 3-digit hex to 6-digits.
v0.7.0,invert color components
v0.7.0,pad each with zeros and return
v0.7.0,"e: { test: true, data: ""info"" }"
v0.7.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.7.0,
v0.7.0,The MIT License (MIT)
v0.7.0,
v0.7.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.7.0,
v0.7.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.7.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.7.0,"in the Software without restriction, including without limitation the rights"
v0.7.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.7.0,"copies of the Software, and to permit persons to whom the Software is"
v0.7.0,"furnished to do so, subject to the following conditions:"
v0.7.0,
v0.7.0,The above copyright notice and this permission notice shall be included in
v0.7.0,all copies or substantial portions of the Software.
v0.7.0,
v0.7.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.7.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.7.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.7.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.7.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.7.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.7.0,THE SOFTWARE.
v0.7.0,compare the color of the sample
v0.7.0,walk to left side starting with the left neighbor
v0.7.0,compare the color of the sample
v0.7.0,walk to right side starting with the right neighbor
v0.7.0,compare the color of the sample
v0.7.0,check minmax for X
v0.7.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.7.0,add the scanning line in the direction (y + dir) if necessary
v0.7.0,check minmax for Y if necessary
v0.7.0,calc gauss weights
v0.7.0,normalization weights
v0.7.0,walk through all source points for blur
v0.7.0,walk through x-neighbors
v0.7.0,walk through y-neighbors
v0.7.0,"copy visited points (only ""black"")"
v0.7.0,walk through inner values except points on the boundary of the image
v0.7.0,"check if any neighbor with a ""white"" color"
v0.7.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.7.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.7.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.7.0,walk through points on the boundary of the image if necessary
v0.7.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.0,walk through radius-neighbors of border points and add them to the result array
v0.7.0,walk through x-neighbors
v0.7.0,check the uniqueness
v0.7.0,walk through y-neighbors
v0.7.0,check the uniqueness
v0.7.0,calc gauss weights
v0.7.0,normalization weights
v0.7.0,walk through all border points for blur
v0.7.0,walk through x-neighbors
v0.7.0,check minmax
v0.7.0,walk through y-neighbors
v0.7.0,check minmax
v0.7.0,walk through inner values except points on the boundary of the image
v0.7.0,"check if any neighbor with a ""white"" color"
v0.7.0,if (data[k + 1] + data[k - 1] +
v0.7.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.0,walk through points on the boundary of the image if necessary
v0.7.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.0,walk through inner values except points on the boundary of the image
v0.7.0,"check if any neighbor with a ""white"" color"
v0.7.0,if (data[k + 1] + data[k - 1] +
v0.7.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.7.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.7.0,walk through points on the boundary of the image if necessary
v0.7.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.7.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.7.0,"all [dx,dy] pairs (array index is the direction)"
v0.7.0,5 6 7
v0.7.0,4 X 0
v0.7.0,3 2 1
v0.7.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.7.0,need contour tracing
v0.7.0,bypass all the neighbors around the current point in a clockwise
v0.7.0,get the next point by new direction
v0.7.0,black boundary pixel
v0.7.0,walk through all contours
v0.7.0,contour isn't simplified
v0.7.0,no intermediate points
v0.7.0,calc the distance from current point to edge
v0.7.0,"if the max ""deviation"" is larger than allowed then..."
v0.7.0,"from flask import Blueprint, render_template"
v0.7.0,"client = Blueprint('client', __name__, static_folder='client')"
v0.7.0,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.7.0,@client.route('/')
v0.7.0,def index():
v0.7.0,return render_template('index.html')
v0.7.0,@client.route('/images/<int:dataset_id>')
v0.7.0,@client.route('/datasets/<int:dataset_id>')
v0.7.0,def index(dataset_id):
v0.7.0,return render_template('images.html')
v0.7.0,
v0.7.0,
v0.7.0,@client.route('/annotate/<int:image_id>')
v0.7.0,@client.route('/editor/<int:image_id>')
v0.7.0,def annotate(image_id):
v0.7.0,return render_template('annotator.html')
v0.7.0,
v0.7.0,
v0.7.0,@client.route('/datasets/')
v0.7.0,def datasets():
v0.7.0,return render_template('datasets.html')
v0.7.0,
v0.7.0,
v0.7.0,@client.route('/categories/')
v0.7.0,def categories():
v0.7.0,return render_template('categories.html')
v0.7.0,
v0.7.0,
v0.7.0,@client.route('/undo/')
v0.7.0,def undo():
v0.7.0,return render_template('undo.html')
v0.7.0,File Watcher
v0.7.0,Flask instance
v0.7.0,Dataset Options
v0.7.0,Coco Importer Options
v0.7.0,User Options
v0.7.0,Get dataset name from path
v0.7.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.7.0,: Start date of the executor
v0.7.0,: End date of the executor
v0.7.0,If any of the information is relevant to the task
v0.7.0,it should be added
v0.7.0,Send socket update every 10%
v0.7.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.7.0,Use this methods until a solution is found
v0.7.0,map category names to ids; create as needed
v0.7.0,Remove all poeple who were annotating when
v0.7.0,the server shutdown
v0.7.0,invalid image ID
v0.7.0,Remove user from pervious room
v0.7.0,Remove user from room
v0.7.0,Check if thumbnails directory
v0.7.0,Compute segmentation
v0.7.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.7.0,Cruve
v0.7.0,Point
v0.7.0,Make sure shape is not all outside the image
v0.7.0,len 4 means this is a line with no width; it contributes
v0.7.0,"no area to the mask, and if we include it, coco will treat"
v0.7.0,it instead as a bbox (and throw an error)
v0.7.0,Convert into rle
v0.7.0,Create any missing categories
v0.7.0,Add any new categories to dataset
v0.7.0,"split images up into batches, import them in parallel"
v0.7.0,process all images before moving on to annotations
v0.7.0,"split annotations up into batches, import them in parallel"
v0.7.0,update the category ids for the images
v0.7.0,"split images up into batches, import them in parallel"
v0.7.0,process all images before moving on to annotations
v0.7.0,release resources
v0.7.0,Find all images
v0.7.0,"is_crowd = annotation.get('iscrowed', False)"
v0.7.0,Check if annotation already exists
v0.7.0,Create annotation
v0.7.0,annotation.iscrowd = is_crowd
v0.7.0,category id mapping  ( file : database )
v0.7.0,Create any missing categories
v0.7.0,map category ids
v0.7.0,update progress
v0.7.0,image id mapping ( file: database )
v0.7.0,Find all images
v0.7.0,update progress
v0.7.0,@api.route('/<int:annotation_id>/mask')
v0.7.0,class AnnotationMask(Resource):
v0.7.0,"def get(self, annotation_id):"
v0.7.0,""""""" Returns the binary mask of an annotation """""""
v0.7.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.7.0,"print(query, flush=True)"
v0.7.0,Check if dataset exists
v0.7.0,Make sure folder starts with is in proper format
v0.7.0,Get directory
v0.7.0,Create /api/ space
v0.7.0,Remove default namespace
v0.7.0,Setup API namespaces
v0.7.0,Check if current user can access dataset
v0.7.0,Iterate every category passed in the data
v0.7.0,Find corresponding category object in the database
v0.7.0,Iterate every annotation from the data annotations
v0.7.0,Find corresponding annotation object in database
v0.7.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.7.0,"the annotation twice, checking if the paperjs exists."
v0.7.0,Update annotation in database
v0.7.0,Update paperjs if it exists
v0.7.0,Generate coco formatted segmentation data
v0.7.0,Get next and previous image
v0.7.0,Generate data about the image to return to client
v0.6.3,Category 1 Test
v0.6.3,Category 2 Test
v0.6.3,Category 3 Test
v0.6.3,TODO write tests for data
v0.6.3,"import Home from ""@/views/Home"";"
v0.6.3,"mode: ""history"","
v0.6.3,convert 3-digit hex to 6-digits.
v0.6.3,invert color components
v0.6.3,pad each with zeros and return
v0.6.3,"e: { test: true, data: ""info"" }"
v0.6.3,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.6.3,
v0.6.3,The MIT License (MIT)
v0.6.3,
v0.6.3,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.6.3,
v0.6.3,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.6.3,"of this software and associated documentation files (the ""Software""), to deal"
v0.6.3,"in the Software without restriction, including without limitation the rights"
v0.6.3,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.6.3,"copies of the Software, and to permit persons to whom the Software is"
v0.6.3,"furnished to do so, subject to the following conditions:"
v0.6.3,
v0.6.3,The above copyright notice and this permission notice shall be included in
v0.6.3,all copies or substantial portions of the Software.
v0.6.3,
v0.6.3,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.6.3,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.6.3,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.6.3,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.6.3,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.6.3,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.6.3,THE SOFTWARE.
v0.6.3,compare the color of the sample
v0.6.3,walk to left side starting with the left neighbor
v0.6.3,compare the color of the sample
v0.6.3,walk to right side starting with the right neighbor
v0.6.3,compare the color of the sample
v0.6.3,check minmax for X
v0.6.3,add two scanning lines in the opposite direction (y - dir) if necessary
v0.6.3,add the scanning line in the direction (y + dir) if necessary
v0.6.3,check minmax for Y if necessary
v0.6.3,calc gauss weights
v0.6.3,normalization weights
v0.6.3,walk through all source points for blur
v0.6.3,walk through x-neighbors
v0.6.3,walk through y-neighbors
v0.6.3,"copy visited points (only ""black"")"
v0.6.3,walk through inner values except points on the boundary of the image
v0.6.3,"check if any neighbor with a ""white"" color"
v0.6.3,if (visitedData[k + 1] + visitedData[k - 1] +
v0.6.3,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.6.3,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.6.3,walk through points on the boundary of the image if necessary
v0.6.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.3,walk through radius-neighbors of border points and add them to the result array
v0.6.3,walk through x-neighbors
v0.6.3,check the uniqueness
v0.6.3,walk through y-neighbors
v0.6.3,check the uniqueness
v0.6.3,calc gauss weights
v0.6.3,normalization weights
v0.6.3,walk through all border points for blur
v0.6.3,walk through x-neighbors
v0.6.3,check minmax
v0.6.3,walk through y-neighbors
v0.6.3,check minmax
v0.6.3,walk through inner values except points on the boundary of the image
v0.6.3,"check if any neighbor with a ""white"" color"
v0.6.3,if (data[k + 1] + data[k - 1] +
v0.6.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.3,walk through points on the boundary of the image if necessary
v0.6.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.3,walk through inner values except points on the boundary of the image
v0.6.3,"check if any neighbor with a ""white"" color"
v0.6.3,if (data[k + 1] + data[k - 1] +
v0.6.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.3,walk through points on the boundary of the image if necessary
v0.6.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.3,"walk through inner values and copy only ""black"" points to the result mask"
v0.6.3,"all [dx,dy] pairs (array index is the direction)"
v0.6.3,5 6 7
v0.6.3,4 X 0
v0.6.3,3 2 1
v0.6.3,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.6.3,need contour tracing
v0.6.3,bypass all the neighbors around the current point in a clockwise
v0.6.3,get the next point by new direction
v0.6.3,black boundary pixel
v0.6.3,walk through all contours
v0.6.3,contour isn't simplified
v0.6.3,no intermediate points
v0.6.3,calc the distance from current point to edge
v0.6.3,"if the max ""deviation"" is larger than allowed then..."
v0.6.3,"from flask import Blueprint, render_template"
v0.6.3,"client = Blueprint('client', __name__, static_folder='client')"
v0.6.3,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.6.3,@client.route('/')
v0.6.3,def index():
v0.6.3,return render_template('index.html')
v0.6.3,@client.route('/images/<int:dataset_id>')
v0.6.3,@client.route('/datasets/<int:dataset_id>')
v0.6.3,def index(dataset_id):
v0.6.3,return render_template('images.html')
v0.6.3,
v0.6.3,
v0.6.3,@client.route('/annotate/<int:image_id>')
v0.6.3,@client.route('/editor/<int:image_id>')
v0.6.3,def annotate(image_id):
v0.6.3,return render_template('annotator.html')
v0.6.3,
v0.6.3,
v0.6.3,@client.route('/datasets/')
v0.6.3,def datasets():
v0.6.3,return render_template('datasets.html')
v0.6.3,
v0.6.3,
v0.6.3,@client.route('/categories/')
v0.6.3,def categories():
v0.6.3,return render_template('categories.html')
v0.6.3,
v0.6.3,
v0.6.3,@client.route('/undo/')
v0.6.3,def undo():
v0.6.3,return render_template('undo.html')
v0.6.3,File Watcher
v0.6.3,Flask instance
v0.6.3,Dataset Options
v0.6.3,Coco Importer Options
v0.6.3,User Options
v0.6.3,Get dataset name from path
v0.6.3,"Type of task: Importer, Exporter, Scanner, etc."
v0.6.3,: Start date of the executor
v0.6.3,: End date of the executor
v0.6.3,If any of the information is relevant to the task
v0.6.3,it should be added
v0.6.3,Send socket update every 10%
v0.6.3,https://github.com/MongoEngine/mongoengine/issues/1171
v0.6.3,Use this methods until a solution is found
v0.6.3,map category names to ids; create as needed
v0.6.3,Remove all poeple who were annotating when
v0.6.3,the server shutdown
v0.6.3,invalid image ID
v0.6.3,Remove user from pervious room
v0.6.3,Remove user from room
v0.6.3,Check if thumbnails directory
v0.6.3,Compute segmentation
v0.6.3,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.6.3,Cruve
v0.6.3,Point
v0.6.3,Make sure shape is not all outside the image
v0.6.3,len 4 means this is a line with no width; it contributes
v0.6.3,"no area to the mask, and if we include it, coco will treat"
v0.6.3,it instead as a bbox (and throw an error)
v0.6.3,Convert into rle
v0.6.3,Create any missing categories
v0.6.3,Add any new categories to dataset
v0.6.3,"split images up into batches, import them in parallel"
v0.6.3,process all images before moving on to annotations
v0.6.3,"split annotations up into batches, import them in parallel"
v0.6.3,update the category ids for the images
v0.6.3,"split images up into batches, import them in parallel"
v0.6.3,process all images before moving on to annotations
v0.6.3,release resources
v0.6.3,Find all images
v0.6.3,"is_crowd = annotation.get('iscrowed', False)"
v0.6.3,Check if annotation already exists
v0.6.3,Create annotation
v0.6.3,annotation.iscrowd = is_crowd
v0.6.3,category id mapping  ( file : database )
v0.6.3,Create any missing categories
v0.6.3,map category ids
v0.6.3,update progress
v0.6.3,image id mapping ( file: database )
v0.6.3,Find all images
v0.6.3,update progress
v0.6.3,@api.route('/<int:annotation_id>/mask')
v0.6.3,class AnnotationMask(Resource):
v0.6.3,"def get(self, annotation_id):"
v0.6.3,""""""" Returns the binary mask of an annotation """""""
v0.6.3,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.6.3,"print(query, flush=True)"
v0.6.3,Check if dataset exists
v0.6.3,Make sure folder starts with is in proper format
v0.6.3,Get directory
v0.6.3,Create /api/ space
v0.6.3,Remove default namespace
v0.6.3,Setup API namespaces
v0.6.3,Check if current user can access dataset
v0.6.3,Iterate every category passed in the data
v0.6.3,Find corresponding category object in the database
v0.6.3,Iterate every annotation from the data annotations
v0.6.3,Find corresponding annotation object in database
v0.6.3,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.6.3,"the annotation twice, checking if the paperjs exists."
v0.6.3,Update annotation in database
v0.6.3,Update paperjs if it exists
v0.6.3,Generate coco formatted segmentation data
v0.6.3,Get next and previous image
v0.6.3,Generate data about the image to return to client
v0.6.2,Category 1 Test
v0.6.2,Category 2 Test
v0.6.2,Category 3 Test
v0.6.2,TODO write tests for data
v0.6.2,"import Home from ""@/views/Home"";"
v0.6.2,"mode: ""history"","
v0.6.2,convert 3-digit hex to 6-digits.
v0.6.2,invert color components
v0.6.2,pad each with zeros and return
v0.6.2,"e: { test: true, data: ""info"" }"
v0.6.2,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.6.2,
v0.6.2,The MIT License (MIT)
v0.6.2,
v0.6.2,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.6.2,
v0.6.2,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.6.2,"of this software and associated documentation files (the ""Software""), to deal"
v0.6.2,"in the Software without restriction, including without limitation the rights"
v0.6.2,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.6.2,"copies of the Software, and to permit persons to whom the Software is"
v0.6.2,"furnished to do so, subject to the following conditions:"
v0.6.2,
v0.6.2,The above copyright notice and this permission notice shall be included in
v0.6.2,all copies or substantial portions of the Software.
v0.6.2,
v0.6.2,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.6.2,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.6.2,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.6.2,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.6.2,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.6.2,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.6.2,THE SOFTWARE.
v0.6.2,compare the color of the sample
v0.6.2,walk to left side starting with the left neighbor
v0.6.2,compare the color of the sample
v0.6.2,walk to right side starting with the right neighbor
v0.6.2,compare the color of the sample
v0.6.2,check minmax for X
v0.6.2,add two scanning lines in the opposite direction (y - dir) if necessary
v0.6.2,add the scanning line in the direction (y + dir) if necessary
v0.6.2,check minmax for Y if necessary
v0.6.2,calc gauss weights
v0.6.2,normalization weights
v0.6.2,walk through all source points for blur
v0.6.2,walk through x-neighbors
v0.6.2,walk through y-neighbors
v0.6.2,"copy visited points (only ""black"")"
v0.6.2,walk through inner values except points on the boundary of the image
v0.6.2,"check if any neighbor with a ""white"" color"
v0.6.2,if (visitedData[k + 1] + visitedData[k - 1] +
v0.6.2,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.6.2,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.6.2,walk through points on the boundary of the image if necessary
v0.6.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.2,walk through radius-neighbors of border points and add them to the result array
v0.6.2,walk through x-neighbors
v0.6.2,check the uniqueness
v0.6.2,walk through y-neighbors
v0.6.2,check the uniqueness
v0.6.2,calc gauss weights
v0.6.2,normalization weights
v0.6.2,walk through all border points for blur
v0.6.2,walk through x-neighbors
v0.6.2,check minmax
v0.6.2,walk through y-neighbors
v0.6.2,check minmax
v0.6.2,walk through inner values except points on the boundary of the image
v0.6.2,"check if any neighbor with a ""white"" color"
v0.6.2,if (data[k + 1] + data[k - 1] +
v0.6.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.2,walk through points on the boundary of the image if necessary
v0.6.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.2,walk through inner values except points on the boundary of the image
v0.6.2,"check if any neighbor with a ""white"" color"
v0.6.2,if (data[k + 1] + data[k - 1] +
v0.6.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.2,walk through points on the boundary of the image if necessary
v0.6.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.2,"walk through inner values and copy only ""black"" points to the result mask"
v0.6.2,"all [dx,dy] pairs (array index is the direction)"
v0.6.2,5 6 7
v0.6.2,4 X 0
v0.6.2,3 2 1
v0.6.2,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.6.2,need contour tracing
v0.6.2,bypass all the neighbors around the current point in a clockwise
v0.6.2,get the next point by new direction
v0.6.2,black boundary pixel
v0.6.2,walk through all contours
v0.6.2,contour isn't simplified
v0.6.2,no intermediate points
v0.6.2,calc the distance from current point to edge
v0.6.2,"if the max ""deviation"" is larger than allowed then..."
v0.6.2,"from flask import Blueprint, render_template"
v0.6.2,"client = Blueprint('client', __name__, static_folder='client')"
v0.6.2,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.6.2,@client.route('/')
v0.6.2,def index():
v0.6.2,return render_template('index.html')
v0.6.2,@client.route('/images/<int:dataset_id>')
v0.6.2,@client.route('/datasets/<int:dataset_id>')
v0.6.2,def index(dataset_id):
v0.6.2,return render_template('images.html')
v0.6.2,
v0.6.2,
v0.6.2,@client.route('/annotate/<int:image_id>')
v0.6.2,@client.route('/editor/<int:image_id>')
v0.6.2,def annotate(image_id):
v0.6.2,return render_template('annotator.html')
v0.6.2,
v0.6.2,
v0.6.2,@client.route('/datasets/')
v0.6.2,def datasets():
v0.6.2,return render_template('datasets.html')
v0.6.2,
v0.6.2,
v0.6.2,@client.route('/categories/')
v0.6.2,def categories():
v0.6.2,return render_template('categories.html')
v0.6.2,
v0.6.2,
v0.6.2,@client.route('/undo/')
v0.6.2,def undo():
v0.6.2,return render_template('undo.html')
v0.6.2,File Watcher
v0.6.2,Flask instance
v0.6.2,Dataset Options
v0.6.2,Coco Importer Options
v0.6.2,User Options
v0.6.2,Get dataset name from path
v0.6.2,"Type of task: Importer, Exporter, Scanner, etc."
v0.6.2,: Start date of the executor
v0.6.2,: End date of the executor
v0.6.2,If any of the information is relevant to the task
v0.6.2,it should be added
v0.6.2,Send socket update every 10%
v0.6.2,https://github.com/MongoEngine/mongoengine/issues/1171
v0.6.2,Use this methods until a solution is found
v0.6.2,map category names to ids; create as needed
v0.6.2,Remove all poeple who were annotating when
v0.6.2,the server shutdown
v0.6.2,invalid image ID
v0.6.2,Remove user from pervious room
v0.6.2,Remove user from room
v0.6.2,Check if thumbnails directory
v0.6.2,Compute segmentation
v0.6.2,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.6.2,Cruve
v0.6.2,Point
v0.6.2,Make sure shape is not all outside the image
v0.6.2,len 4 means this is a line with no width; it contributes
v0.6.2,"no area to the mask, and if we include it, coco will treat"
v0.6.2,it instead as a bbox (and throw an error)
v0.6.2,Convert into rle
v0.6.2,Create any missing categories
v0.6.2,Add any new categories to dataset
v0.6.2,"split images up into batches, import them in parallel"
v0.6.2,process all images before moving on to annotations
v0.6.2,"split annotations up into batches, import them in parallel"
v0.6.2,update the category ids for the images
v0.6.2,"split images up into batches, import them in parallel"
v0.6.2,process all images before moving on to annotations
v0.6.2,release resources
v0.6.2,Find all images
v0.6.2,"is_crowd = annotation.get('iscrowed', False)"
v0.6.2,Check if annotation already exists
v0.6.2,Create annotation
v0.6.2,annotation.iscrowd = is_crowd
v0.6.2,category id mapping  ( file : database )
v0.6.2,Create any missing categories
v0.6.2,map category ids
v0.6.2,update progress
v0.6.2,image id mapping ( file: database )
v0.6.2,Find all images
v0.6.2,update progress
v0.6.2,@api.route('/<int:annotation_id>/mask')
v0.6.2,class AnnotationMask(Resource):
v0.6.2,"def get(self, annotation_id):"
v0.6.2,""""""" Returns the binary mask of an annotation """""""
v0.6.2,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.6.2,"print(query, flush=True)"
v0.6.2,Check if dataset exists
v0.6.2,Make sure folder starts with is in proper format
v0.6.2,Get directory
v0.6.2,Create /api/ space
v0.6.2,Remove default namespace
v0.6.2,Setup API namespaces
v0.6.2,Check if current user can access dataset
v0.6.2,Iterate every category passed in the data
v0.6.2,Find corresponding category object in the database
v0.6.2,Iterate every annotation from the data annotations
v0.6.2,Find corresponding annotation object in database
v0.6.2,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.6.2,"the annotation twice, checking if the paperjs exists."
v0.6.2,Update annotation in database
v0.6.2,Update paperjs if it exists
v0.6.2,Generate coco formatted segmentation data
v0.6.2,Get next and previous image
v0.6.2,Generate data about the image to return to client
v0.6.1,Category 1 Test
v0.6.1,Category 2 Test
v0.6.1,Category 3 Test
v0.6.1,TODO write tests for data
v0.6.1,"import Home from ""@/views/Home"";"
v0.6.1,"mode: ""history"","
v0.6.1,convert 3-digit hex to 6-digits.
v0.6.1,invert color components
v0.6.1,pad each with zeros and return
v0.6.1,"e: { test: true, data: ""info"" }"
v0.6.1,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.6.1,
v0.6.1,The MIT License (MIT)
v0.6.1,
v0.6.1,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.6.1,
v0.6.1,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.6.1,"of this software and associated documentation files (the ""Software""), to deal"
v0.6.1,"in the Software without restriction, including without limitation the rights"
v0.6.1,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.6.1,"copies of the Software, and to permit persons to whom the Software is"
v0.6.1,"furnished to do so, subject to the following conditions:"
v0.6.1,
v0.6.1,The above copyright notice and this permission notice shall be included in
v0.6.1,all copies or substantial portions of the Software.
v0.6.1,
v0.6.1,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.6.1,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.6.1,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.6.1,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.6.1,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.6.1,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.6.1,THE SOFTWARE.
v0.6.1,compare the color of the sample
v0.6.1,walk to left side starting with the left neighbor
v0.6.1,compare the color of the sample
v0.6.1,walk to right side starting with the right neighbor
v0.6.1,compare the color of the sample
v0.6.1,check minmax for X
v0.6.1,add two scanning lines in the opposite direction (y - dir) if necessary
v0.6.1,add the scanning line in the direction (y + dir) if necessary
v0.6.1,check minmax for Y if necessary
v0.6.1,calc gauss weights
v0.6.1,normalization weights
v0.6.1,walk through all source points for blur
v0.6.1,walk through x-neighbors
v0.6.1,walk through y-neighbors
v0.6.1,"copy visited points (only ""black"")"
v0.6.1,walk through inner values except points on the boundary of the image
v0.6.1,"check if any neighbor with a ""white"" color"
v0.6.1,if (visitedData[k + 1] + visitedData[k - 1] +
v0.6.1,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.6.1,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.6.1,walk through points on the boundary of the image if necessary
v0.6.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.1,walk through radius-neighbors of border points and add them to the result array
v0.6.1,walk through x-neighbors
v0.6.1,check the uniqueness
v0.6.1,walk through y-neighbors
v0.6.1,check the uniqueness
v0.6.1,calc gauss weights
v0.6.1,normalization weights
v0.6.1,walk through all border points for blur
v0.6.1,walk through x-neighbors
v0.6.1,check minmax
v0.6.1,walk through y-neighbors
v0.6.1,check minmax
v0.6.1,walk through inner values except points on the boundary of the image
v0.6.1,"check if any neighbor with a ""white"" color"
v0.6.1,if (data[k + 1] + data[k - 1] +
v0.6.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.1,walk through points on the boundary of the image if necessary
v0.6.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.1,walk through inner values except points on the boundary of the image
v0.6.1,"check if any neighbor with a ""white"" color"
v0.6.1,if (data[k + 1] + data[k - 1] +
v0.6.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.1,walk through points on the boundary of the image if necessary
v0.6.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.1,"walk through inner values and copy only ""black"" points to the result mask"
v0.6.1,"all [dx,dy] pairs (array index is the direction)"
v0.6.1,5 6 7
v0.6.1,4 X 0
v0.6.1,3 2 1
v0.6.1,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.6.1,need contour tracing
v0.6.1,bypass all the neighbors around the current point in a clockwise
v0.6.1,get the next point by new direction
v0.6.1,black boundary pixel
v0.6.1,walk through all contours
v0.6.1,contour isn't simplified
v0.6.1,no intermediate points
v0.6.1,calc the distance from current point to edge
v0.6.1,"if the max ""deviation"" is larger than allowed then..."
v0.6.1,"from flask import Blueprint, render_template"
v0.6.1,"client = Blueprint('client', __name__, static_folder='client')"
v0.6.1,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.6.1,@client.route('/')
v0.6.1,def index():
v0.6.1,return render_template('index.html')
v0.6.1,@client.route('/images/<int:dataset_id>')
v0.6.1,@client.route('/datasets/<int:dataset_id>')
v0.6.1,def index(dataset_id):
v0.6.1,return render_template('images.html')
v0.6.1,
v0.6.1,
v0.6.1,@client.route('/annotate/<int:image_id>')
v0.6.1,@client.route('/editor/<int:image_id>')
v0.6.1,def annotate(image_id):
v0.6.1,return render_template('annotator.html')
v0.6.1,
v0.6.1,
v0.6.1,@client.route('/datasets/')
v0.6.1,def datasets():
v0.6.1,return render_template('datasets.html')
v0.6.1,
v0.6.1,
v0.6.1,@client.route('/categories/')
v0.6.1,def categories():
v0.6.1,return render_template('categories.html')
v0.6.1,
v0.6.1,
v0.6.1,@client.route('/undo/')
v0.6.1,def undo():
v0.6.1,return render_template('undo.html')
v0.6.1,File Watcher
v0.6.1,Flask instance
v0.6.1,Dataset Options
v0.6.1,Coco Importer Options
v0.6.1,User Options
v0.6.1,Get dataset name from path
v0.6.1,"Type of task: Importer, Exporter, Scanner, etc."
v0.6.1,: Start date of the executor
v0.6.1,: End date of the executor
v0.6.1,If any of the information is relevant to the task
v0.6.1,it should be added
v0.6.1,Send socket update every 10%
v0.6.1,https://github.com/MongoEngine/mongoengine/issues/1171
v0.6.1,Use this methods until a solution is found
v0.6.1,map category names to ids; create as needed
v0.6.1,Remove all poeple who were annotating when
v0.6.1,the server shutdown
v0.6.1,invalid image ID
v0.6.1,Remove user from pervious room
v0.6.1,Remove user from room
v0.6.1,Check if thumbnails directory
v0.6.1,Compute segmentation
v0.6.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.6.1,Cruve
v0.6.1,Point
v0.6.1,Make sure shape is not all outside the image
v0.6.1,len 4 means this is a line with no width; it contributes
v0.6.1,"no area to the mask, and if we include it, coco will treat"
v0.6.1,it instead as a bbox (and throw an error)
v0.6.1,Convert into rle
v0.6.1,Create any missing categories
v0.6.1,Add any new categories to dataset
v0.6.1,"split images up into batches, import them in parallel"
v0.6.1,process all images before moving on to annotations
v0.6.1,"split annotations up into batches, import them in parallel"
v0.6.1,update the category ids for the images
v0.6.1,"split images up into batches, import them in parallel"
v0.6.1,process all images before moving on to annotations
v0.6.1,release resources
v0.6.1,Find all images
v0.6.1,"is_crowd = annotation.get('iscrowed', False)"
v0.6.1,Check if annotation already exists
v0.6.1,Create annotation
v0.6.1,annotation.iscrowd = is_crowd
v0.6.1,category id mapping  ( file : database )
v0.6.1,Create any missing categories
v0.6.1,map category ids
v0.6.1,update progress
v0.6.1,image id mapping ( file: database )
v0.6.1,Find all images
v0.6.1,update progress
v0.6.1,@api.route('/<int:annotation_id>/mask')
v0.6.1,class AnnotationMask(Resource):
v0.6.1,"def get(self, annotation_id):"
v0.6.1,""""""" Returns the binary mask of an annotation """""""
v0.6.1,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.6.1,"print(query, flush=True)"
v0.6.1,Check if dataset exists
v0.6.1,Make sure folder starts with is in proper format
v0.6.1,Get directory
v0.6.1,Create /api/ space
v0.6.1,Remove default namespace
v0.6.1,Setup API namespaces
v0.6.1,Check if current user can access dataset
v0.6.1,Iterate every category passed in the data
v0.6.1,Find corresponding category object in the database
v0.6.1,Iterate every annotation from the data annotations
v0.6.1,Find corresponding annotation object in database
v0.6.1,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.6.1,"the annotation twice, checking if the paperjs exists."
v0.6.1,Update annotation in database
v0.6.1,Update paperjs if it exists
v0.6.1,Generate coco formatted segmentation data
v0.6.1,Get next and previous image
v0.6.1,Generate data about the image to return to client
v0.6.0,Category 1 Test
v0.6.0,Category 2 Test
v0.6.0,Category 3 Test
v0.6.0,TODO write tests for data
v0.6.0,"import Home from ""@/views/Home"";"
v0.6.0,"mode: ""history"","
v0.6.0,convert 3-digit hex to 6-digits.
v0.6.0,invert color components
v0.6.0,pad each with zeros and return
v0.6.0,"e: { test: true, data: ""info"" }"
v0.6.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.6.0,
v0.6.0,The MIT License (MIT)
v0.6.0,
v0.6.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.6.0,
v0.6.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.6.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.6.0,"in the Software without restriction, including without limitation the rights"
v0.6.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.6.0,"copies of the Software, and to permit persons to whom the Software is"
v0.6.0,"furnished to do so, subject to the following conditions:"
v0.6.0,
v0.6.0,The above copyright notice and this permission notice shall be included in
v0.6.0,all copies or substantial portions of the Software.
v0.6.0,
v0.6.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.6.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.6.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.6.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.6.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.6.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.6.0,THE SOFTWARE.
v0.6.0,compare the color of the sample
v0.6.0,walk to left side starting with the left neighbor
v0.6.0,compare the color of the sample
v0.6.0,walk to right side starting with the right neighbor
v0.6.0,compare the color of the sample
v0.6.0,check minmax for X
v0.6.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.6.0,add the scanning line in the direction (y + dir) if necessary
v0.6.0,check minmax for Y if necessary
v0.6.0,calc gauss weights
v0.6.0,normalization weights
v0.6.0,walk through all source points for blur
v0.6.0,walk through x-neighbors
v0.6.0,walk through y-neighbors
v0.6.0,"copy visited points (only ""black"")"
v0.6.0,walk through inner values except points on the boundary of the image
v0.6.0,"check if any neighbor with a ""white"" color"
v0.6.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.6.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.6.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.6.0,walk through points on the boundary of the image if necessary
v0.6.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.0,walk through radius-neighbors of border points and add them to the result array
v0.6.0,walk through x-neighbors
v0.6.0,check the uniqueness
v0.6.0,walk through y-neighbors
v0.6.0,check the uniqueness
v0.6.0,calc gauss weights
v0.6.0,normalization weights
v0.6.0,walk through all border points for blur
v0.6.0,walk through x-neighbors
v0.6.0,check minmax
v0.6.0,walk through y-neighbors
v0.6.0,check minmax
v0.6.0,walk through inner values except points on the boundary of the image
v0.6.0,"check if any neighbor with a ""white"" color"
v0.6.0,if (data[k + 1] + data[k - 1] +
v0.6.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.0,walk through points on the boundary of the image if necessary
v0.6.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.0,walk through inner values except points on the boundary of the image
v0.6.0,"check if any neighbor with a ""white"" color"
v0.6.0,if (data[k + 1] + data[k - 1] +
v0.6.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.6.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.6.0,walk through points on the boundary of the image if necessary
v0.6.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.6.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.6.0,"all [dx,dy] pairs (array index is the direction)"
v0.6.0,5 6 7
v0.6.0,4 X 0
v0.6.0,3 2 1
v0.6.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.6.0,need contour tracing
v0.6.0,bypass all the neighbors around the current point in a clockwise
v0.6.0,get the next point by new direction
v0.6.0,black boundary pixel
v0.6.0,walk through all contours
v0.6.0,contour isn't simplified
v0.6.0,no intermediate points
v0.6.0,calc the distance from current point to edge
v0.6.0,"if the max ""deviation"" is larger than allowed then..."
v0.6.0,"from flask import Blueprint, render_template"
v0.6.0,"client = Blueprint('client', __name__, static_folder='client')"
v0.6.0,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.6.0,@client.route('/')
v0.6.0,def index():
v0.6.0,return render_template('index.html')
v0.6.0,@client.route('/images/<int:dataset_id>')
v0.6.0,@client.route('/datasets/<int:dataset_id>')
v0.6.0,def index(dataset_id):
v0.6.0,return render_template('images.html')
v0.6.0,
v0.6.0,
v0.6.0,@client.route('/annotate/<int:image_id>')
v0.6.0,@client.route('/editor/<int:image_id>')
v0.6.0,def annotate(image_id):
v0.6.0,return render_template('annotator.html')
v0.6.0,
v0.6.0,
v0.6.0,@client.route('/datasets/')
v0.6.0,def datasets():
v0.6.0,return render_template('datasets.html')
v0.6.0,
v0.6.0,
v0.6.0,@client.route('/categories/')
v0.6.0,def categories():
v0.6.0,return render_template('categories.html')
v0.6.0,
v0.6.0,
v0.6.0,@client.route('/undo/')
v0.6.0,def undo():
v0.6.0,return render_template('undo.html')
v0.6.0,File Watcher
v0.6.0,Flask instance
v0.6.0,Dataset Options
v0.6.0,Coco Importer Options
v0.6.0,User Options
v0.6.0,Get dataset name from path
v0.6.0,"Type of task: Importer, Exporter, Scanner, etc."
v0.6.0,: Start date of the executor
v0.6.0,: End date of the executor
v0.6.0,If any of the information is relevant to the task
v0.6.0,it should be added
v0.6.0,Send socket update every 10%
v0.6.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.6.0,Use this methods until a solution is found
v0.6.0,map category names to ids; create as needed
v0.6.0,Remove all poeple who were annotating when
v0.6.0,the server shutdown
v0.6.0,invalid image ID
v0.6.0,Remove user from pervious room
v0.6.0,Remove user from room
v0.6.0,Check if thumbnails directory
v0.6.0,Compute segmentation
v0.6.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.6.0,Cruve
v0.6.0,Point
v0.6.0,Make sure shape is not all outside the image
v0.6.0,len 4 means this is a line with no width; it contributes
v0.6.0,"no area to the mask, and if we include it, coco will treat"
v0.6.0,it instead as a bbox (and throw an error)
v0.6.0,Convert into rle
v0.6.0,Create any missing categories
v0.6.0,Add any new categories to dataset
v0.6.0,"split images up into batches, import them in parallel"
v0.6.0,process all images before moving on to annotations
v0.6.0,"split annotations up into batches, import them in parallel"
v0.6.0,update the category ids for the images
v0.6.0,"split images up into batches, import them in parallel"
v0.6.0,process all images before moving on to annotations
v0.6.0,release resources
v0.6.0,Find all images
v0.6.0,"is_crowd = annotation.get('iscrowed', False)"
v0.6.0,Check if annotation already exists
v0.6.0,Create annotation
v0.6.0,annotation.iscrowd = is_crowd
v0.6.0,category id mapping  ( file : database )
v0.6.0,Create any missing categories
v0.6.0,map category ids
v0.6.0,update progress
v0.6.0,image id mapping ( file: database )
v0.6.0,Find all images
v0.6.0,update progress
v0.6.0,@api.route('/<int:annotation_id>/mask')
v0.6.0,class AnnotationMask(Resource):
v0.6.0,"def get(self, annotation_id):"
v0.6.0,""""""" Returns the binary mask of an annotation """""""
v0.6.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.6.0,Check if dataset exists
v0.6.0,Make sure folder starts with is in proper format
v0.6.0,Get directory
v0.6.0,Create /api/ space
v0.6.0,Remove default namespace
v0.6.0,Setup API namespaces
v0.6.0,Check if current user can access dataset
v0.6.0,Iterate every category passed in the data
v0.6.0,Find corresponding category object in the database
v0.6.0,Iterate every annotation from the data annotations
v0.6.0,Find corresponding annotation object in database
v0.6.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.6.0,"the annotation twice, checking if the paperjs exists."
v0.6.0,Update annotation in database
v0.6.0,Update paperjs if it exists
v0.6.0,Generate coco formatted segmentation data
v0.6.0,Get next and previous image
v0.6.0,Generate data about the image to return to client
v0.5.8,Category 1 Test
v0.5.8,Category 2 Test
v0.5.8,Category 3 Test
v0.5.8,TODO write tests for data
v0.5.8,"import Home from ""@/views/Home"";"
v0.5.8,"mode: ""history"","
v0.5.8,convert 3-digit hex to 6-digits.
v0.5.8,invert color components
v0.5.8,pad each with zeros and return
v0.5.8,"e: { test: true, data: ""info"" }"
v0.5.8,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.8,
v0.5.8,The MIT License (MIT)
v0.5.8,
v0.5.8,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.8,
v0.5.8,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.8,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.8,"in the Software without restriction, including without limitation the rights"
v0.5.8,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.8,"copies of the Software, and to permit persons to whom the Software is"
v0.5.8,"furnished to do so, subject to the following conditions:"
v0.5.8,
v0.5.8,The above copyright notice and this permission notice shall be included in
v0.5.8,all copies or substantial portions of the Software.
v0.5.8,
v0.5.8,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.8,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.8,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.8,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.8,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.8,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.8,THE SOFTWARE.
v0.5.8,compare the color of the sample
v0.5.8,walk to left side starting with the left neighbor
v0.5.8,compare the color of the sample
v0.5.8,walk to right side starting with the right neighbor
v0.5.8,compare the color of the sample
v0.5.8,check minmax for X
v0.5.8,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.8,add the scanning line in the direction (y + dir) if necessary
v0.5.8,check minmax for Y if necessary
v0.5.8,calc gauss weights
v0.5.8,normalization weights
v0.5.8,walk through all source points for blur
v0.5.8,walk through x-neighbors
v0.5.8,walk through y-neighbors
v0.5.8,"copy visited points (only ""black"")"
v0.5.8,walk through inner values except points on the boundary of the image
v0.5.8,"check if any neighbor with a ""white"" color"
v0.5.8,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.8,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.8,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.8,walk through points on the boundary of the image if necessary
v0.5.8,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.8,walk through radius-neighbors of border points and add them to the result array
v0.5.8,walk through x-neighbors
v0.5.8,check the uniqueness
v0.5.8,walk through y-neighbors
v0.5.8,check the uniqueness
v0.5.8,calc gauss weights
v0.5.8,normalization weights
v0.5.8,walk through all border points for blur
v0.5.8,walk through x-neighbors
v0.5.8,check minmax
v0.5.8,walk through y-neighbors
v0.5.8,check minmax
v0.5.8,walk through inner values except points on the boundary of the image
v0.5.8,"check if any neighbor with a ""white"" color"
v0.5.8,if (data[k + 1] + data[k - 1] +
v0.5.8,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.8,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.8,walk through points on the boundary of the image if necessary
v0.5.8,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.8,walk through inner values except points on the boundary of the image
v0.5.8,"check if any neighbor with a ""white"" color"
v0.5.8,if (data[k + 1] + data[k - 1] +
v0.5.8,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.8,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.8,walk through points on the boundary of the image if necessary
v0.5.8,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.8,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.8,"all [dx,dy] pairs (array index is the direction)"
v0.5.8,5 6 7
v0.5.8,4 X 0
v0.5.8,3 2 1
v0.5.8,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.8,need contour tracing
v0.5.8,bypass all the neighbors around the current point in a clockwise
v0.5.8,get the next point by new direction
v0.5.8,black boundary pixel
v0.5.8,walk through all contours
v0.5.8,contour isn't simplified
v0.5.8,no intermediate points
v0.5.8,calc the distance from current point to edge
v0.5.8,"if the max ""deviation"" is larger than allowed then..."
v0.5.8,"from flask import Blueprint, render_template"
v0.5.8,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.8,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.8,@client.route('/')
v0.5.8,def index():
v0.5.8,return render_template('index.html')
v0.5.8,@client.route('/images/<int:dataset_id>')
v0.5.8,@client.route('/datasets/<int:dataset_id>')
v0.5.8,def index(dataset_id):
v0.5.8,return render_template('images.html')
v0.5.8,
v0.5.8,
v0.5.8,@client.route('/annotate/<int:image_id>')
v0.5.8,@client.route('/editor/<int:image_id>')
v0.5.8,def annotate(image_id):
v0.5.8,return render_template('annotator.html')
v0.5.8,
v0.5.8,
v0.5.8,@client.route('/datasets/')
v0.5.8,def datasets():
v0.5.8,return render_template('datasets.html')
v0.5.8,
v0.5.8,
v0.5.8,@client.route('/categories/')
v0.5.8,def categories():
v0.5.8,return render_template('categories.html')
v0.5.8,
v0.5.8,
v0.5.8,@client.route('/undo/')
v0.5.8,def undo():
v0.5.8,return render_template('undo.html')
v0.5.8,Flask instance
v0.5.8,Dataset Options
v0.5.8,User Options
v0.5.8,Check if thumbnails directory
v0.5.8,Get dataset name from path
v0.5.8,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.8,Use this methods until a solution is found
v0.5.8,map category names to ids; create as needed
v0.5.8,Compute segmentation
v0.5.8,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.8,Cruve
v0.5.8,Point
v0.5.8,Make sure shape is not all outside the image
v0.5.8,len 4 means this is a line with no width; it contributes
v0.5.8,"no area to the mask, and if we include it, coco will treat"
v0.5.8,it instead as a bbox (and throw an error)
v0.5.8,Convert into rle
v0.5.8,@api.route('/<int:annotation_id>/mask')
v0.5.8,class AnnotationMask(Resource):
v0.5.8,"def get(self, annotation_id):"
v0.5.8,""""""" Returns the binary mask of an annotation """""""
v0.5.8,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.8,Check if dataset exists
v0.5.8,Make sure folder starts with is in proper format
v0.5.8,Get directory
v0.5.8,Create any missing categories
v0.5.8,Add any new categories to dataset
v0.5.8,Find all images
v0.5.8,Generate annotations
v0.5.8,Check if annotation already exists
v0.5.8,Create annotation
v0.5.8,annotation.iscrowd = is_crowd
v0.5.8,Create /api/ space
v0.5.8,Remove default namespace
v0.5.8,Setup API namespaces
v0.5.8,Check if current user can access dataset
v0.5.8,Iterate every category passed in the data
v0.5.8,Find corresponding category object in the database
v0.5.8,Iterate every annotation from the data annotations
v0.5.8,Find corresponding annotation object in database
v0.5.8,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.8,"the annotation twice, checking if the paperjs exists."
v0.5.8,Update annotation in database
v0.5.8,Update paperjs if it exists
v0.5.8,Generate coco formatted segmentation data
v0.5.8,Get next and previous image
v0.5.8,Generate data about the image to return to client
v0.5.7,Category 1 Test
v0.5.7,Category 2 Test
v0.5.7,Category 3 Test
v0.5.7,TODO write tests for data
v0.5.7,"import Home from ""@/views/Home"";"
v0.5.7,"mode: ""history"","
v0.5.7,convert 3-digit hex to 6-digits.
v0.5.7,invert color components
v0.5.7,pad each with zeros and return
v0.5.7,"e: { test: true, data: ""info"" }"
v0.5.7,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.7,
v0.5.7,The MIT License (MIT)
v0.5.7,
v0.5.7,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.7,
v0.5.7,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.7,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.7,"in the Software without restriction, including without limitation the rights"
v0.5.7,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.7,"copies of the Software, and to permit persons to whom the Software is"
v0.5.7,"furnished to do so, subject to the following conditions:"
v0.5.7,
v0.5.7,The above copyright notice and this permission notice shall be included in
v0.5.7,all copies or substantial portions of the Software.
v0.5.7,
v0.5.7,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.7,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.7,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.7,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.7,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.7,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.7,THE SOFTWARE.
v0.5.7,compare the color of the sample
v0.5.7,walk to left side starting with the left neighbor
v0.5.7,compare the color of the sample
v0.5.7,walk to right side starting with the right neighbor
v0.5.7,compare the color of the sample
v0.5.7,check minmax for X
v0.5.7,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.7,add the scanning line in the direction (y + dir) if necessary
v0.5.7,check minmax for Y if necessary
v0.5.7,calc gauss weights
v0.5.7,normalization weights
v0.5.7,walk through all source points for blur
v0.5.7,walk through x-neighbors
v0.5.7,walk through y-neighbors
v0.5.7,"copy visited points (only ""black"")"
v0.5.7,walk through inner values except points on the boundary of the image
v0.5.7,"check if any neighbor with a ""white"" color"
v0.5.7,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.7,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.7,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.7,walk through points on the boundary of the image if necessary
v0.5.7,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.7,walk through radius-neighbors of border points and add them to the result array
v0.5.7,walk through x-neighbors
v0.5.7,check the uniqueness
v0.5.7,walk through y-neighbors
v0.5.7,check the uniqueness
v0.5.7,calc gauss weights
v0.5.7,normalization weights
v0.5.7,walk through all border points for blur
v0.5.7,walk through x-neighbors
v0.5.7,check minmax
v0.5.7,walk through y-neighbors
v0.5.7,check minmax
v0.5.7,walk through inner values except points on the boundary of the image
v0.5.7,"check if any neighbor with a ""white"" color"
v0.5.7,if (data[k + 1] + data[k - 1] +
v0.5.7,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.7,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.7,walk through points on the boundary of the image if necessary
v0.5.7,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.7,walk through inner values except points on the boundary of the image
v0.5.7,"check if any neighbor with a ""white"" color"
v0.5.7,if (data[k + 1] + data[k - 1] +
v0.5.7,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.7,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.7,walk through points on the boundary of the image if necessary
v0.5.7,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.7,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.7,"all [dx,dy] pairs (array index is the direction)"
v0.5.7,5 6 7
v0.5.7,4 X 0
v0.5.7,3 2 1
v0.5.7,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.7,need contour tracing
v0.5.7,bypass all the neighbors around the current point in a clockwise
v0.5.7,get the next point by new direction
v0.5.7,black boundary pixel
v0.5.7,walk through all contours
v0.5.7,contour isn't simplified
v0.5.7,no intermediate points
v0.5.7,calc the distance from current point to edge
v0.5.7,"if the max ""deviation"" is larger than allowed then..."
v0.5.7,"from flask import Blueprint, render_template"
v0.5.7,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.7,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.7,@client.route('/')
v0.5.7,def index():
v0.5.7,return render_template('index.html')
v0.5.7,@client.route('/images/<int:dataset_id>')
v0.5.7,@client.route('/datasets/<int:dataset_id>')
v0.5.7,def index(dataset_id):
v0.5.7,return render_template('images.html')
v0.5.7,
v0.5.7,
v0.5.7,@client.route('/annotate/<int:image_id>')
v0.5.7,@client.route('/editor/<int:image_id>')
v0.5.7,def annotate(image_id):
v0.5.7,return render_template('annotator.html')
v0.5.7,
v0.5.7,
v0.5.7,@client.route('/datasets/')
v0.5.7,def datasets():
v0.5.7,return render_template('datasets.html')
v0.5.7,
v0.5.7,
v0.5.7,@client.route('/categories/')
v0.5.7,def categories():
v0.5.7,return render_template('categories.html')
v0.5.7,
v0.5.7,
v0.5.7,@client.route('/undo/')
v0.5.7,def undo():
v0.5.7,return render_template('undo.html')
v0.5.7,Flask instance
v0.5.7,Dataset Options
v0.5.7,User Options
v0.5.7,Check if thumbnails directory
v0.5.7,Get dataset name from path
v0.5.7,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.7,Use this methods until a solution is found
v0.5.7,map category names to ids; create as needed
v0.5.7,Compute segmentation
v0.5.7,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.7,Make sure shape is not all outside the image
v0.5.7,Convert into rle
v0.5.7,@api.route('/<int:annotation_id>/mask')
v0.5.7,class AnnotationMask(Resource):
v0.5.7,"def get(self, annotation_id):"
v0.5.7,""""""" Returns the binary mask of an annotation """""""
v0.5.7,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.7,Check if dataset exists
v0.5.7,Make sure folder starts with is in proper format
v0.5.7,Get directory
v0.5.7,Create any missing categories
v0.5.7,Add any new categories to dataset
v0.5.7,Find all images
v0.5.7,Generate annotations
v0.5.7,Check if annotation already exists
v0.5.7,Create annotation
v0.5.7,annotation.iscrowd = is_crowd
v0.5.7,Create /api/ space
v0.5.7,Remove default namespace
v0.5.7,Setup API namespaces
v0.5.7,Check if current user can access dataset
v0.5.7,Iterate every category passed in the data
v0.5.7,Find corresponding category object in the database
v0.5.7,Iterate every annotation from the data annotations
v0.5.7,Find corresponding annotation object in database
v0.5.7,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.7,"the annotation twice, checking if the paperjs exists."
v0.5.7,Update annotation in database
v0.5.7,Update paperjs if it exists
v0.5.7,Generate coco formatted segmentation data
v0.5.7,Get next and previous image
v0.5.7,Generate data about the image to return to client
v0.5.6,Category 1 Test
v0.5.6,Category 2 Test
v0.5.6,Category 3 Test
v0.5.6,TODO write tests for data
v0.5.6,"import Home from ""@/views/Home"";"
v0.5.6,"mode: ""history"","
v0.5.6,convert 3-digit hex to 6-digits.
v0.5.6,invert color components
v0.5.6,pad each with zeros and return
v0.5.6,"e: { test: true, data: ""info"" }"
v0.5.6,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.6,
v0.5.6,The MIT License (MIT)
v0.5.6,
v0.5.6,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.6,
v0.5.6,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.6,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.6,"in the Software without restriction, including without limitation the rights"
v0.5.6,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.6,"copies of the Software, and to permit persons to whom the Software is"
v0.5.6,"furnished to do so, subject to the following conditions:"
v0.5.6,
v0.5.6,The above copyright notice and this permission notice shall be included in
v0.5.6,all copies or substantial portions of the Software.
v0.5.6,
v0.5.6,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.6,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.6,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.6,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.6,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.6,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.6,THE SOFTWARE.
v0.5.6,compare the color of the sample
v0.5.6,walk to left side starting with the left neighbor
v0.5.6,compare the color of the sample
v0.5.6,walk to right side starting with the right neighbor
v0.5.6,compare the color of the sample
v0.5.6,check minmax for X
v0.5.6,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.6,add the scanning line in the direction (y + dir) if necessary
v0.5.6,check minmax for Y if necessary
v0.5.6,calc gauss weights
v0.5.6,normalization weights
v0.5.6,walk through all source points for blur
v0.5.6,walk through x-neighbors
v0.5.6,walk through y-neighbors
v0.5.6,"copy visited points (only ""black"")"
v0.5.6,walk through inner values except points on the boundary of the image
v0.5.6,"check if any neighbor with a ""white"" color"
v0.5.6,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.6,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.6,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.6,walk through points on the boundary of the image if necessary
v0.5.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.6,walk through radius-neighbors of border points and add them to the result array
v0.5.6,walk through x-neighbors
v0.5.6,check the uniqueness
v0.5.6,walk through y-neighbors
v0.5.6,check the uniqueness
v0.5.6,calc gauss weights
v0.5.6,normalization weights
v0.5.6,walk through all border points for blur
v0.5.6,walk through x-neighbors
v0.5.6,check minmax
v0.5.6,walk through y-neighbors
v0.5.6,check minmax
v0.5.6,walk through inner values except points on the boundary of the image
v0.5.6,"check if any neighbor with a ""white"" color"
v0.5.6,if (data[k + 1] + data[k - 1] +
v0.5.6,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.6,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.6,walk through points on the boundary of the image if necessary
v0.5.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.6,walk through inner values except points on the boundary of the image
v0.5.6,"check if any neighbor with a ""white"" color"
v0.5.6,if (data[k + 1] + data[k - 1] +
v0.5.6,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.6,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.6,walk through points on the boundary of the image if necessary
v0.5.6,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.6,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.6,"all [dx,dy] pairs (array index is the direction)"
v0.5.6,5 6 7
v0.5.6,4 X 0
v0.5.6,3 2 1
v0.5.6,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.6,need contour tracing
v0.5.6,bypass all the neighbors around the current point in a clockwise
v0.5.6,get the next point by new direction
v0.5.6,black boundary pixel
v0.5.6,walk through all contours
v0.5.6,contour isn't simplified
v0.5.6,no intermediate points
v0.5.6,calc the distance from current point to edge
v0.5.6,"if the max ""deviation"" is larger than allowed then..."
v0.5.6,"from flask import Blueprint, render_template"
v0.5.6,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.6,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.6,@client.route('/')
v0.5.6,def index():
v0.5.6,return render_template('index.html')
v0.5.6,@client.route('/images/<int:dataset_id>')
v0.5.6,@client.route('/datasets/<int:dataset_id>')
v0.5.6,def index(dataset_id):
v0.5.6,return render_template('images.html')
v0.5.6,
v0.5.6,
v0.5.6,@client.route('/annotate/<int:image_id>')
v0.5.6,@client.route('/editor/<int:image_id>')
v0.5.6,def annotate(image_id):
v0.5.6,return render_template('annotator.html')
v0.5.6,
v0.5.6,
v0.5.6,@client.route('/datasets/')
v0.5.6,def datasets():
v0.5.6,return render_template('datasets.html')
v0.5.6,
v0.5.6,
v0.5.6,@client.route('/categories/')
v0.5.6,def categories():
v0.5.6,return render_template('categories.html')
v0.5.6,
v0.5.6,
v0.5.6,@client.route('/undo/')
v0.5.6,def undo():
v0.5.6,return render_template('undo.html')
v0.5.6,Flask instance
v0.5.6,Dataset Options
v0.5.6,User Options
v0.5.6,Check if thumbnails directory
v0.5.6,Get dataset name from path
v0.5.6,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.6,Use this methods until a solution is found
v0.5.6,map category names to ids; create as needed
v0.5.6,Compute segmentation
v0.5.6,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.6,Make sure shape is not all outside the image
v0.5.6,Convert into rle
v0.5.6,@api.route('/<int:annotation_id>/mask')
v0.5.6,class AnnotationMask(Resource):
v0.5.6,"def get(self, annotation_id):"
v0.5.6,""""""" Returns the binary mask of an annotation """""""
v0.5.6,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.6,Check if dataset exists
v0.5.6,Make sure folder starts with is in proper format
v0.5.6,Get directory
v0.5.6,Create any missing categories
v0.5.6,Add any new categories to dataset
v0.5.6,Find all images
v0.5.6,Generate annotations
v0.5.6,Check if annotation already exists
v0.5.6,Create annotation
v0.5.6,annotation.iscrowd = is_crowd
v0.5.6,Create /api/ space
v0.5.6,Remove default namespace
v0.5.6,Setup API namespaces
v0.5.6,Check if current user can access dataset
v0.5.6,Iterate every category passed in the data
v0.5.6,Find corresponding category object in the database
v0.5.6,Iterate every annotation from the data annotations
v0.5.6,Find corresponding annotation object in database
v0.5.6,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.6,"the annotation twice, checking if the paperjs exists."
v0.5.6,Update annotation in database
v0.5.6,Update paperjs if it exists
v0.5.6,Generate coco formatted segmentation data
v0.5.6,Get next and previous image
v0.5.6,Generate data about the image to return to client
v0.5.5,Category 1 Test
v0.5.5,Category 2 Test
v0.5.5,Category 3 Test
v0.5.5,TODO write tests for data
v0.5.5,"import Home from ""@/views/Home"";"
v0.5.5,"mode: ""history"","
v0.5.5,convert 3-digit hex to 6-digits.
v0.5.5,invert color components
v0.5.5,pad each with zeros and return
v0.5.5,"e: { test: true, data: ""info"" }"
v0.5.5,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.5,
v0.5.5,The MIT License (MIT)
v0.5.5,
v0.5.5,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.5,
v0.5.5,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.5,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.5,"in the Software without restriction, including without limitation the rights"
v0.5.5,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.5,"copies of the Software, and to permit persons to whom the Software is"
v0.5.5,"furnished to do so, subject to the following conditions:"
v0.5.5,
v0.5.5,The above copyright notice and this permission notice shall be included in
v0.5.5,all copies or substantial portions of the Software.
v0.5.5,
v0.5.5,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.5,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.5,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.5,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.5,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.5,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.5,THE SOFTWARE.
v0.5.5,compare the color of the sample
v0.5.5,walk to left side starting with the left neighbor
v0.5.5,compare the color of the sample
v0.5.5,walk to right side starting with the right neighbor
v0.5.5,compare the color of the sample
v0.5.5,check minmax for X
v0.5.5,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.5,add the scanning line in the direction (y + dir) if necessary
v0.5.5,check minmax for Y if necessary
v0.5.5,calc gauss weights
v0.5.5,normalization weights
v0.5.5,walk through all source points for blur
v0.5.5,walk through x-neighbors
v0.5.5,walk through y-neighbors
v0.5.5,"copy visited points (only ""black"")"
v0.5.5,walk through inner values except points on the boundary of the image
v0.5.5,"check if any neighbor with a ""white"" color"
v0.5.5,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.5,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.5,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.5,walk through points on the boundary of the image if necessary
v0.5.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.5,walk through radius-neighbors of border points and add them to the result array
v0.5.5,walk through x-neighbors
v0.5.5,check the uniqueness
v0.5.5,walk through y-neighbors
v0.5.5,check the uniqueness
v0.5.5,calc gauss weights
v0.5.5,normalization weights
v0.5.5,walk through all border points for blur
v0.5.5,walk through x-neighbors
v0.5.5,check minmax
v0.5.5,walk through y-neighbors
v0.5.5,check minmax
v0.5.5,walk through inner values except points on the boundary of the image
v0.5.5,"check if any neighbor with a ""white"" color"
v0.5.5,if (data[k + 1] + data[k - 1] +
v0.5.5,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.5,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.5,walk through points on the boundary of the image if necessary
v0.5.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.5,walk through inner values except points on the boundary of the image
v0.5.5,"check if any neighbor with a ""white"" color"
v0.5.5,if (data[k + 1] + data[k - 1] +
v0.5.5,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.5,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.5,walk through points on the boundary of the image if necessary
v0.5.5,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.5,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.5,"all [dx,dy] pairs (array index is the direction)"
v0.5.5,5 6 7
v0.5.5,4 X 0
v0.5.5,3 2 1
v0.5.5,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.5,need contour tracing
v0.5.5,bypass all the neighbors around the current point in a clockwise
v0.5.5,get the next point by new direction
v0.5.5,black boundary pixel
v0.5.5,walk through all contours
v0.5.5,contour isn't simplified
v0.5.5,no intermediate points
v0.5.5,calc the distance from current point to edge
v0.5.5,"if the max ""deviation"" is larger than allowed then..."
v0.5.5,"from flask import Blueprint, render_template"
v0.5.5,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.5,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.5,@client.route('/')
v0.5.5,def index():
v0.5.5,return render_template('index.html')
v0.5.5,@client.route('/images/<int:dataset_id>')
v0.5.5,@client.route('/datasets/<int:dataset_id>')
v0.5.5,def index(dataset_id):
v0.5.5,return render_template('images.html')
v0.5.5,
v0.5.5,
v0.5.5,@client.route('/annotate/<int:image_id>')
v0.5.5,@client.route('/editor/<int:image_id>')
v0.5.5,def annotate(image_id):
v0.5.5,return render_template('annotator.html')
v0.5.5,
v0.5.5,
v0.5.5,@client.route('/datasets/')
v0.5.5,def datasets():
v0.5.5,return render_template('datasets.html')
v0.5.5,
v0.5.5,
v0.5.5,@client.route('/categories/')
v0.5.5,def categories():
v0.5.5,return render_template('categories.html')
v0.5.5,
v0.5.5,
v0.5.5,@client.route('/undo/')
v0.5.5,def undo():
v0.5.5,return render_template('undo.html')
v0.5.5,Flask instance
v0.5.5,Dataset Options
v0.5.5,User Options
v0.5.5,Check if thumbnails directory
v0.5.5,Get dataset name from path
v0.5.5,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.5,Use this methods until a solution is found
v0.5.5,map category names to ids; create as needed
v0.5.5,Compute segmentation
v0.5.5,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.5,Make sure shape is not all outside the image
v0.5.5,Convert into rle
v0.5.5,@api.route('/<int:annotation_id>/mask')
v0.5.5,class AnnotationMask(Resource):
v0.5.5,"def get(self, annotation_id):"
v0.5.5,""""""" Returns the binary mask of an annotation """""""
v0.5.5,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.5,Check if dataset exists
v0.5.5,Make sure folder starts with is in proper format
v0.5.5,Get directory
v0.5.5,Create any missing categories
v0.5.5,Add any new categories to dataset
v0.5.5,Find all images
v0.5.5,Generate annotations
v0.5.5,Check if annotation already exists
v0.5.5,Create annotation
v0.5.5,annotation.iscrowd = is_crowd
v0.5.5,Create /api/ space
v0.5.5,Remove default namespace
v0.5.5,Setup API namespaces
v0.5.5,Check if current user can access dataset
v0.5.5,Iterate every category passed in the data
v0.5.5,Find corresponding category object in the database
v0.5.5,Iterate every annotation from the data annotations
v0.5.5,Find corresponding annotation object in database
v0.5.5,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.5,"the annotation twice, checking if the paperjs exists."
v0.5.5,Update annotation in database
v0.5.5,Update paperjs if it exists
v0.5.5,Generate coco formatted segmentation data
v0.5.5,Get next and previous image
v0.5.5,Generate data about the image to return to client
v0.5.4,Category 1 Test
v0.5.4,Category 2 Test
v0.5.4,Category 3 Test
v0.5.4,TODO write tests for data
v0.5.4,"import Home from ""@/views/Home"";"
v0.5.4,"mode: ""history"","
v0.5.4,convert 3-digit hex to 6-digits.
v0.5.4,invert color components
v0.5.4,pad each with zeros and return
v0.5.4,"e: { test: true, data: ""info"" }"
v0.5.4,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.4,
v0.5.4,The MIT License (MIT)
v0.5.4,
v0.5.4,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.4,
v0.5.4,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.4,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.4,"in the Software without restriction, including without limitation the rights"
v0.5.4,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.4,"copies of the Software, and to permit persons to whom the Software is"
v0.5.4,"furnished to do so, subject to the following conditions:"
v0.5.4,
v0.5.4,The above copyright notice and this permission notice shall be included in
v0.5.4,all copies or substantial portions of the Software.
v0.5.4,
v0.5.4,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.4,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.4,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.4,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.4,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.4,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.4,THE SOFTWARE.
v0.5.4,compare the color of the sample
v0.5.4,walk to left side starting with the left neighbor
v0.5.4,compare the color of the sample
v0.5.4,walk to right side starting with the right neighbor
v0.5.4,compare the color of the sample
v0.5.4,check minmax for X
v0.5.4,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.4,add the scanning line in the direction (y + dir) if necessary
v0.5.4,check minmax for Y if necessary
v0.5.4,calc gauss weights
v0.5.4,normalization weights
v0.5.4,walk through all source points for blur
v0.5.4,walk through x-neighbors
v0.5.4,walk through y-neighbors
v0.5.4,"copy visited points (only ""black"")"
v0.5.4,walk through inner values except points on the boundary of the image
v0.5.4,"check if any neighbor with a ""white"" color"
v0.5.4,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.4,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.4,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.4,walk through points on the boundary of the image if necessary
v0.5.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.4,walk through radius-neighbors of border points and add them to the result array
v0.5.4,walk through x-neighbors
v0.5.4,check the uniqueness
v0.5.4,walk through y-neighbors
v0.5.4,check the uniqueness
v0.5.4,calc gauss weights
v0.5.4,normalization weights
v0.5.4,walk through all border points for blur
v0.5.4,walk through x-neighbors
v0.5.4,check minmax
v0.5.4,walk through y-neighbors
v0.5.4,check minmax
v0.5.4,walk through inner values except points on the boundary of the image
v0.5.4,"check if any neighbor with a ""white"" color"
v0.5.4,if (data[k + 1] + data[k - 1] +
v0.5.4,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.4,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.4,walk through points on the boundary of the image if necessary
v0.5.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.4,walk through inner values except points on the boundary of the image
v0.5.4,"check if any neighbor with a ""white"" color"
v0.5.4,if (data[k + 1] + data[k - 1] +
v0.5.4,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.4,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.4,walk through points on the boundary of the image if necessary
v0.5.4,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.4,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.4,"all [dx,dy] pairs (array index is the direction)"
v0.5.4,5 6 7
v0.5.4,4 X 0
v0.5.4,3 2 1
v0.5.4,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.4,need contour tracing
v0.5.4,bypass all the neighbors around the current point in a clockwise
v0.5.4,get the next point by new direction
v0.5.4,black boundary pixel
v0.5.4,walk through all contours
v0.5.4,contour isn't simplified
v0.5.4,no intermediate points
v0.5.4,calc the distance from current point to edge
v0.5.4,"if the max ""deviation"" is larger than allowed then..."
v0.5.4,"from flask import Blueprint, render_template"
v0.5.4,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.4,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.4,@client.route('/')
v0.5.4,def index():
v0.5.4,return render_template('index.html')
v0.5.4,@client.route('/images/<int:dataset_id>')
v0.5.4,@client.route('/datasets/<int:dataset_id>')
v0.5.4,def index(dataset_id):
v0.5.4,return render_template('images.html')
v0.5.4,
v0.5.4,
v0.5.4,@client.route('/annotate/<int:image_id>')
v0.5.4,@client.route('/editor/<int:image_id>')
v0.5.4,def annotate(image_id):
v0.5.4,return render_template('annotator.html')
v0.5.4,
v0.5.4,
v0.5.4,@client.route('/datasets/')
v0.5.4,def datasets():
v0.5.4,return render_template('datasets.html')
v0.5.4,
v0.5.4,
v0.5.4,@client.route('/categories/')
v0.5.4,def categories():
v0.5.4,return render_template('categories.html')
v0.5.4,
v0.5.4,
v0.5.4,@client.route('/undo/')
v0.5.4,def undo():
v0.5.4,return render_template('undo.html')
v0.5.4,Flask instance
v0.5.4,Dataset Options
v0.5.4,User Options
v0.5.4,Check if thumbnails directory
v0.5.4,Get dataset name from path
v0.5.4,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.4,Use this methods until a solution is found
v0.5.4,map category names to ids; create as needed
v0.5.4,Compute segmentation
v0.5.4,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.4,Make sure shape is not all outside the image
v0.5.4,Convert into rle
v0.5.4,@api.route('/<int:annotation_id>/mask')
v0.5.4,class AnnotationMask(Resource):
v0.5.4,"def get(self, annotation_id):"
v0.5.4,""""""" Returns the binary mask of an annotation """""""
v0.5.4,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.4,Check if dataset exists
v0.5.4,Make sure folder starts with is in proper format
v0.5.4,Get directory
v0.5.4,Create any missing categories
v0.5.4,Add any new categories to dataset
v0.5.4,Find all images
v0.5.4,Generate annotations
v0.5.4,Check if annotation already exists
v0.5.4,Create annotation
v0.5.4,annotation.iscrowd = is_crowd
v0.5.4,Create /api/ space
v0.5.4,Remove default namespace
v0.5.4,Setup API namespaces
v0.5.4,Check if current user can access dataset
v0.5.4,Iterate every category passed in the data
v0.5.4,Find corresponding category object in the database
v0.5.4,Iterate every annotation from the data annotations
v0.5.4,Find corresponding annotation object in database
v0.5.4,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.4,"the annotation twice, checking if the paperjs exists."
v0.5.4,Update annotation in database
v0.5.4,Update paperjs if it exists
v0.5.4,Generate coco formatted segmentation data
v0.5.4,Get next and previous image
v0.5.4,Generate data about the image to return to client
v0.5.3,Category 1 Test
v0.5.3,Category 2 Test
v0.5.3,Category 3 Test
v0.5.3,TODO write tests for data
v0.5.3,"import Home from ""@/views/Home"";"
v0.5.3,"mode: ""history"","
v0.5.3,convert 3-digit hex to 6-digits.
v0.5.3,invert color components
v0.5.3,pad each with zeros and return
v0.5.3,"e: { test: true, data: ""info"" }"
v0.5.3,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.3,
v0.5.3,The MIT License (MIT)
v0.5.3,
v0.5.3,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.3,
v0.5.3,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.3,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.3,"in the Software without restriction, including without limitation the rights"
v0.5.3,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.3,"copies of the Software, and to permit persons to whom the Software is"
v0.5.3,"furnished to do so, subject to the following conditions:"
v0.5.3,
v0.5.3,The above copyright notice and this permission notice shall be included in
v0.5.3,all copies or substantial portions of the Software.
v0.5.3,
v0.5.3,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.3,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.3,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.3,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.3,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.3,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.3,THE SOFTWARE.
v0.5.3,compare the color of the sample
v0.5.3,walk to left side starting with the left neighbor
v0.5.3,compare the color of the sample
v0.5.3,walk to right side starting with the right neighbor
v0.5.3,compare the color of the sample
v0.5.3,check minmax for X
v0.5.3,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.3,add the scanning line in the direction (y + dir) if necessary
v0.5.3,check minmax for Y if necessary
v0.5.3,calc gauss weights
v0.5.3,normalization weights
v0.5.3,walk through all source points for blur
v0.5.3,walk through x-neighbors
v0.5.3,walk through y-neighbors
v0.5.3,"copy visited points (only ""black"")"
v0.5.3,walk through inner values except points on the boundary of the image
v0.5.3,"check if any neighbor with a ""white"" color"
v0.5.3,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.3,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.3,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.3,walk through points on the boundary of the image if necessary
v0.5.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.3,walk through radius-neighbors of border points and add them to the result array
v0.5.3,walk through x-neighbors
v0.5.3,check the uniqueness
v0.5.3,walk through y-neighbors
v0.5.3,check the uniqueness
v0.5.3,calc gauss weights
v0.5.3,normalization weights
v0.5.3,walk through all border points for blur
v0.5.3,walk through x-neighbors
v0.5.3,check minmax
v0.5.3,walk through y-neighbors
v0.5.3,check minmax
v0.5.3,walk through inner values except points on the boundary of the image
v0.5.3,"check if any neighbor with a ""white"" color"
v0.5.3,if (data[k + 1] + data[k - 1] +
v0.5.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.3,walk through points on the boundary of the image if necessary
v0.5.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.3,walk through inner values except points on the boundary of the image
v0.5.3,"check if any neighbor with a ""white"" color"
v0.5.3,if (data[k + 1] + data[k - 1] +
v0.5.3,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.3,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.3,walk through points on the boundary of the image if necessary
v0.5.3,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.3,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.3,"all [dx,dy] pairs (array index is the direction)"
v0.5.3,5 6 7
v0.5.3,4 X 0
v0.5.3,3 2 1
v0.5.3,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.3,need contour tracing
v0.5.3,bypass all the neighbors around the current point in a clockwise
v0.5.3,get the next point by new direction
v0.5.3,black boundary pixel
v0.5.3,walk through all contours
v0.5.3,contour isn't simplified
v0.5.3,no intermediate points
v0.5.3,calc the distance from current point to edge
v0.5.3,"if the max ""deviation"" is larger than allowed then..."
v0.5.3,"from flask import Blueprint, render_template"
v0.5.3,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.3,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.3,@client.route('/')
v0.5.3,def index():
v0.5.3,return render_template('index.html')
v0.5.3,@client.route('/images/<int:dataset_id>')
v0.5.3,@client.route('/datasets/<int:dataset_id>')
v0.5.3,def index(dataset_id):
v0.5.3,return render_template('images.html')
v0.5.3,
v0.5.3,
v0.5.3,@client.route('/annotate/<int:image_id>')
v0.5.3,@client.route('/editor/<int:image_id>')
v0.5.3,def annotate(image_id):
v0.5.3,return render_template('annotator.html')
v0.5.3,
v0.5.3,
v0.5.3,@client.route('/datasets/')
v0.5.3,def datasets():
v0.5.3,return render_template('datasets.html')
v0.5.3,
v0.5.3,
v0.5.3,@client.route('/categories/')
v0.5.3,def categories():
v0.5.3,return render_template('categories.html')
v0.5.3,
v0.5.3,
v0.5.3,@client.route('/undo/')
v0.5.3,def undo():
v0.5.3,return render_template('undo.html')
v0.5.3,Flask instance
v0.5.3,Dataset Options
v0.5.3,User Options
v0.5.3,Check if thumbnails directory
v0.5.3,Get dataset name from path
v0.5.3,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.3,Use this methods until a solution is found
v0.5.3,map category names to ids; create as needed
v0.5.3,Compute segmentation
v0.5.3,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.3,Make sure shape is not all outside the image
v0.5.3,Convert into rle
v0.5.3,@api.route('/<int:annotation_id>/mask')
v0.5.3,class AnnotationMask(Resource):
v0.5.3,"def get(self, annotation_id):"
v0.5.3,""""""" Returns the binary mask of an annotation """""""
v0.5.3,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.3,Check if dataset exists
v0.5.3,Make sure folder starts with is in proper format
v0.5.3,Get directory
v0.5.3,Create any missing categories
v0.5.3,Add any new categories to dataset
v0.5.3,Find all images
v0.5.3,Generate annotations
v0.5.3,Check if annotation already exists
v0.5.3,Create annotation
v0.5.3,annotation.iscrowd = is_crowd
v0.5.3,Create /api/ space
v0.5.3,Remove default namespace
v0.5.3,Setup API namespaces
v0.5.3,Check if current user can access dataset
v0.5.3,Iterate every category passed in the data
v0.5.3,Find corresponding category object in the database
v0.5.3,Iterate every annotation from the data annotations
v0.5.3,Find corresponding annotation object in database
v0.5.3,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.3,"the annotation twice, checking if the paperjs exists."
v0.5.3,Update annotation in database
v0.5.3,Update paperjs if it exists
v0.5.3,Generate coco formatted segmentation data
v0.5.3,Get next and previous image
v0.5.3,Generate data about the image to return to client
v0.5.2,Category 1 Test
v0.5.2,Category 2 Test
v0.5.2,Category 3 Test
v0.5.2,TODO write tests for data
v0.5.2,"import Home from ""@/views/Home"";"
v0.5.2,"mode: ""history"","
v0.5.2,convert 3-digit hex to 6-digits.
v0.5.2,invert color components
v0.5.2,pad each with zeros and return
v0.5.2,"e: { test: true, data: ""info"" }"
v0.5.2,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.2,
v0.5.2,The MIT License (MIT)
v0.5.2,
v0.5.2,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.2,
v0.5.2,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.2,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.2,"in the Software without restriction, including without limitation the rights"
v0.5.2,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.2,"copies of the Software, and to permit persons to whom the Software is"
v0.5.2,"furnished to do so, subject to the following conditions:"
v0.5.2,
v0.5.2,The above copyright notice and this permission notice shall be included in
v0.5.2,all copies or substantial portions of the Software.
v0.5.2,
v0.5.2,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.2,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.2,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.2,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.2,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.2,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.2,THE SOFTWARE.
v0.5.2,compare the color of the sample
v0.5.2,walk to left side starting with the left neighbor
v0.5.2,compare the color of the sample
v0.5.2,walk to right side starting with the right neighbor
v0.5.2,compare the color of the sample
v0.5.2,check minmax for X
v0.5.2,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.2,add the scanning line in the direction (y + dir) if necessary
v0.5.2,check minmax for Y if necessary
v0.5.2,calc gauss weights
v0.5.2,normalization weights
v0.5.2,walk through all source points for blur
v0.5.2,walk through x-neighbors
v0.5.2,walk through y-neighbors
v0.5.2,"copy visited points (only ""black"")"
v0.5.2,walk through inner values except points on the boundary of the image
v0.5.2,"check if any neighbor with a ""white"" color"
v0.5.2,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.2,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.2,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.2,walk through points on the boundary of the image if necessary
v0.5.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.2,walk through radius-neighbors of border points and add them to the result array
v0.5.2,walk through x-neighbors
v0.5.2,check the uniqueness
v0.5.2,walk through y-neighbors
v0.5.2,check the uniqueness
v0.5.2,calc gauss weights
v0.5.2,normalization weights
v0.5.2,walk through all border points for blur
v0.5.2,walk through x-neighbors
v0.5.2,check minmax
v0.5.2,walk through y-neighbors
v0.5.2,check minmax
v0.5.2,walk through inner values except points on the boundary of the image
v0.5.2,"check if any neighbor with a ""white"" color"
v0.5.2,if (data[k + 1] + data[k - 1] +
v0.5.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.2,walk through points on the boundary of the image if necessary
v0.5.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.2,walk through inner values except points on the boundary of the image
v0.5.2,"check if any neighbor with a ""white"" color"
v0.5.2,if (data[k + 1] + data[k - 1] +
v0.5.2,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.2,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.2,walk through points on the boundary of the image if necessary
v0.5.2,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.2,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.2,"all [dx,dy] pairs (array index is the direction)"
v0.5.2,5 6 7
v0.5.2,4 X 0
v0.5.2,3 2 1
v0.5.2,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.2,need contour tracing
v0.5.2,bypass all the neighbors around the current point in a clockwise
v0.5.2,get the next point by new direction
v0.5.2,black boundary pixel
v0.5.2,walk through all contours
v0.5.2,contour isn't simplified
v0.5.2,no intermediate points
v0.5.2,calc the distance from current point to edge
v0.5.2,"if the max ""deviation"" is larger than allowed then..."
v0.5.2,"from flask import Blueprint, render_template"
v0.5.2,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.2,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.2,@client.route('/')
v0.5.2,def index():
v0.5.2,return render_template('index.html')
v0.5.2,@client.route('/images/<int:dataset_id>')
v0.5.2,@client.route('/datasets/<int:dataset_id>')
v0.5.2,def index(dataset_id):
v0.5.2,return render_template('images.html')
v0.5.2,
v0.5.2,
v0.5.2,@client.route('/annotate/<int:image_id>')
v0.5.2,@client.route('/editor/<int:image_id>')
v0.5.2,def annotate(image_id):
v0.5.2,return render_template('annotator.html')
v0.5.2,
v0.5.2,
v0.5.2,@client.route('/datasets/')
v0.5.2,def datasets():
v0.5.2,return render_template('datasets.html')
v0.5.2,
v0.5.2,
v0.5.2,@client.route('/categories/')
v0.5.2,def categories():
v0.5.2,return render_template('categories.html')
v0.5.2,
v0.5.2,
v0.5.2,@client.route('/undo/')
v0.5.2,def undo():
v0.5.2,return render_template('undo.html')
v0.5.2,Flask instance
v0.5.2,Dataset Options
v0.5.2,User Options
v0.5.2,Check if thumbnails directory
v0.5.2,Get dataset name from path
v0.5.2,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.2,Use this methods until a solution is found
v0.5.2,map category names to ids; create as needed
v0.5.2,Compute segmentation
v0.5.2,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.2,Make sure shape is not all outside the image
v0.5.2,Convert into rle
v0.5.2,@api.route('/<int:annotation_id>/mask')
v0.5.2,class AnnotationMask(Resource):
v0.5.2,"def get(self, annotation_id):"
v0.5.2,""""""" Returns the binary mask of an annotation """""""
v0.5.2,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.2,Check if dataset exists
v0.5.2,Make sure folder starts with is in proper format
v0.5.2,Get directory
v0.5.2,Create any missing categories
v0.5.2,Add any new categories to dataset
v0.5.2,Find all images
v0.5.2,Generate annotations
v0.5.2,Check if annotation already exists
v0.5.2,Create annotation
v0.5.2,annotation.iscrowd = is_crowd
v0.5.2,Create /api/ space
v0.5.2,Remove default namespace
v0.5.2,Setup API namespaces
v0.5.2,Check if current user can access dataset
v0.5.2,Iterate every category passed in the data
v0.5.2,Find corresponding category object in the database
v0.5.2,Iterate every annotation from the data annotations
v0.5.2,Find corresponding annotation object in database
v0.5.2,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.2,"the annotation twice, checking if the paperjs exists."
v0.5.2,Update annotation in database
v0.5.2,Update paperjs if it exists
v0.5.2,Generate coco formatted segmentation data
v0.5.2,Get next and previous image
v0.5.2,Generate data about the image to return to client
v0.5.1,Category 1 Test
v0.5.1,Category 2 Test
v0.5.1,Category 3 Test
v0.5.1,TODO write tests for data
v0.5.1,"import Home from ""@/views/Home"";"
v0.5.1,"mode: ""history"","
v0.5.1,convert 3-digit hex to 6-digits.
v0.5.1,invert color components
v0.5.1,pad each with zeros and return
v0.5.1,"e: { test: true, data: ""info"" }"
v0.5.1,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.1,
v0.5.1,The MIT License (MIT)
v0.5.1,
v0.5.1,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.1,
v0.5.1,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.1,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.1,"in the Software without restriction, including without limitation the rights"
v0.5.1,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.1,"copies of the Software, and to permit persons to whom the Software is"
v0.5.1,"furnished to do so, subject to the following conditions:"
v0.5.1,
v0.5.1,The above copyright notice and this permission notice shall be included in
v0.5.1,all copies or substantial portions of the Software.
v0.5.1,
v0.5.1,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.1,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.1,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.1,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.1,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.1,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.1,THE SOFTWARE.
v0.5.1,compare the color of the sample
v0.5.1,walk to left side starting with the left neighbor
v0.5.1,compare the color of the sample
v0.5.1,walk to right side starting with the right neighbor
v0.5.1,compare the color of the sample
v0.5.1,check minmax for X
v0.5.1,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.1,add the scanning line in the direction (y + dir) if necessary
v0.5.1,check minmax for Y if necessary
v0.5.1,calc gauss weights
v0.5.1,normalization weights
v0.5.1,walk through all source points for blur
v0.5.1,walk through x-neighbors
v0.5.1,walk through y-neighbors
v0.5.1,"copy visited points (only ""black"")"
v0.5.1,walk through inner values except points on the boundary of the image
v0.5.1,"check if any neighbor with a ""white"" color"
v0.5.1,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.1,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.1,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.1,walk through points on the boundary of the image if necessary
v0.5.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.1,walk through radius-neighbors of border points and add them to the result array
v0.5.1,walk through x-neighbors
v0.5.1,check the uniqueness
v0.5.1,walk through y-neighbors
v0.5.1,check the uniqueness
v0.5.1,calc gauss weights
v0.5.1,normalization weights
v0.5.1,walk through all border points for blur
v0.5.1,walk through x-neighbors
v0.5.1,check minmax
v0.5.1,walk through y-neighbors
v0.5.1,check minmax
v0.5.1,walk through inner values except points on the boundary of the image
v0.5.1,"check if any neighbor with a ""white"" color"
v0.5.1,if (data[k + 1] + data[k - 1] +
v0.5.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.1,walk through points on the boundary of the image if necessary
v0.5.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.1,walk through inner values except points on the boundary of the image
v0.5.1,"check if any neighbor with a ""white"" color"
v0.5.1,if (data[k + 1] + data[k - 1] +
v0.5.1,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.1,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.1,walk through points on the boundary of the image if necessary
v0.5.1,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.1,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.1,"all [dx,dy] pairs (array index is the direction)"
v0.5.1,5 6 7
v0.5.1,4 X 0
v0.5.1,3 2 1
v0.5.1,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.1,need contour tracing
v0.5.1,bypass all the neighbors around the current point in a clockwise
v0.5.1,get the next point by new direction
v0.5.1,black boundary pixel
v0.5.1,walk through all contours
v0.5.1,contour isn't simplified
v0.5.1,no intermediate points
v0.5.1,calc the distance from current point to edge
v0.5.1,"if the max ""deviation"" is larger than allowed then..."
v0.5.1,"from flask import Blueprint, render_template"
v0.5.1,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.1,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.1,@client.route('/')
v0.5.1,def index():
v0.5.1,return render_template('index.html')
v0.5.1,@client.route('/images/<int:dataset_id>')
v0.5.1,@client.route('/datasets/<int:dataset_id>')
v0.5.1,def index(dataset_id):
v0.5.1,return render_template('images.html')
v0.5.1,
v0.5.1,
v0.5.1,@client.route('/annotate/<int:image_id>')
v0.5.1,@client.route('/editor/<int:image_id>')
v0.5.1,def annotate(image_id):
v0.5.1,return render_template('annotator.html')
v0.5.1,
v0.5.1,
v0.5.1,@client.route('/datasets/')
v0.5.1,def datasets():
v0.5.1,return render_template('datasets.html')
v0.5.1,
v0.5.1,
v0.5.1,@client.route('/categories/')
v0.5.1,def categories():
v0.5.1,return render_template('categories.html')
v0.5.1,
v0.5.1,
v0.5.1,@client.route('/undo/')
v0.5.1,def undo():
v0.5.1,return render_template('undo.html')
v0.5.1,Flask instance
v0.5.1,Dataset Options
v0.5.1,User Options
v0.5.1,Check if thumbnails directory
v0.5.1,Get dataset name from path
v0.5.1,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.1,Use this methods until a solution is found
v0.5.1,map category names to ids; create as needed
v0.5.1,Compute segmentation
v0.5.1,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.1,Make sure shape is not all outside the image
v0.5.1,Convert into rle
v0.5.1,@api.route('/<int:annotation_id>/mask')
v0.5.1,class AnnotationMask(Resource):
v0.5.1,"def get(self, annotation_id):"
v0.5.1,""""""" Returns the binary mask of an annotation """""""
v0.5.1,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.1,Check if dataset exists
v0.5.1,Make sure folder starts with is in proper format
v0.5.1,Get directory
v0.5.1,Create any missing categories
v0.5.1,Add any new categories to dataset
v0.5.1,Find all images
v0.5.1,Generate annotations
v0.5.1,Check if annotation already exists
v0.5.1,Create annotation
v0.5.1,annotation.iscrowd = is_crowd
v0.5.1,Create /api/ space
v0.5.1,Remove default namespace
v0.5.1,Setup API namespaces
v0.5.1,Check if current user can access dataset
v0.5.1,Iterate every category passed in the data
v0.5.1,Find corresponding category object in the database
v0.5.1,Iterate every annotation from the data annotations
v0.5.1,Find corresponding annotation object in database
v0.5.1,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.1,"the annotation twice, checking if the paperjs exists."
v0.5.1,Update annotation in database
v0.5.1,Update paperjs if it exists
v0.5.1,Generate coco formatted segmentation data
v0.5.1,Get next and previous image
v0.5.1,Generate data about the image to return to client
v0.5.0,Category 1 Test
v0.5.0,Category 2 Test
v0.5.0,Category 3 Test
v0.5.0,TODO write tests for data
v0.5.0,"import Home from ""@/views/Home"";"
v0.5.0,"mode: ""history"","
v0.5.0,convert 3-digit hex to 6-digits.
v0.5.0,invert color components
v0.5.0,pad each with zeros and return
v0.5.0,"e: { test: true, data: ""info"" }"
v0.5.0,Magic Wand (Fuzzy Selection Tool) for Javascript
v0.5.0,
v0.5.0,The MIT License (MIT)
v0.5.0,
v0.5.0,"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)"
v0.5.0,
v0.5.0,"Permission is hereby granted, free of charge, to any person obtaining a copy"
v0.5.0,"of this software and associated documentation files (the ""Software""), to deal"
v0.5.0,"in the Software without restriction, including without limitation the rights"
v0.5.0,"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"
v0.5.0,"copies of the Software, and to permit persons to whom the Software is"
v0.5.0,"furnished to do so, subject to the following conditions:"
v0.5.0,
v0.5.0,The above copyright notice and this permission notice shall be included in
v0.5.0,all copies or substantial portions of the Software.
v0.5.0,
v0.5.0,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
v0.5.0,"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"
v0.5.0,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
v0.5.0,"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"
v0.5.0,"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"
v0.5.0,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
v0.5.0,THE SOFTWARE.
v0.5.0,compare the color of the sample
v0.5.0,walk to left side starting with the left neighbor
v0.5.0,compare the color of the sample
v0.5.0,walk to right side starting with the right neighbor
v0.5.0,compare the color of the sample
v0.5.0,check minmax for X
v0.5.0,add two scanning lines in the opposite direction (y - dir) if necessary
v0.5.0,add the scanning line in the direction (y + dir) if necessary
v0.5.0,check minmax for Y if necessary
v0.5.0,calc gauss weights
v0.5.0,normalization weights
v0.5.0,walk through all source points for blur
v0.5.0,walk through x-neighbors
v0.5.0,walk through y-neighbors
v0.5.0,"copy visited points (only ""black"")"
v0.5.0,walk through inner values except points on the boundary of the image
v0.5.0,"check if any neighbor with a ""white"" color"
v0.5.0,if (visitedData[k + 1] + visitedData[k - 1] +
v0.5.0,visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +
v0.5.0,visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;
v0.5.0,walk through points on the boundary of the image if necessary
v0.5.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.0,walk through radius-neighbors of border points and add them to the result array
v0.5.0,walk through x-neighbors
v0.5.0,check the uniqueness
v0.5.0,walk through y-neighbors
v0.5.0,check the uniqueness
v0.5.0,calc gauss weights
v0.5.0,normalization weights
v0.5.0,walk through all border points for blur
v0.5.0,walk through x-neighbors
v0.5.0,check minmax
v0.5.0,walk through y-neighbors
v0.5.0,check minmax
v0.5.0,walk through inner values except points on the boundary of the image
v0.5.0,"check if any neighbor with a ""white"" color"
v0.5.0,if (data[k + 1] + data[k - 1] +
v0.5.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.0,walk through points on the boundary of the image if necessary
v0.5.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.0,walk through inner values except points on the boundary of the image
v0.5.0,"check if any neighbor with a ""white"" color"
v0.5.0,if (data[k + 1] + data[k - 1] +
v0.5.0,data[k1] + data[k1 + 1] + data[k1 - 1] +
v0.5.0,data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;
v0.5.0,walk through points on the boundary of the image if necessary
v0.5.0,"if the ""black"" point is adjacent to the boundary of the image, it is a border point"
v0.5.0,"walk through inner values and copy only ""black"" points to the result mask"
v0.5.0,"all [dx,dy] pairs (array index is the direction)"
v0.5.0,5 6 7
v0.5.0,4 X 0
v0.5.0,3 2 1
v0.5.0,"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)"
v0.5.0,need contour tracing
v0.5.0,bypass all the neighbors around the current point in a clockwise
v0.5.0,get the next point by new direction
v0.5.0,black boundary pixel
v0.5.0,walk through all contours
v0.5.0,contour isn't simplified
v0.5.0,no intermediate points
v0.5.0,calc the distance from current point to edge
v0.5.0,"if the max ""deviation"" is larger than allowed then..."
v0.5.0,"from flask import Blueprint, render_template"
v0.5.0,"client = Blueprint('client', __name__, static_folder='client')"
v0.5.0,"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")"
v0.5.0,@client.route('/')
v0.5.0,def index():
v0.5.0,return render_template('index.html')
v0.5.0,@client.route('/images/<int:dataset_id>')
v0.5.0,@client.route('/datasets/<int:dataset_id>')
v0.5.0,def index(dataset_id):
v0.5.0,return render_template('images.html')
v0.5.0,
v0.5.0,
v0.5.0,@client.route('/annotate/<int:image_id>')
v0.5.0,@client.route('/editor/<int:image_id>')
v0.5.0,def annotate(image_id):
v0.5.0,return render_template('annotator.html')
v0.5.0,
v0.5.0,
v0.5.0,@client.route('/datasets/')
v0.5.0,def datasets():
v0.5.0,return render_template('datasets.html')
v0.5.0,
v0.5.0,
v0.5.0,@client.route('/categories/')
v0.5.0,def categories():
v0.5.0,return render_template('categories.html')
v0.5.0,
v0.5.0,
v0.5.0,@client.route('/undo/')
v0.5.0,def undo():
v0.5.0,return render_template('undo.html')
v0.5.0,Flask instance
v0.5.0,Dataset Options
v0.5.0,User Options
v0.5.0,Check if thumbnails directory
v0.5.0,Get dataset name from path
v0.5.0,https://github.com/MongoEngine/mongoengine/issues/1171
v0.5.0,Use this methods until a solution is found
v0.5.0,map category names to ids; create as needed
v0.5.0,Compute segmentation
v0.5.0,"paperjs points are relative to the center, so we must shift them relative to the top left."
v0.5.0,Make sure shape is not all outside the image
v0.5.0,Convert into rle
v0.5.0,@api.route('/<int:annotation_id>/mask')
v0.5.0,class AnnotationMask(Resource):
v0.5.0,"def get(self, annotation_id):"
v0.5.0,""""""" Returns the binary mask of an annotation """""""
v0.5.0,return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first())
v0.5.0,Check if dataset exists
v0.5.0,Make sure folder starts with is in proper format
v0.5.0,Get directory
v0.5.0,Create any missing categories
v0.5.0,Add any new categories to dataset
v0.5.0,Find all images
v0.5.0,Generate annotations
v0.5.0,Check if annotation already exists
v0.5.0,Create annotation
v0.5.0,annotation.iscrowd = is_crowd
v0.5.0,Create /api/ space
v0.5.0,Remove default namespace
v0.5.0,Setup API namespaces
v0.5.0,Check if current user can access dataset
v0.5.0,Iterate every category passed in the data
v0.5.0,Find corresponding category object in the database
v0.5.0,Iterate every annotation from the data annotations
v0.5.0,Find corresponding annotation object in database
v0.5.0,"Paperjs objects are complex, so they will not always be passed. Therefor we update"
v0.5.0,"the annotation twice, checking if the paperjs exists."
v0.5.0,Update annotation in database
v0.5.0,Update paperjs if it exists
v0.5.0,Generate coco formatted segmentation data
v0.5.0,Get next and previous image
v0.5.0,Generate data about the image to return to client
