Commit Message,predict
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
"setKeypointIndex(keypoint, newIndex) {",0
let oldIndex = keypoint.indexLabel;,0
if (newIndex == oldIndex) return;,0
keypoint.indexLabel = parseInt(newIndex);,0
if (oldIndex >= 0) {,0
delete this._labelled[oldIndex];,0
let otherIndices = this._edges[oldIndex];,0
if (otherIndices) {,0
"otherIndices.forEach(i => this.removeLine([i, oldIndex]));",0
},0
// TODO: Remove assoicated lines,1
},0
if (newIndex >= 0) {,0
this._labelled[newIndex] = keypoint;,0
this._drawLines(keypoint);,0
},0
},0
keypoint.color = this.strokeColor;,0
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Listen to directory events as some file systems don't generate,0
per-file `deleted` events when moving/deleting directories,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
find a point that's inside the canvas,0
"print('point:', point, flush=True)",0
Cruve,0
Point,0
prev_point_outside = prev_point[0] > image_width or prev_point[0] < 0 or prev_point[1] > image_height or prev_point[1] < 0,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
Calculate annotation counts by category in this dataset,0
Calculate the annotation count in the current category in this dataset,0
Calculate the annotated images count in the current category in this dataset,0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Remove parsed arguments,0
Generate query from remaining arugments,0
Change category_ids__in to list,0
Initialize mongo query with required elements:,0
Define query names that should use complex logic:,0
Add additional 'and' arguments to mongo query that do not require complex_query logic,0
Add additional arguments to mongo query that require more complex logic to construct,0
Only show annotated images with selected category_ids,0
Only show non-annotated images,0
Ahow annotated images with selected category_ids or non-annotated images,0
Perform mongodb query,0
for image in images:,0
image_json = query_util.fix_ids(image),0
"query = AnnotationModel.objects(image_id=image.id, deleted=False)",0
category_ids = query.distinct('category_id'),0
"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')",0
image_json['annotations'] = query.count(),0
image_json['categories'] = query_util.fix_ids(categories),0
images_json.append(image_json),0
check if the id exits,0
check if there is anything to update,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
Set maximum thumbnail size (h x w) to use on dataset page,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
Resize image to fit in MAX_THUMBNAIL_DIM envelope as necessary,0
Save as a jpeg to improve loading time,0
(note file extension will not match but allows for backwards compatibility),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
"setKeypointIndex(keypoint, newIndex) {",0
let oldIndex = keypoint.indexLabel;,0
if (newIndex == oldIndex) return;,0
keypoint.indexLabel = parseInt(newIndex);,0
if (oldIndex >= 0) {,0
delete this._labelled[oldIndex];,0
let otherIndices = this._edges[oldIndex];,0
if (otherIndices) {,0
"otherIndices.forEach(i => this.removeLine([i, oldIndex]));",0
},0
// TODO: Remove assoicated lines,1
},0
if (newIndex >= 0) {,0
this._labelled[newIndex] = keypoint;,0
this._drawLines(keypoint);,0
},0
},0
keypoint.color = this.strokeColor;,0
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
find a point that's inside the canvas,0
"print('point:', point, flush=True)",0
Cruve,0
Point,0
prev_point_outside = prev_point[0] > image_width or prev_point[0] < 0 or prev_point[1] > image_height or prev_point[1] < 0,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
Calculate annotation counts by category in this dataset,0
Calculate the annotation count in the current category in this dataset,0
Calculate the annotated images count in the current category in this dataset,0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Remove parsed arguments,0
Generate query from remaining arugments,0
Change category_ids__in to list,0
Initialize mongo query with required elements:,0
Define query names that should use complex logic:,0
Add additional 'and' arguments to mongo query that do not require complex_query logic,0
Add additional arguments to mongo query that require more complex logic to construct,0
Only show annotated images with selected category_ids,0
Only show non-annotated images,0
Ahow annotated images with selected category_ids or non-annotated images,0
Perform mongodb query,0
for image in images:,0
image_json = query_util.fix_ids(image),0
"query = AnnotationModel.objects(image_id=image.id, deleted=False)",0
category_ids = query.distinct('category_id'),0
"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')",0
image_json['annotations'] = query.count(),0
image_json['categories'] = query_util.fix_ids(categories),0
images_json.append(image_json),0
check if the id exits,0
check if there is anything to update,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
Set maximum thumbnail size (h x w) to use on dataset page,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
Resize image to fit in MAX_THUMBNAIL_DIM envelope as necessary,0
Save as a jpeg to improve loading time,0
(note file extension will not match but allows for backwards compatibility),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Remove parsed arguments,0
Generate query from remaining arugments,0
for image in images:,0
image_json = query_util.fix_ids(image),0
"query = AnnotationModel.objects(image_id=image.id, deleted=False)",0
category_ids = query.distinct('category_id'),0
"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')",0
image_json['annotations'] = query.count(),0
image_json['categories'] = query_util.fix_ids(categories),0
images_json.append(image_json),0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Remove parsed arguments,0
Generate query from remaining arugments,0
for image in images:,0
image_json = query_util.fix_ids(image),0
"query = AnnotationModel.objects(image_id=image.id, deleted=False)",0
category_ids = query.distinct('category_id'),0
"categories = CategoryModel.objects(id__in=category_ids).only('name', 'color')",0
image_json['annotations'] = query.count(),0
image_json['categories'] = query_util.fix_ids(categories),0
images_json.append(image_json),0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
changing permission of folder to upload images with out sudo permissions (anyone can upload images),0
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
iterate though all categoires and upsert,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
padding = args.get('padding'),0
threshold = args.get('threshold'),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
"is_crowd = annotation.get('iscrowed', False)",0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
## File Watcher,0
Flask/Gunicorn,0
,0
LOG_LEVEL - The granularity of log output,0
,0
"A string of ""debug"", ""info"", ""warning"", ""error"", ""critical""",0
,0
WORKER_CONNECTIONS - limits the maximum number of simultaneous,0
clients that a single process can handle.,0
,0
A positive integer generally set to around 1000.,0
,0
WORKER_TIMEOUT - If a worker does not notify the master process,0
in this number of seconds it is killed and a new worker is,0
spawned to replace it.,0
,0
## Workers,0
## Dataset Options,0
## User Options,0
## Models,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
import pycocotools.mask as mask,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
"logger.debug(f""Emitting {percent} progress update for task {self.id}"")",0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Get dataset name from path,0
logger.debug(f'Generating thumbnail for {self.id}'),0
TODO: Fix why using the functions throws an error,1
"def download_images(self, keywords, limit=100):",0
task = TaskModel(,0
"name=""Downloading {} images to {} with keywords {}"".format(limit, self.name, keywords),",0
"dataset_id=self.id,",0
"group=""Downloading Images""",0
),0
"def download_images(task, dataset, keywords, limit):",0
def custom_print(string):,0
"__builtins__.print(""%f -- %s"" % (time.time(), string))",0
print = dprint,0
task.log(),0
for keyword in args['keywords']:,0
response = gid.googleimagesdownload(),0
response.download({,0
"""keywords"": keyword,",0
"""limit"": args['limit'],",0
"""output_directory"": output_dir,",0
"""no_numbering"": True,",0
"""format"": ""jpg"",",0
"""type"": ""photo"",",0
"""print_urls"": False,",0
"""print_paths"": False,",0
"""print_size"": False",0
}),0
return task,0
meta = {'allow_inheritance': True},0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
File Watcher,0
Flask instance,0
Dataset Options,0
User Options,0
Models,0
-- Contants,0
-- Private,0
-- Database,0
Absolute path to image file,0
True if the image is annotated,0
Poeple currently annotation the image,0
Users who have annotated this image,0
Amount of time spent in the annotator viewing this image,0
Get dataset name from path,0
TODO: Fix why using the functions throws an error,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
check if its a hidden file,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
check if the id exits,0
check if the name to update is the same as already stored,0
check if the name is empty,0
update name of the category,0
check if the name to update exits already in db,0
@ToDo: Is it necessary to allow equal category names among different creators?,1
it is only triggered when the name already exists and the creator is the same,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
User Options,0
Models,0
Get dataset name from path,0
TODO: Fix why using the functions throws an error,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
TODO: Fix why using the functions throws an error,1
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
TODO: Remove assoicated lines,1
We need to move the line aswell,0
If labels convert to indexs,0
Draw line if points exist,0
Order doesn't matter so can sort first,0
Cantor pairing function,0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
"print(query, flush=True)",0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
File Watcher,0
Flask instance,0
Dataset Options,0
Coco Importer Options,0
User Options,0
Get dataset name from path,0
"Type of task: Importer, Exporter, Scanner, etc.",0
: Start date of the executor,0
: End date of the executor,0
If any of the information is relevant to the task,0
it should be added,0
Send socket update every 10%,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Remove all poeple who were annotating when,0
the server shutdown,0
invalid image ID,0
Remove user from pervious room,0
Remove user from room,0
Check if thumbnails directory,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
Create any missing categories,0
Add any new categories to dataset,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
"split annotations up into batches, import them in parallel",0
update the category ids for the images,0
"split images up into batches, import them in parallel",0
process all images before moving on to annotations,0
release resources,0
Find all images,0
"is_crowd = annotation.get('iscrowed', False)",0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
category id mapping  ( file : database ),0
Create any missing categories,0
map category ids,0
update progress,0
image id mapping ( file: database ),0
Find all images,0
update progress,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Cruve,0
Point,0
Make sure shape is not all outside the image,0
len 4 means this is a line with no width; it contributes,0
"no area to the mask, and if we include it, coco will treat",0
it instead as a bbox (and throw an error),0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
Category 1 Test,0
Category 2 Test,0
Category 3 Test,0
TODO write tests for data,1
"import Home from ""@/views/Home"";",0
"mode: ""history"",",0
convert 3-digit hex to 6-digits.,0
invert color components,0
pad each with zeros and return,0
"e: { test: true, data: ""info"" }",0
Magic Wand (Fuzzy Selection Tool) for Javascript,0
,0
The MIT License (MIT),0
,0
"Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)",0
,0
"Permission is hereby granted, free of charge, to any person obtaining a copy",0
"of this software and associated documentation files (the ""Software""), to deal",0
"in the Software without restriction, including without limitation the rights",0
"to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",0
"copies of the Software, and to permit persons to whom the Software is",0
"furnished to do so, subject to the following conditions:",0
,0
The above copyright notice and this permission notice shall be included in,0
all copies or substantial portions of the Software.,0
,0
"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",0
"IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",0
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE,0
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",0
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",0
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN,0
THE SOFTWARE.,0
compare the color of the sample,0
walk to left side starting with the left neighbor,0
compare the color of the sample,0
walk to right side starting with the right neighbor,0
compare the color of the sample,0
check minmax for X,0
add two scanning lines in the opposite direction (y - dir) if necessary,0
add the scanning line in the direction (y + dir) if necessary,0
check minmax for Y if necessary,0
calc gauss weights,0
normalization weights,0
walk through all source points for blur,0
walk through x-neighbors,0
walk through y-neighbors,0
"copy visited points (only ""black"")",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (visitedData[k + 1] + visitedData[k - 1] +,0
visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +,0
visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through radius-neighbors of border points and add them to the result array,0
walk through x-neighbors,0
check the uniqueness,0
walk through y-neighbors,0
check the uniqueness,0
calc gauss weights,0
normalization weights,0
walk through all border points for blur,0
walk through x-neighbors,0
check minmax,0
walk through y-neighbors,0
check minmax,0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
walk through inner values except points on the boundary of the image,0
"check if any neighbor with a ""white"" color",0
if (data[k + 1] + data[k - 1] +,0
data[k1] + data[k1 + 1] + data[k1 - 1] +,0
data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;,0
walk through points on the boundary of the image if necessary,0
"if the ""black"" point is adjacent to the boundary of the image, it is a border point",0
"walk through inner values and copy only ""black"" points to the result mask",0
"all [dx,dy] pairs (array index is the direction)",0
5 6 7,0
4 X 0,0
3 2 1,0
"k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)",0
need contour tracing,0
bypass all the neighbors around the current point in a clockwise,0
get the next point by new direction,0
black boundary pixel,0
walk through all contours,0
contour isn't simplified,0
no intermediate points,0
calc the distance from current point to edge,0
"if the max ""deviation"" is larger than allowed then...",0
"from flask import Blueprint, render_template",0
"client = Blueprint('client', __name__, static_folder='client')",0
"client = Blueprint('client', __name__, static_folder=""../dist"", template_folder=""../dist"")",0
@client.route('/'),0
def index():,0
return render_template('index.html'),0
@client.route('/images/<int:dataset_id>'),0
@client.route('/datasets/<int:dataset_id>'),0
def index(dataset_id):,0
return render_template('images.html'),0
,0
,0
@client.route('/annotate/<int:image_id>'),0
@client.route('/editor/<int:image_id>'),0
def annotate(image_id):,0
return render_template('annotator.html'),0
,0
,0
@client.route('/datasets/'),0
def datasets():,0
return render_template('datasets.html'),0
,0
,0
@client.route('/categories/'),0
def categories():,0
return render_template('categories.html'),0
,0
,0
@client.route('/undo/'),0
def undo():,0
return render_template('undo.html'),0
Flask instance,0
Dataset Options,0
User Options,0
Check if thumbnails directory,0
Get dataset name from path,0
https://github.com/MongoEngine/mongoengine/issues/1171,0
Use this methods until a solution is found,0
map category names to ids; create as needed,0
Compute segmentation,0
"paperjs points are relative to the center, so we must shift them relative to the top left.",0
Make sure shape is not all outside the image,0
Convert into rle,0
@api.route('/<int:annotation_id>/mask'),0
class AnnotationMask(Resource):,0
"def get(self, annotation_id):",0
""""""" Returns the binary mask of an annotation """"""",0
return query_util.fix_ids(AnnotationModel.objects(id=annotation_id).first()),0
Check if dataset exists,0
Make sure folder starts with is in proper format,0
Get directory,0
Create any missing categories,0
Add any new categories to dataset,0
Find all images,0
Generate annotations,0
Check if annotation already exists,0
Create annotation,0
annotation.iscrowd = is_crowd,0
Create /api/ space,0
Remove default namespace,0
Setup API namespaces,0
Check if current user can access dataset,0
Iterate every category passed in the data,0
Find corresponding category object in the database,0
Iterate every annotation from the data annotations,0
Find corresponding annotation object in database,0
"Paperjs objects are complex, so they will not always be passed. Therefor we update",0
"the annotation twice, checking if the paperjs exists.",0
Update annotation in database,0
Update paperjs if it exists,0
Generate coco formatted segmentation data,0
Get next and previous image,0
Generate data about the image to return to client,0
