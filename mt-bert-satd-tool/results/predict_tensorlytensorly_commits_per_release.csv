Commit Message,predict
"Update deploy_pypi.yml

Update to recommended best practices from https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/",0
FIX deploy_pypi.yml,0
Bump version for release,0
"Merge pull request #564 from tensorly/cleanup-pf2-tolerances

Remove absolute tolerance and make relative tolerance for convergence check consistent with PARAFAC.",0
"Merge pull request #569 from cohenjer/tl_solvers

moving solvers related code to solvers/* directory, improving fista and nnls_hals (reopened)",0
correct missing double escape characters,0
Fixing documentation,0
Merge branch 'main' into tl_solvers,0
"Upgrade Python versions to 3.9â€“3.13 (#576)

* Upgrade python versions

* pyupgrade recommendations

* Stick with py 3.12 for now

* py 3.13 is now out",0
black linting,0
Merge branch 'main' into tl_solvers,0
Moving proximal operators back to tenalg,0
"Merge pull request #575 from characat0/patch-2

Add dummy keyword arguments to Backend svd to throw a more informative error",0
Update Gtihub action badge to point to main branch,0
"Merge pull request #574 from characat0/patch-1

Fix f-string In backend error message",0
Take absolute value of error difference,0
"[Paddle] Update index.html and pyramid png (#573)

* update Paddle backend in index.html

* update pyramid png

* remove redundant whitespaces

* simplify  paddle url to be consistent with other tools",0
Update core.py,0
Update __init__.py,0
Update __init__.py,0
Update __init__.py,0
adding __init__.py to solvers,0
"Virtually all tests working across backends (#572)

It turns out that we weren't fully using the experimental NumPy interface within Tensorflow. With that enabled, and a couple other minor changes, virtually all the tests can be enabled across backends. As far as I can tell, the JAX and CuPy tests that were skipped already worked.

test_tensor_train_cross_3() still doesn't work, but I believe it is a problem with the method. A tensor is being indexed with an empty mask.

active_set_nnls() also still doesn't work. I think this is an issue with our approach for enabling item assignment. It looks like the X.assign() approach is deprecated, and we should be doing something with ""gather"" methods.",1
Merge branch 'main' into cleanup-pf2-tolerances,0
"Merge pull request #565 from HydrogenSulfate/add_paddle_backend

[Paddle] Add paddle backend",0
Fix typing for older Python,0
Add typing to parafac2(),0
remove extra preprocessing of 'sum' and remove 'max' to registering code,0
use stable release version instead of develop version,0
simplify paddle backend code,0
manually install setuptools after paddle installation,0
remove 'python -m' for tidy code,0
add paddle test config in test.yml,0
merge backend test code into original function and remove useless regression paddle test,0
remove redundant printing code,0
remove redundant printing code,0
fix lstsq behavior and remove the last skip_paddle,0
delete doc/sphinx_ext,0
"set default place to cpu and fix index_update code

Signed-off-by: HydrogenSulfate <490868991@qq.com>",0
Merge branch 'main' into add_paddle_backend,0
"Merge pull request #567 from meyer-lab/always-build-docs

Fix the documentation building and remove the last reference to mxnet.",0
reverting revert of #566,0
spelling correction from @aarmey,0
Merge branch 'main' into tl_solvers,0
removing tenalg/proximal.py,0
Merge branch 'tl_solvers' of github.com:cohenjer/tensorly into tl_solvers,0
"Removing proximal.py file, moved to solvers/*",0
"Merge pull request #568 from tensorly/revert-550-tl_solvers

Revert ""moving solvers related code to solvers/* directory, improving fista and nnls_hals""",0
"Revert ""moving solvers related code to solvers/* directory, improving fista and nnls_hals""",0
update skip_paddle,0
Merge branch 'main' into add_paddle_backend,0
assure assign value is contiguous tensor in index_update,0
"Remove mxnet, linting",0
Remove numpydoc code,0
Remove code included of sphinx-gallery,0
Resolve invalid escape sequence warning,0
Upgrade matplotlib,0
Pin NumPy version to before 2.0,0
"Switch docs building to always, upgrade Python",0
"Merge pull request #550 from cohenjer/tl_solvers

moving solvers related code to solvers/* directory, improving fista and nnls_hals",0
Spelling correction.,0
"Add checks for data structure and rank feasibility in PARAFAC2

Fixes #528 (#566)",0
add paddle in related documents,0
changes of the rest of files by black,0
support paddle backend in tensorly,0
Merge branch 'main' into cleanup-pf2-tolerances,0
Remove abs_tol argument in Pf2,0
correct bug in tensorflow solve,0
black linting,0
adding context to diag tensor in smooth prox,0
adding runtime error if constraint does not match,0
black linting,0
correcting type error in smoothness test,0
Merge branch 'main' into tl_solvers,0
"Merge pull request #252 from merajhashemi/mh-reg

Support multi-dimensional output for CP regression",0
Replace numpy methods with Tensorly equivalent,0
Remove python_version from requirements.txt,0
Update test,0
Apply black,0
"Merge remote-tracking branch 'upstream/main' into mh-reg

# Conflicts:
#	tensorly/regression/cp_regression.py",0
"Revert ""Update cp_regression.py""

This reverts commit 2dcee4036dca09274f3fb1d1fdd4de079995378d.",0
Merge branch 'main' into tl_solvers,0
correcting bug,0
black linting,0
updating 0 to 0.0,0
adding test description for test_penalizations,0
Adding description to tests for nnls solvers,0
rework validate_constraints,0
adding admm test description,0
"Merge pull request #551 from cohenjer/normalize_tucker

add normalization method to tucker_tensor class (similar to cp_tensor)",0
typo correction in docstring,0
black linting,0
removing superflu code for sparsity and ridge preprocessing,0
updating documentation,0
add normalization method to tucker_tensor class (similar to cp_tensor),0
black linting and more int to float conversion,0
changing int arrays to floats in proximal tests for Tensorflow,0
"Merge pull request #549 from tensorly/kr-speed

Provide faster implementation of the MTTKRP
Update Github actions to avoid Node.js deprecation",0
black linting one more file,0
black linting,0
correcting nnls call to match new output signature,0
Fix formatting with current black version,0
Upgrade Github actions runners,0
removing tests for tenalg/proximal,0
"Mark test failure, black format",0
adding back tenalg/proximal for easier code review,0
moving solvers related code to solver/ directory and updating imports,0
Clean up test_cp_vonneumann_entropy_mixed_state(),0
Provide faster implementation of kr,0
"Merge pull request #538 from braun-steven/main

Fix torch tensor creation to preserve dtype and device.",0
"Update test_proximal.py

Making a trivial change to rebuild the tests.",0
"Merge pull request #548 from FBen3/add_missing_makefile_targets

Add missing targets to .PHONY directive",0
Add missing targets to .PHONY directive,0
"Merge pull request #511 from OsmanMalik/master

Add randomized sampling-based ALS method for tensor ring decomposition",0
"Start testing Python 3.12 and resolve JAX deprecation (#540)

* Upgrade python

* Update test.yml

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
Apply updated black,0
Merge branch 'tensorly:main' into master,0
"Split TR files based on main algorithm

Split TR decomposition and testing files based on type of algorithm (SVD or ALS).",0
"Simplify proximal operator code (#534)

Loops could be removed through vectorized indexing. Also, no need to keep track of the passive and active indices because these are complementary.",0
"Merge pull request #533 from meyer-lab/rm-mxnet

Remove mxnet entirely, as the project has been halted and archived.",0
"Merge pull request #539 from meyer-lab/cross-product

Avoid large concatenation within PARAFAC2 upon SVD initialization",0
Add information about cross-product to the docstring,0
Fix bug with handling of function output,0
Merge branch 'tensorly:main' into master,0
Simplify torch tensor creation,0
Remove unnecessary torch.tensor call,0
"Merge pull request #535 from meyer-lab/fix-pf2

Small fixes in NN PARAFAC/PARAFAC2",0
"Add max rank argument to svd_compress_tensor_slices (#536)

* Add max rank argument

* Fix variable typo",0
Fix failing test cases,0
Format tensorflow_backend.py,0
Make dtype tensor init test for all backends,0
"Fix TF dtype/device tensor init

See also: #537",0
"Fix missing tensor contexts

See also: #538",0
"Add torch tests for tensor init dtype fix

See also: #538",0
Looser tolerance for PyTorch,0
Done,0
Fix tests that previously assumed float32,0
Merge branch 'main' of github.com:braun-steven/tensorly,0
"Fix torch tensor creation dtype/device

The previous implementation simply took the input data and forced it to
be on the given device (`cpu` default) with the given dtype (`float32`
default).

This lead to `tl.tensor(torch.zeros(1, device=""cuda:0""))` creating a
float32 tensor on `cpu` while the expected behavior should be an
int32 tensor on `cuda:0`.

Resolves: #537",0
"Fix torch tensor creation dtype/device

The previous implementation simply took the input data and forced it to
be on the given device (`cpu` default) with the given dtype (`float32`
default).

This lead to `tl.tensor(torch.zeros(1, device=""cuda:0""))` creating a
float32 tensor on `cpu` while the expected behavior should be an
int32 tensor on `cuda:0`.

Resolves: #537",0
Fix context handling,0
Fix pf2 initialization,0
"Merge pull request #532 from meyer-lab/backend-deps

Fully deprecate mxnet",0
Remove mxnet,0
Deprecate mxnet,0
"Merge pull request #525 from meyer-lab/pf2-linesearch

Bro's line search for PARAFAC2",0
Fix black formatting,0
Fix _BroThesisLineSearch import,0
Last edits,0
"Update tensorly/decomposition/_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
"Update tensorly/decomposition/tests/test_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Add second docstring,0
Black formatting,0
Add first docstring,0
Merge branch 'main' into pf2-linesearch,0
"Apply Marie's suggestions

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
"Merge pull request #530 from MarieRoald/parafac2-compression

SVD compression of PARAFAC2",0
"Add SVD compression for PARAFAC2

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
"Fix typo and improve test parametrisation

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
Basic structure for separating line search,0
"Update tensorly/decomposition/_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Fixes based on MarieRoald review,0
"Merge pull request #517 from meyer-lab/fix-nnsvd-returns

Also provide H back from make_svd_non_negative()",0
Fix mxnet context of S,0
Fix and test svd shapes,0
Fix typo in error comparison,0
Fix that we need to reproject within the line search,0
Implemented,0
"Merge pull request #524 from meyer-lab/pf2-avoid-reproject

PARAFAC2: Avoid reprojection of X during the error calculation",0
Add test of function computing leverage scores,0
"Move function for calculating leverage scores

Also:
- Rename function for calculating leverage scores.
- Add reference to paper on leverage scores.
- Fix bug in how num_rank is computed.",0
Avoid reprojection of X during error calculation,0
"Merge pull request #505 from JeanKossaifi/main

Default on math.pi",0
"Merge pull request #519 from hello-fri-end/fixInitializeTucker

Fix initialize_tucker",0
Fixed linting errors with black,0
"Merge pull request #514 from SauravMaheshkar/saurav/ci-pip-cache

Doc: adds `pip` caching to CI",0
Merge branch 'main' into saurav/ci-pip-cache,0
"refactor(ci): organise pip cache

Signed-off-by: Saurav Maheshkar <sauravvmaheshkar@gmail.com>",0
fixed the shape of core and factors when init==random in intialize_tucker and updated the test of partial_tucker to pass init==random when testting randomstate,0
"Merge pull request #513 from meyer-lab/fix-exports-plsr-perf

Miscellaneous housekeeping improvements",0
Break out return values,0
Also provide H back,0
feat: add pip caching to CI,0
Fix YAML,0
Upgrade to Python 3.10 by default,0
Other fixes,0
Loosen tensor-train assertion,0
"Merge pull request #508 from Kiord/main

Documentation update for svd missing values imputation",0
"Add option for uniform sampling

New parameter allows for uniform sampling to be used instead of leverage score sampling.",0
"Add randomized tensor ring decomposition

Add the randomized sampling-based ALS method for tensor ring decomposition proposed in O. A. Malik, S. Becker, ""A Sampling-Based Method for Tensor Ring Decomposition"", Proceedings of the 38th International Conference on Machine Learning (ICML), PMLR 139:7400-7411, 2021.",0
typo,0
"Documentation cues for imputation with svd, and added a condition to perform matrix masking",0
Fix CMTF test,0
Fix black linting,0
Fix occasional torch error,0
Black lint,0
Testing adjustments,0
Black formatting,0
Fix pytorch,0
Fix Jax,0
"PLSR much faster, and pass-through of lstsq",0
Fix exports and improve PLSR performance,0
"Fixed svd_flip() when used on GPU w/ PyTorch backend (#504)

* 503: Fixed svd_flip() when used on GPU w/ PyTorch backend

* Update svd.py

Added context instead of just device

---------

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Use math.pi by default,0
Cosmetic,0
"Merge pull request #501 from OsmanMalik/master

Add ALS-based method for tensor ring decomposition",0
Modify code to use matricize,0
"More efficient error calculation in PARAFAC2 through inner product (#502)

* More efficient error calculation

* Fix transpose

* Fix test

* Black formatting

* Add docstring

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
"Add ALS-based method for tensor ring decomposition

- Add function for tensor ring decomposition via ALS

- Add class wrapper for said function

- Add tests for new functionality",0
Update setup to distribute data,0
"Move choices about Khatri-Rao to tenalg backend (#495)

* Removing kr() from backends

* Black formatting

* Fix jax

* Rework based on feedback

* Remove unused

* Remove unused

* Various last edits

* Grammar fix

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
"Remove padding in Pf2 (#496)

* Avoid padding in parafac2

* Fix typing if tensor is passed to Pf2

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
Fix typos in documentation,0
"Merge pull request #494 from meyer-lab/depracations

Add mxnet warning and remove old deprecations",0
"Fix CP Partial Least Square (#492)

* Amendment in the functions

* Add more tests

* Black formatting

* Skip transform test on tensorflow

* Some changes for the review

* Adjustments to help with solving speed

* Separate R2 score; make X_r2 and Y_r2 as new attributes

* Avoid creating CPTensor() overhead; remove redundant reshape

* Update tensorly/metrics/tests/test_regression.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>

* Incorporate outer, fix randn call

* More tl.tenalg.outer; used mean-centered tensor

* Some fixes on R2 definitions

* Make a dedicated score function to avoid copying X and Y

* Black formatting

---------

Co-authored-by: Aaron Meyer <ameyer@ucla.edu>
Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix a couple stray references,0
Remove tensor train deprecations,0
Adjust wording of mxnet warning.,0
Merge branch 'main' into depracations,0
"Merge pull request #491 from braun-steven/feature/logsumexp

Add logsumexp function",0
Bump version,0
"Merge pull request #489 from cohenjer/hotfix_permute_factors

Hotfix permute factors",0
Deprecate mxnet and tensorflow,0
Update black formatting based on latest version of the linter (#493),0
Setup depracation,0
black lint,0
logsumexp: Format logsumexp functions with black,0
logsumexp: Update docstring,0
"Add logsumexp function

This adds the logsumexp function using the logsumexp trick which is the
numerical stable version of applying `log(sum(exp(x)))`. I chose to
default to the backend implementation if available (pytorch,
numpy/scipy, tensorflow, jax) and implemented the numerical stable
computation of `log(sum(exp(x)))` when the backend did not provide a
logsumexp function (mxnet, cupy).

Additionally, I've added a unit test that checks against the numpy/scipy
baseline with some 3d data tensor over all axis.",0
Fixing tests inputs congruence coefficient,0
more black linting,0
black reformatting,0
removing commented lines,0
fix cp_permute_factors() #487,0
"Merge pull request #485 from meyer-lab/test-einsum

Fix einsum backend and run full test suite against it",0
Update cp_regression.py,0
Merge branch 'main' into mh-reg,0
"Fix factor conjugate, weights=None case",0
Add testing for einsum backend,0
"Fix for f-strings and test compatibility with python 3.7, 3.9 and 3.10 (#482)

Removes f-string syntax that is not supported in Python 3.7. To prevent incompatibilities in the future, the tests (with Numpy backend) are now run on several of the supported Python versions.

Fixes #479 and #473.",0
"Merge pull request #480 from cohenjer/fetch_kinetic

Fetch kinetic",0
Updating docstring and api refs,0
black linting and ticks update,0
Merge branch 'main' into fetch_kinetic,0
adding Kinetic data locally,0
"Moderately speeds up and adds testing for CP, PARAFAC2, and Tucker (#478)

* Test adjustments

* Fix

* Remove index_update from parafac2

* Consolidate CP tests

* Fix torch

* Black formatting

* Add durations to testing output

* More adjustments to speed up parafac2 test times

* Fix test random states

* Fix merge conflicts

* Small fixes

* Small fixes

* Update Github actions

* Fix occasional TTOI error

* Fix mxnet test

* Fix PARAFAC2 normalize factors

* Fixes and black formatting

Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Satisfy linter,0
Temporarily disable Kinetic db test,0
"Merge pull request #472 from cohenjer/correct_indian_pines

Adding indian pines locally and updating loader",0
"Merge pull request #474 from meyer-lab/simplify-parafac2

Remove in-place projection operations in PARAFAC2",0
Changing data from .mat to .npy,0
A little more simplification,0
Remove indexing,0
black linter,0
correcting tests,0
adding indian pines locally and updating loader,0
Update tensorly overview,0
DOC: fix theme link,0
DOC: document backend static and dynamical dispatching,0
Improve doc,0
Use git version of the theme,0
DOC: Revert logo change,0
Try fixing website logo,0
DOC: revert last conf change,0
DOC: remove permalinks,0
Doc: Add SVD interface to API,0
Adds CP-PLSR to API + docstring fix,0
Add corr-index to API,0
Randomized parafac: no verbosity by default,0
Adds cuQuantum pluging,0
Einsum plugin: only reset if not None,0
Update conf for latest theme version,0
Update cite,0
Adds cff citation,0
DOC: clearer API,0
Covid example: Valid REST links,0
Black linting,0
Improve TT-OI and add to API,0
CP: improve doc,0
Add reference for opt-einsum,0
Website: add dropdown,0
TT-TTOI test: increase tolerance,0
FIX Black linting,0
FIX test_tt_TTOI for MXNet,0
DOC: update to maintained jsmin,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
CP: fix undefined unnorml_rec_error,0
FIX test for MXNet,0
CI FIX,0
"CI MXNet test: revert numpy

Identified the issue - MXNet isn't updated to support latest version of NumPy that deprecated np.bool -- reverting to previous one (1.23.1)",0
CI MXNet test: revert to 1.8,0
CI test MXNet: trying to fix,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX validate_tucker_tensor,1
"Merge pull request #434 from MarieRoald/backend_specific

Decorator for backend specific implementations",0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Update setup files,0
bump version + import submodules,0
"Merge pull request #411 from Lili-Zheng-stat/updated_main

Add TTOI functions",0
Fix for bool value in svd,0
Merge branch 'main' of https://github.com/tensorly/tensorly into updated_main,0
"Merge pull request #467 from johnthagen/patch-1

Use a secure link to tensorly.org",0
"Merge pull request #462 from JeanKossaifi/opt-einsum-plugin

Adds opt-einsum path caching plugin",0
FIX sparse backend version check,0
Black formatting,0
Adds documentation for the plugins,0
Use a secure link to tensorly.org,0
Deprecated distutils.LooseVersion -> packaging.version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into opt-einsum-plugin,0
"Merge pull request #466 from JeanKossaifi/indian_pines

Temporarily skip indian_pines test",0
Keep track of original einsum fun,0
Temporarily skip indian_pines test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Bump Python version in tests,0
"Move to f-strings formatting (#464)

* fix: change str.format() to f-strings

* fix: change regular string into f-strings

* fix: indicate minimum supported Python (because of f-strings)

* fix: change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo, change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: change to support Python 3.7

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Update tensorly/contrib/decomposition/_tt_cross.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Black formatting

* More black formatting and fixes

Co-authored-by: Alexander Bakhtin <alexander.bakhtin@tuni.fi>
Co-authored-by: bakhtos <68953985+bakhtos@users.noreply.github.com>
Co-authored-by: Marie Roald <roald.marie@gmail.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>
Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Black fixes,0
Add tests for 4th order tensor,0
Black linting,0
Adds opt-einsum path caching plugin,0
FIX cp_norm: preserve context,0
"Refactors mttkrp

Move unfolding_dot_khatri_rao to tenalg, add einsum version",0
reformat using black,0
Delete unnecessary tl.tensor wrapper as suggested by @merajhashemi,0
Change the n_iter parameter to make it the exact number of iterations instead of half the number of iterations,0
"Merge remote-tracking branch 'upstream/main' into updated_main
Merge the updates from tensorly since the svd_interface is in need for the current tensor-train-OI code",0
Make stylistic changes suggested by @JeanKossaifi,0
Make stylistic changes suggested by @cohenjer,0
"Merge pull request #456 from JeanKossaifi/tt-rank-errors

Tt rank errors",0
"Merge pull request #455 from JeanKossaifi/partial_svd_error

Raise error for users trying to use tl.partial_svd.",0
"Merge pull request #454 from JeanKossaifi/tt_svd

TT improvements + doc",0
FIX errors for TT-rank checks,0
Raise error for users trying to use tl.partial_svd.,0
Adds tensor-ring/train/matrix to the doc,0
Adds TensorTrainRing class,0
"Merge pull request #453 from JeanKossaifi/tt_svd

Adds svd interface to TT and TR, as well as TensorRing class",0
Adds svd option to TTM,0
Formatting,0
Adds TensorRing class,0
Adds svd option to tensor-ring decomposition,0
Adds svd option to TT,0
"FIX: typo, forgotten argument in signature",0
FIX: Black linting,0
Adds option to return the reconstruction errors,0
"Merge pull request #417 from aarmey/callback

Callback interface for CP decomposition",0
"Merge pull request #450 from tensorly/fix-docs

Fix the documentation build by pinning the matplotlib version",0
Update requirements_doc.txt,0
"Merge pull request #435 from meyer-lab/plsr

Adding an implementation of tensor PLS.",0
Reformat for black,0
Formatting code using black,0
test_decomposition_accuracy fix,0
More reasonable conditions for test_optimized_covariance,0
"Reduce test runs, add 2-mode",0
Added docstrings to CP_PLSR tests,0
Add gamma / digamma to backend imports,0
Change naming: x_rank into n_modes in test,0
Fix tests for all backends,0
Use randomized SVD which will always be much faster,0
Change CP solving function; add test on covariance (corrcoef)),0
Fix test for optimized covariance,0
Added optimized covariance test,0
Change Z solving to parafac,0
Change from calling function partial_svd to calling svd_interface,0
Update test_cp_plsr.py,0
"Merge pull request #445 from ssnio/patch-1

Doc fix typo in tensor_basics.rst",0
"Doc fix typo in tensor_basics.rst

Correcting a typo in unfolding size",0
"Merge pull request #437 from caglayantuna/warning_when_fixing_last_mode

Warning when fixing last mode",0
Fix a bug due to changing a variable name in the sequential_prod function.,0
Made stylic changes,0
Fix bugs for rank larger than 1,0
Black formatting,0
Small fix on T.ndim,0
Use partial tucker for HOOI implementation,0
Black formatting,0
Add some more documentation,0
"Update tensorly/decomposition/_tucker.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix other backends,0
Black formatting,0
Remove tucker from iteration initialization,0
Merge branch 'tensorly:main' into plsr,0
"Added CP PLSR tests
 - Adds tests for class function, dimension compatibility,
 decomposition accuracy, and factor properties",0
CP: Avoid creating large Id mat if not needed,0
add fixed modes test for tucker hals,0
adds warning when fixing last mode,0
Some renaming on variables re Marie,0
"Improve readability based on Marie's review

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Remove the last pinv,0
Fix issues from other backends,0
Remove pinv from backend,0
Some testing adjustment and cleanup,0
Use tensordot for readability. Black format.,0
Fix indexing assignment problem,0
Use lstsq() instead of pinv(); use f-string; remove tile(),0
"Decorator for backend specific implementations

Made in collaboration with: Yngve Mardal Moe",0
Remove uneeded exports,0
Remove unneeded backend functions. Add indexing example.,0
Black formatting,0
Make rec_error an argument to the callback,0
Extend callback for sparsity case,0
Add callback to random CP. Fix tests.,0
Update proposed implementation,0
Merge branch 'main' into callback,0
FIX nn_init with new interface,0
Docstring: fix sphinx doc,0
Typo: fix title underline too short.,0
"Merge pull request #429 from aarmey/svd

Move SVD to a common frontend interface",0
Last adjustments,0
Adjust arguments based on review,0
"Rename svd_type to method.

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Add tPLS predict() and transform(),0
Put back sparse SVD,0
Add callable option to svd_funs and resolve issue with torch sign,0
Black linting,0
Add wrapper functions for a versions of arc functions,0
Merge branch 'tensorly:main' into svd,0
"Merge pull request #423 from aarmey/complex-test

Add testing for complex values in CP",0
Merge branch 'main' into complex-test,0
Merge branch 'main' into plsr,0
First try on tensor PLSR fit() function; some addition to backend,0
"Merge pull request #425 from aarmey/fix-mxnet

Fix mxnet testing",0
Add back last testing skip,0
Revert the test changes,0
"Revert ""Try another incantation of mxnet""

This reverts commit f8df1ea4552f5ad5038709a44a6693bf6e8312ba.",0
Merge in revert,0
Remove last test skips,0
Update test_tt_tensor.py,0
Try another incantation of mxnet,0
Last documentation,0
Documentation for svd_checks return value,0
Skip tensorflow and mxnet complex cases,0
Black linting,0
Try to fix tensorflow type promotion,0
"PEP8

Better luck this time.",0
Greatly speed up Jax/tensorflow tests,0
PEP8 (black),0
Linting,0
Fix occasional tolerance issue,0
Fix fixed mode tests,0
Fix torch issue with lists,0
Black linting,0
Found the last missing conj,0
Cleaner test code. Add MTTKRP * tl.conj(f),0
"Update tensorly/cp_tensor.py

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
More serious issue with mttkrp,0
"Merge pull request #424 from aarmey/better-cmtf-init

Better initialization of CMTF ALS",0
Update contributing.rst,0
More cleanup around SVD use,0
Solve circular import,0
Linting,0
More consistent Tucker init,0
More unification across backends,0
More backend cleanup,0
More cleanup,0
More cleanup,0
Remove redundant option,0
Move to only using backend functions with svd,0
Working,0
Refactor SVD to frontend,0
Black formatting,0
Setup basic files,0
Update base.py,0
Hack to test complex numbers,1
Merge branch 'main' into complex-test,0
Cosmetic: PEP8,0
Merge branch 'main' into callback,0
Merge branch 'main' into better-cmtf-init,0
Merge branch 'main' into fix-mxnet,0
"Merge pull request #401 from j6k4m8/apply-black-style

Apply black-style formatting to repository",0
Only run black on tensorly dir,0
Run black on tensorly directory,0
Update documentation,0
Try again,0
Pin to 2.0 but old version,0
Fix type error,0
Update test.yml,0
Better initialization of CMTF ALS,0
Add testing for complex values in CP,0
"Merge pull request #298 from maximeguillaud/master

Make parafac() robust to complex tensors",0
Fixed backend import name,0
Update cp_tensor.py,0
"Merge pull request #420 from MarieRoald/new_test_utils

Add assert allclose and tests for test utils",0
FIX: gamma distribution,0
"Merge pull request #421 from caglayantuna/fix_svd_test

change decimal for randomized_svd",0
Updated signature and added docstring,0
"Merge pull request #407 from aarmey/numpy-tf

Moves tf to the numpy interface",0
More correct type promotion,0
Fixes for edge cases in types,0
change decimal for randomized_svd,0
Fix from merge,0
Merge branch 'main' into numpy-tf,0
Merge branch 'main' into callback,0
FIX cupy backend ( gammad-> digamma),0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
"Merge pull request #419 from aarmey/rm-descending

Remove descending argument in sorting functions",0
Made tests pass with single precision,0
Add assert allclose and tests for test utils,0
"Merge pull request #418 from caglayantuna/reorder_partial_tucker

reorder modes and ranks in partial_tucker",0
Remove descending argument,0
reorder modes and ranks in partial_tucker,0
_validate_cp_tensor now supports 1D factors properly,0
"Merge pull request #371 from aarmey/more-cp-testing

Test for reproducibility of CP",0
Fix,0
Initial draft of a callback function,0
"Merge pull request #415 from Mahmood-Hussain/main

removed numpy copy bug",0
"Merge pull request #404 from caglayantuna/permute_factors_api

Permute factors api",0
"Merge pull request #408 from caglayantuna/add_new_dataset

Adds 2 new dataset",0
tl.tensor and fetch,0
change requests to urllib,0
load_Il2data in example,0
add wavelengths for indian pines,0
change to load_IL2,0
improve dataset information and init,0
add_2_dataset,0
"Merge pull request #406 from aarmey/fix-permute

Tensor permutation fix for Jax",0
removed numpy copy bug,0
remove redundant import,0
"Update plot_permute_factors.py

A few comments improvements",0
adds permute factors example,0
remove unused rank and improve api,0
Remove Seaborn,0
Small Fix,0
Remove Pandas Dependency,0
workflow test.yml: adds mxnet dependency,0
"test workflow: switching to MXNet 2.0

The mxnet.np interface is too partial in MXNet 1.X, switching to beta version of MXNet 2.0.",0
Add TTOI functions,0
Moves tf to the numpy interface,0
Tensor permutation fix for Jax,0
"Merge pull request #362 from borcuttjahns/IL2_Example_Script

Added IL2 PARAFAC Analysis Example Script",0
Update Makefile,0
Move IL2 Example,0
adds constrainedcp to doc,0
ConstrainedCP to init,0
add test for constrained cp class,0
add class,0
adds return errors to tucker,0
adds cp permute factors,0
FIX jax copy method,0
FIX: JAX backend,0
"Merge pull request #400 from j6k4m8/add-black-ci

Add black code style and linting to CI",0
Add constant properties for tf compat,0
Fix tensorflow function names,1
Resolve constants to numpy in tensorflow,0
Remove alias trig functions from mxnet and jax,0
Remove alias trig methods from numpy altogether,0
Remove alias functions for arc-trig fns from numpy,0
Add trig functions and constants to backendmanagtr,0
Add trig functions to core,0
Add trig fns and constants to backend exports,0
Add trig functions to backends,0
Fix black flags,0
Fix branch name in CI,0
Add linting CI,0
Merge branch 'tensorly:main' into main,0
Add exp and log to backend exports,0
Add exp and log to backend exports,0
default axis for tensorflow concatenate,0
PyTorch backend: fix tensordot args,0
Updated for Sphinx,0
"Drop nosetests

It was added as numpy.testing required nose [1], which is no longer the
case for numpy >= 1.15 [2] from 2018 [3].

Testing:
* nosetests fails as some testing code uses pytest-specific features
  (ex: @pytest.mark.parametrize in several files)
* `cd doc && make html` still works fine

[1] https://github.com/tensorly/tensorly/issues/48
[2] https://numpy.org/devdocs/release/1.15.0-notes.html
[3] https://pypi.org/project/numpy/#history",0
fix typo in the doc,0
"indices list doc

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
improve docstring,0
user defined indices list for sample kr,0
fix normalized sparsity test,0
Adds gamma random generator,0
pad_tt_rank: make compatible with tt-matrices,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX pad_tt_rank (indexing),0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
Fix tests,0
Fix Imports Name,0
Big Changes,0
Changes,0
Implemented multiple methods to compute the correlation index,0
Now works for all backends,0
Update similarity.py,0
"merge into one function, pep8 formatting and tl backend compatibility",0
tests for calc_corrindex,0
use tensorly operations instead of numpy,0
CorrIndex implementation for comparing decomposition outputs,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Adds doc for example + fix covid example,0
"Merge pull request #379 from caglayantuna/sparse_robust_pca_issue

Clip function to sparse backend with a_max=None",0
"Merge pull request #381 from caglayantuna/add_log

Adds log function to tensorly",0
add log function to tensorly,0
clip to sparse with amax=None,0
"Merge pull request #378 from JeanKossaifi/main

Adds digamma fun to backend",0
Adds digamma fun to backend,0
"Merge pull request #377 from JeanKossaifi/main

Adds exp to the backend",0
Adds exp to the backend,0
"Merge pull request #361 from cyrillustan/covid_notebook

Add Covid example notebook",0
Merge branch 'tensorly:main' into covid_notebook,0
"Merge pull request #359 from cyrillustan/covid_example

Import COVID-19 systems serology example dataset",0
Minor changes on adding more explanatory texts,0
Merge branch 'covid_example' into covid_notebook,0
Adjust the name in data import testing accordingly,0
"Some changes on importing data, more DESC",0
Merge branch 'covid_example' into covid_notebook,0
Change function name and expand DESC,0
Remove ROC curve; plot everything in matplotlib,0
Changes addressing Jean's comments,0
"Merge pull request #355 from MarieRoald/fix_clip

Fix bug with `tl.clip` for the PyTorch and TensorFlow backends",0
"Merge pull request #356 from MarieRoald/pytorch_sum_keepdims

Add `keepdims` to `tl.sum` with the PyTorch backend",0
"Merge pull request #357 from MarieRoald/pytorch_shape_as_tuple

Make `tl.shape` return tuple for PyTorch backend",0
"Merge pull request #363 from caglayantuna/fix_simplex

simplex projection issue",0
"Merge pull request #367 from caglayantuna/tucker_copy

copy tucker tensor",0
Raise tolerance for float32,0
Unreasonable to expect reproducible SVD,0
Remove change,0
Remove init testing,0
Fixed testing error. Narrowed problem to SVD.,0
Test for reproducibility of factorization,0
Change the structure of Bunch in example accordingly,0
Merge branch 'covid_example' into covid_notebook,0
Change how Bunch object is structured,0
copy tucker tensor,0
fix constrained parafac simplex test,0
Fix Imports Test,0
Address Comments,0
fix casting to int,0
fix simplex prox,0
"Merge pull request #366 from JeanKossaifi/main

Adds matricize function",0
Adds matricize function,0
MXNet backend fix,0
Backend: accept device in tensor,0
Added Example Script,0
Add COVID example notebook,0
Import COVID-19 systems serology example dataset,0
Fixed so shape returns tuple,0
Added test to check if shape returns tuple,0
Add keepdims argument to sum with pytorch backend,0
Added tests for sum function,0
Converted clip limits to single precision,0
Fixed clip bug in tensorflow backend,0
Fixed clip bug in pytorch backend,0
Added regression test for bug with clip,0
Extended test_clip,0
"Merge pull request #348 from borcuttjahns/main

Adds IL-2 stimulation dataset",0
Added license to Bunch,0
"Add docstring, and .DESC to data",0
Added a test,0
"Add metadata, bunch function",0
"Relocate data, remove example for now",0
"Merge pull request #347 from caglayantuna/constrained_cp_gallery

Constrained parafac example and improved docstrings",0
Initial edits,0
"Merge pull request #1 from borcuttjahns/IL2_Example_Notebook

Add IL-2 NN PARAFAC Notebook",0
Add IL-2 NN PARAFAC Notebook,0
"imroves constrained_parafac docs and adds example

improve example and api docs

improve the example

imrove example

fix

improve texts",0
"Merge pull request #345 from caglayantuna/nn_tucker_hals_class_doc

nn_tucker hals class, doc, api improvements",0
"Merge pull request #340 from caglayantuna/tensorflow_cast

fix tensorflow dtype issue",0
"nn_tucker hals class, doc, api improvements

update doc

fix indents

edit doc",0
fix tensorflow dtype issue,1
"Merge pull request #344 from MarieRoald/nn_parafac_seed

Adds random_state for non negative PARAFAC HALS",0
Fixed repeating argument due to merge,0
Merge branch 'main' into nn_parafac_seed,0
"Merge pull request #281 from caglayantuna/normalization

Better CP normalisation",0
Updated docstring,0
Added random state for NN PARAFAC HALS,0
"Merge pull request #324 from caglayantuna/copy_cptensor

Adds a `copy` method to CPTensor",0
"copy cptensor

naming cp_copy and adding test for it

copy each factor

remove import copy

new",0
"Merge pull request #339 from caglayantuna/nn_hals_issue

Solves hals rec_error0 issue #338  + pep8 improvements",0
solves hals rec-error0 issue and does some pep improvements,0
normalize inner loop and test normalize,0
hals class normalization,0
fix hals normalization,0
fix normalization,0
Bump version,0
FIX MXNet tests,0
FIX test_tt_matrix test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Fix MXNet test,0
"Merge pull request #334 from caglayantuna/nn_examples

non-negative hals examples",0
"Improved documentation, adds contrained_cp",0
FIX MXNet (no support transpose >6th order tensors),0
"Backend: import count_nonzero, flip and argsort",0
"Merge pull request #284 from caglayantuna/ADMM

Adds constrained parafac",0
"Merge pull request #330 from JeanKossaifi/new2

Backend and tenalg backend refactoring -use a BackendManager class and use it directly as tensorly.backend's Module class",0
FIX tensorflow backend,1
"Adding check for all modes fixed case and if true then to just return the initialization (#325)

* Adding check for all modes fixed case and if true then to just return initialization in CP decomposition - part of issue 292

* Adding check for all modes fixed case and if true then to just return the initialization

Co-authored-by: Parvathy <Parvathy>",0
"Rewrote vonneumann_entropy to handle multidimensional tensors. (#270)

Co-authored-by: tpatti <tpatti@nvidia.com>",0
remove numpy from monotoincity,0
onneagative hals examples,0
improve smoothness test,0
simplex names,0
"better names, optimized functions and argsort",0
Better tt_matrix_to_tensor,0
Tenalg: update manager + add einsum HOM,0
Missing base_tenalg,0
Adds TenalgBackendManager,0
raise value error when validating constraints,0
validate constraints,0
fix a bug,0
fix smoothness test for tensorflow,0
fix smooth and proximal test,0
new API and tests,0
ADMM and constrained parafac,0
"Merge pull request #283 from caglayantuna/Tucker_normalize

Adds a normalization function for Tucker tensors",0
Updated backend: use backend manager as module,0
"Merge pull request #326 from IsabellLehmann/cmtf_als

Add cmtf_als to init file so that it can be imported directly via tl.decomposition",0
README: update Slack join link,0
Merge branch 'tensorly:main' into cmtf_als,0
add cmtf_als to init file,0
weighting core,0
test_tucker_normalize,0
add tucker_normalize,0
remove normalization from tucker,0
update classes,0
fix partial tucker,0
normalization for tucker functions,0
"Merge pull request #293 from IsabellLehmann/cmtf_als

CMTF-ALS",0
"Merge pull request #322 from merajhashemi/mh-matmul

Add test for matmul",0
Slightly tighter testing,0
Remove stale file,0
Fix CMTF code for new interface,0
Remove other additions,0
Remove backend additions,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #323 from caglayantuna/fix_tests

fix active set and hals tests",0
fix active set and hals tests,0
Merge branch 'main' into mh-matmul,0
Minor: Remove wrong import,0
Add randn & matmul to package init,0
Remove unnecessary math.prod,0
Fix TF: 1d matmul,0
Add test for matmul,0
"Merge pull request #320 from merajhashemi/mh-svdorth

Fix  singular vectors to be orthonormal",0
"Merge pull request #321 from caglayantuna/diag

fix diag function for tensorflow and pytorch backends",0
fix diag function,0
Fix order before orthogonalization,0
Add test for svd orthonormality when n_eigenvecs > matrix_rank,0
Fix orthonormality test for svd,0
Fix singular vectors to be orthonormal,0
"Merge pull request #318 from merajhashemi/mh-svd

Fix `tl.partial_svd`",0
"Merge pull request #305 from merajhashemi/mh-lstsq

Add lstsq to backend",0
Add residuals to lstsq,0
Add lstsq to backend,0
Add test to check singular values are finite,0
Fix partial_svd,0
Merge branch 'main' into cmtf_als,0
Typo: math.prod -> utils.prod,0
"Merge pull request #309 from JeanKossaifi/main

Adding Batched Tensor Dot + Simplifying API",0
FIX doc tensordot,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
batched_tensor_dot -> tensordot,0
"Merge pull request #315 from merajhashemi/mh-unfold

Fix `tl.partial_unfold`",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
"Merge pull request #313 from merajhashemi/mh-matmul

Fix dot and matmul in PyTorch and TF",0
"Merge pull request #312 from merajhashemi/mh-pytorchsvd

Fix svd for pytorch < 1.8",0
Fix partial unfold,0
Fix dot & matmul in TF,0
Fix dot in PyTorch,0
Fix pytorch svd,0
FIX MXnet: keep tensors.ndim <= 6 for transpose,0
Add math.prod with failsafe for old version<3.8,0
Typo,0
Update doc for batched_tensor_dot,0
Use faster batched_tensor_dot version,0
Batched-tensordot: simplify API,0
Tests for batched tensorsdot,0
Adds batched-tensordot,0
Adds matmul to PyTorch backend,0
"Merge pull request #229 from merajhashemi/mh-tr

Adds Tensor Ring Decomposition",0
"Merge pull request #306 from JeanKossaifi/main

Adds matmul + fix tensordot pytorch backend + doc",0
Adds matmul + fix tensordot pytorch backend + doc,0
"Merge pull request #294 from aarmey/CP-lstsq-grad

Gradient of the difference norm between a CP and dense tensor",0
"Merge pull request #304 from yngvem/fix-tt-cross-seed

Added random seed for tensor_train_cross",0
Added random seed for tensor_train_cross,0
Fix test for lower accuracy backends,0
Linting,0
Edits based on review,0
Update README.rst,0
Make parafac() robust to complex tensors,0
FIX cp_to_tensor,0
"Merge pull request #295 from caglayantuna/nn_tucker_sparse_coeff

NN-Tucker hals sparsity coefficient issue",0
adds Iterable,0
Add test for mutltidim response,0
Fix predict method,0
fix typo,0
Support multi-dimensional output for cp regression,0
Fix tests for JAX/TF,0
Add tests for tensor ring,0
Add tests for `TRTensor`,0
Add random_tr + test,0
Add Tensor Ring implementation,0
Simplify normalization and make loop over modes,0
Initial changes to work on all backends,0
Finish docstring,0
Add testing,0
"fix tucker hals sparsity coefficient

core sparsity

sparsity coefficient",0
Initial implementation,0
delete fms,0
cmtf als,0
fix import error,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #268 from yngvem/wrapper_test

Test utility for class wrappers and some small bugfixes",0
Merged branch 'main' into wrapper_test and storing the errors after Tucker_NN.fit,0
Merge branch 'main' into wrapper_test,0
Added and fixed documentation,0
Updated the contributing guide to include a note about the class interface utility,0
"Merge pull request #280 from caglayantuna/sparse_example

Sparse backend usage section example",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
validate_tt_rank: fix test + check rank realizable through SVD,0
DOC: fix minor doc issues,0
DOC: fix case insensitive clash between fun&class,0
DOC: fix warnings sphinx examples,1
updated sparse example,0
sparse backend usage section example,0
"Merge pull request #282 from earmingol/main

Added random_state to CP and NN_CP when init='random'",0
Fixed missing random_state when init='random' in CP and NN_CP,0
Doc: add CPInit option for init in docstring,0
"Merge pull request #279 from MarieRoald/bugfix_nn_cp_init

Bugfix: Initialising non-negative CP with precomputed decomposition erroneously modified the initialisation",0
"Merge pull request #278 from caglayantuna/new_functions

adding tl.trace and tl.cumsum functions",0
Removed unused argument,0
Removed unused argument,0
"Test that if we initialise nn_cp with a precomputed decomposition, then the init is not modified before fitting the model",0
"Reverted back so all factor matrices are initialised non-negative

Only making the constrained factor matrices non-negative seemed
to make the fitting procedure less stable (higher likelihood of
all-zero components).",0
Added fix for initialisation,0
"Merge pull request #276 from bkmgit/bkmgit-argument-update

current version uses rank rather than ranks",0
tl.trace and tl.cumsum,0
"Merge pull request #277 from VoliCrank/main

Update API reference for non_negative_parafac",0
Update _nn_cp.py,0
current version uses rank rather than ranks,0
"Merge pull request #271 from MarieRoald/bugfix-hals_convergence_bug

Bugfix:HALS convergence checking fails when non-negativity is not imposed on final mode",0
Added fix for the bug,0
Added test that reproduces the error in convergence checking for HALS,0
"Merge pull request #254 from caglayantuna/nn_tucker

Non-negative tucker via HALS",0
optima stepsize for fista,0
edit fista test,0
skip tensorflow for active set test,0
raise error when active set with tensorflow,0
nn tucker hals to init,0
fix tests,0
fix mxnet test issue,0
fix tensor_to_vec,0
"names, any and fix tests",0
decimal and tensor to vec,0
fix active set test,0
notes and tests,0
fix fista and math operators,0
call nnsvd,0
Notes and name edits,0
fix fista initial x issue,0
nnnsvd for initialization,0
fix nn in fista,0
updated names and some edits according to PR review,0
add hals function,0
sparsity,0
improve doc,0
fix docstring,0
fix bugs,0
fix backend issues,0
active set and fista,0
core update and gradient algorithms,0
test function,0
initialize tucker and update core,0
hals function,0
changed terms,0
PEP8,0
nn_tucker function is added,0
Merge remote-tracking branch 'upstream/main' into wrapper_test,0
"Merge pull request #267 from MarieRoald/parafac2_stopping_condition

Minor fixes for PARAFAC2 (#263 and more)",0
Changed max number of iterations to speed up tests,0
"Changed absolute tolerance to 1e-13

Setting it 1000*eps led to problems with single precision, so we set it to 1e-13 which is similar to 1000*eps for double precision",0
Added version changed number,0
Added test for class wrapper of decomposition function,0
Added test for class wrapping of decomposition function,0
Added test for class wrapper,0
Added test for wrapping of tucker tensor,0
Added test for tucker wrappers,0
Fixed so wrapper accepts all correct arguments,0
Added wrapper tests,0
Added utility to test if class-wrappers are correctly made,0
Bump version.,0
Added missing tl.tensor,0
Changed default tolerance to 1000 times the machine precision,0
Added versionchanged for n_iter_max,0
Added docstring for nn_modes and updated Parafac2 class,0
Added test for stopping conditions,0
Added absolute tolerance and updated Parafac2 class,0
Merge remote-tracking branch 'tensorly/main' into parafac2_stopping_condition,0
Adds `any` to the backend,0
"Merge pull request #262 from MarieRoald/hals_only_some_modes

Non negativity in only some modes + congruence_coef",0
Removed unnecessary part of convergence checking,0
Casting the congruence matrix to a numpy array,0
Make random matrices into tensors,0
Removed unused argument,0
Wrapped random signs in a T.tensor,0
Added congruence coefficient,0
Added congruence coefficient,0
Fixed docstring,0
Use builtin congruence coefficient function,0
Changed to use the builtin congruence coefficient,0
Added congruence coefficient computation,0
Changed tolerance,0
Changed tolerance and number of iteration for test,0
"Fixed so the weights are also a TensorLy tensor, not NumPy array",0
Changed random numpy matrices into tensorly tensors,0
Changed so the synthetic components are used to form a CPTensor object,0
Added comment,0
Removed extra space,0
Fixed so HALS is used when constraints are imposed and added warning if all modes are constrained.,0
"Fixed so non negativity is tested after only one iteration, and added checks for warnings if all modes are constrained",0
Merge remote-tracking branch 'tensorly/main' into hals_only_some_modes,0
Testing the unconstrained B-factor matrices in nn-test too.,0
Added tests to ensure that constrained factors are non-negative,0
currect version of cmtf als,0
"Merge pull request #1 from tensorly/main

update master branch",0
Added trig functions (sin and cos) to backends (#256),0
"Merge pull request #216 from merajhashemi/mh-signsvd

Fix svd sign indeterminacy",0
Merge branch 'main' into mh-signsvd,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
Added non-negativity constraints for some modes,0
added non_negative_parafac_hals to __init__,0
Added non-negative HALS for only some modes and unconstrained for others,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
Small fix,0
Capitalize variable names and remove to numpy,0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
Merge branch 'main' into mh-signsvd,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
Merge branch 'main' into mh-signsvd,0
Move svd-flip to backend,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fix svd sign indeterminacy,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
"Merge pull request #551 from cohenjer/normalize_tucker

add normalization method to tucker_tensor class (similar to cp_tensor)",0
add normalization method to tucker_tensor class (similar to cp_tensor),0
"Merge pull request #549 from tensorly/kr-speed

Provide faster implementation of the MTTKRP
Update Github actions to avoid Node.js deprecation",0
Fix formatting with current black version,0
Upgrade Github actions runners,0
"Mark test failure, black format",0
Clean up test_cp_vonneumann_entropy_mixed_state(),0
Provide faster implementation of kr,0
"Merge pull request #538 from braun-steven/main

Fix torch tensor creation to preserve dtype and device.",0
"Update test_proximal.py

Making a trivial change to rebuild the tests.",0
"Merge pull request #548 from FBen3/add_missing_makefile_targets

Add missing targets to .PHONY directive",0
Add missing targets to .PHONY directive,0
"Merge pull request #511 from OsmanMalik/master

Add randomized sampling-based ALS method for tensor ring decomposition",0
"Start testing Python 3.12 and resolve JAX deprecation (#540)

* Upgrade python

* Update test.yml

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
Apply updated black,0
Merge branch 'tensorly:main' into master,0
"Split TR files based on main algorithm

Split TR decomposition and testing files based on type of algorithm (SVD or ALS).",0
"Simplify proximal operator code (#534)

Loops could be removed through vectorized indexing. Also, no need to keep track of the passive and active indices because these are complementary.",0
"Merge pull request #533 from meyer-lab/rm-mxnet

Remove mxnet entirely, as the project has been halted and archived.",0
"Merge pull request #539 from meyer-lab/cross-product

Avoid large concatenation within PARAFAC2 upon SVD initialization",0
Add information about cross-product to the docstring,0
Fix bug with handling of function output,0
Merge branch 'tensorly:main' into master,0
Simplify torch tensor creation,0
Remove unnecessary torch.tensor call,0
"Merge pull request #535 from meyer-lab/fix-pf2

Small fixes in NN PARAFAC/PARAFAC2",0
"Add max rank argument to svd_compress_tensor_slices (#536)

* Add max rank argument

* Fix variable typo",0
Fix failing test cases,0
Format tensorflow_backend.py,0
Make dtype tensor init test for all backends,0
"Fix TF dtype/device tensor init

See also: #537",0
"Fix missing tensor contexts

See also: #538",0
"Add torch tests for tensor init dtype fix

See also: #538",0
Looser tolerance for PyTorch,0
Done,0
Fix tests that previously assumed float32,0
Merge branch 'main' of github.com:braun-steven/tensorly,0
"Fix torch tensor creation dtype/device

The previous implementation simply took the input data and forced it to
be on the given device (`cpu` default) with the given dtype (`float32`
default).

This lead to `tl.tensor(torch.zeros(1, device=""cuda:0""))` creating a
float32 tensor on `cpu` while the expected behavior should be an
int32 tensor on `cuda:0`.

Resolves: #537",0
"Fix torch tensor creation dtype/device

The previous implementation simply took the input data and forced it to
be on the given device (`cpu` default) with the given dtype (`float32`
default).

This lead to `tl.tensor(torch.zeros(1, device=""cuda:0""))` creating a
float32 tensor on `cpu` while the expected behavior should be an
int32 tensor on `cuda:0`.

Resolves: #537",0
Fix context handling,0
Fix pf2 initialization,0
"Merge pull request #532 from meyer-lab/backend-deps

Fully deprecate mxnet",0
Remove mxnet,0
Deprecate mxnet,0
"Merge pull request #525 from meyer-lab/pf2-linesearch

Bro's line search for PARAFAC2",0
Fix black formatting,0
Fix _BroThesisLineSearch import,0
Last edits,0
"Update tensorly/decomposition/_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
"Update tensorly/decomposition/tests/test_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Add second docstring,0
Black formatting,0
Add first docstring,0
Merge branch 'main' into pf2-linesearch,0
"Apply Marie's suggestions

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
"Merge pull request #530 from MarieRoald/parafac2-compression

SVD compression of PARAFAC2",0
"Add SVD compression for PARAFAC2

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
"Fix typo and improve test parametrisation

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
Basic structure for separating line search,0
"Update tensorly/decomposition/_parafac2.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Fixes based on MarieRoald review,0
"Merge pull request #517 from meyer-lab/fix-nnsvd-returns

Also provide H back from make_svd_non_negative()",0
Fix mxnet context of S,0
Fix and test svd shapes,0
Fix typo in error comparison,0
Fix that we need to reproject within the line search,0
Implemented,0
"Merge pull request #524 from meyer-lab/pf2-avoid-reproject

PARAFAC2: Avoid reprojection of X during the error calculation",0
Add test of function computing leverage scores,0
"Move function for calculating leverage scores

Also:
- Rename function for calculating leverage scores.
- Add reference to paper on leverage scores.
- Fix bug in how num_rank is computed.",0
Avoid reprojection of X during error calculation,0
"Merge pull request #505 from JeanKossaifi/main

Default on math.pi",0
"Merge pull request #519 from hello-fri-end/fixInitializeTucker

Fix initialize_tucker",0
Fixed linting errors with black,0
"Merge pull request #514 from SauravMaheshkar/saurav/ci-pip-cache

Doc: adds `pip` caching to CI",0
Merge branch 'main' into saurav/ci-pip-cache,0
"refactor(ci): organise pip cache

Signed-off-by: Saurav Maheshkar <sauravvmaheshkar@gmail.com>",0
fixed the shape of core and factors when init==random in intialize_tucker and updated the test of partial_tucker to pass init==random when testting randomstate,0
"Merge pull request #513 from meyer-lab/fix-exports-plsr-perf

Miscellaneous housekeeping improvements",0
Break out return values,0
Also provide H back,0
feat: add pip caching to CI,0
Fix YAML,0
Upgrade to Python 3.10 by default,0
Other fixes,0
Loosen tensor-train assertion,0
"Merge pull request #508 from Kiord/main

Documentation update for svd missing values imputation",0
"Add option for uniform sampling

New parameter allows for uniform sampling to be used instead of leverage score sampling.",0
"Add randomized tensor ring decomposition

Add the randomized sampling-based ALS method for tensor ring decomposition proposed in O. A. Malik, S. Becker, ""A Sampling-Based Method for Tensor Ring Decomposition"", Proceedings of the 38th International Conference on Machine Learning (ICML), PMLR 139:7400-7411, 2021.",0
typo,0
"Documentation cues for imputation with svd, and added a condition to perform matrix masking",0
Fix CMTF test,0
Fix black linting,0
Fix occasional torch error,0
Black lint,0
Testing adjustments,0
Black formatting,0
Fix pytorch,0
Fix Jax,0
"PLSR much faster, and pass-through of lstsq",0
Fix exports and improve PLSR performance,0
"Fixed svd_flip() when used on GPU w/ PyTorch backend (#504)

* 503: Fixed svd_flip() when used on GPU w/ PyTorch backend

* Update svd.py

Added context instead of just device

---------

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Use math.pi by default,0
Cosmetic,0
"Merge pull request #501 from OsmanMalik/master

Add ALS-based method for tensor ring decomposition",0
Modify code to use matricize,0
"More efficient error calculation in PARAFAC2 through inner product (#502)

* More efficient error calculation

* Fix transpose

* Fix test

* Black formatting

* Add docstring

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
"Add ALS-based method for tensor ring decomposition

- Add function for tensor ring decomposition via ALS

- Add class wrapper for said function

- Add tests for new functionality",0
Update setup to distribute data,0
"Move choices about Khatri-Rao to tenalg backend (#495)

* Removing kr() from backends

* Black formatting

* Fix jax

* Rework based on feedback

* Remove unused

* Remove unused

* Various last edits

* Grammar fix

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
"Remove padding in Pf2 (#496)

* Avoid padding in parafac2

* Fix typing if tensor is passed to Pf2

---------

Co-authored-by: Aaron Meyer <git@asmlab.org>",0
Fix typos in documentation,0
"Merge pull request #494 from meyer-lab/depracations

Add mxnet warning and remove old deprecations",0
"Fix CP Partial Least Square (#492)

* Amendment in the functions

* Add more tests

* Black formatting

* Skip transform test on tensorflow

* Some changes for the review

* Adjustments to help with solving speed

* Separate R2 score; make X_r2 and Y_r2 as new attributes

* Avoid creating CPTensor() overhead; remove redundant reshape

* Update tensorly/metrics/tests/test_regression.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>

* Incorporate outer, fix randn call

* More tl.tenalg.outer; used mean-centered tensor

* Some fixes on R2 definitions

* Make a dedicated score function to avoid copying X and Y

* Black formatting

---------

Co-authored-by: Aaron Meyer <ameyer@ucla.edu>
Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix a couple stray references,0
Remove tensor train deprecations,0
Adjust wording of mxnet warning.,0
Merge branch 'main' into depracations,0
"Merge pull request #491 from braun-steven/feature/logsumexp

Add logsumexp function",0
Bump version,0
"Merge pull request #489 from cohenjer/hotfix_permute_factors

Hotfix permute factors",0
Deprecate mxnet and tensorflow,0
Update black formatting based on latest version of the linter (#493),0
Setup depracation,0
black lint,0
logsumexp: Format logsumexp functions with black,0
logsumexp: Update docstring,0
"Add logsumexp function

This adds the logsumexp function using the logsumexp trick which is the
numerical stable version of applying `log(sum(exp(x)))`. I chose to
default to the backend implementation if available (pytorch,
numpy/scipy, tensorflow, jax) and implemented the numerical stable
computation of `log(sum(exp(x)))` when the backend did not provide a
logsumexp function (mxnet, cupy).

Additionally, I've added a unit test that checks against the numpy/scipy
baseline with some 3d data tensor over all axis.",0
Fixing tests inputs congruence coefficient,0
more black linting,0
black reformatting,0
removing commented lines,0
fix cp_permute_factors() #487,0
"Merge pull request #485 from meyer-lab/test-einsum

Fix einsum backend and run full test suite against it",0
"Fix factor conjugate, weights=None case",0
Add testing for einsum backend,0
"Fix for f-strings and test compatibility with python 3.7, 3.9 and 3.10 (#482)

Removes f-string syntax that is not supported in Python 3.7. To prevent incompatibilities in the future, the tests (with Numpy backend) are now run on several of the supported Python versions.

Fixes #479 and #473.",0
"Merge pull request #480 from cohenjer/fetch_kinetic

Fetch kinetic",0
Updating docstring and api refs,0
black linting and ticks update,0
Merge branch 'main' into fetch_kinetic,0
adding Kinetic data locally,0
"Moderately speeds up and adds testing for CP, PARAFAC2, and Tucker (#478)

* Test adjustments

* Fix

* Remove index_update from parafac2

* Consolidate CP tests

* Fix torch

* Black formatting

* Add durations to testing output

* More adjustments to speed up parafac2 test times

* Fix test random states

* Fix merge conflicts

* Small fixes

* Small fixes

* Update Github actions

* Fix occasional TTOI error

* Fix mxnet test

* Fix PARAFAC2 normalize factors

* Fixes and black formatting

Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Satisfy linter,0
Temporarily disable Kinetic db test,0
"Merge pull request #472 from cohenjer/correct_indian_pines

Adding indian pines locally and updating loader",0
"Merge pull request #474 from meyer-lab/simplify-parafac2

Remove in-place projection operations in PARAFAC2",0
Changing data from .mat to .npy,0
A little more simplification,0
Remove indexing,0
black linter,0
correcting tests,0
adding indian pines locally and updating loader,0
Update tensorly overview,0
DOC: fix theme link,0
DOC: document backend static and dynamical dispatching,0
Improve doc,0
Use git version of the theme,0
DOC: Revert logo change,0
Try fixing website logo,0
DOC: revert last conf change,0
DOC: remove permalinks,0
Doc: Add SVD interface to API,0
Adds CP-PLSR to API + docstring fix,0
Add corr-index to API,0
Randomized parafac: no verbosity by default,0
Adds cuQuantum pluging,0
Einsum plugin: only reset if not None,0
Update conf for latest theme version,0
Update cite,0
Adds cff citation,0
DOC: clearer API,0
Covid example: Valid REST links,0
Black linting,0
Improve TT-OI and add to API,0
CP: improve doc,0
Add reference for opt-einsum,0
Website: add dropdown,0
TT-TTOI test: increase tolerance,0
FIX Black linting,0
FIX test_tt_TTOI for MXNet,0
DOC: update to maintained jsmin,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
CP: fix undefined unnorml_rec_error,0
FIX test for MXNet,0
CI FIX,0
"CI MXNet test: revert numpy

Identified the issue - MXNet isn't updated to support latest version of NumPy that deprecated np.bool -- reverting to previous one (1.23.1)",0
CI MXNet test: revert to 1.8,0
CI test MXNet: trying to fix,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX validate_tucker_tensor,1
"Merge pull request #434 from MarieRoald/backend_specific

Decorator for backend specific implementations",0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Update setup files,0
bump version + import submodules,0
"Merge pull request #411 from Lili-Zheng-stat/updated_main

Add TTOI functions",0
Fix for bool value in svd,0
Merge branch 'main' of https://github.com/tensorly/tensorly into updated_main,0
"Merge pull request #467 from johnthagen/patch-1

Use a secure link to tensorly.org",0
"Merge pull request #462 from JeanKossaifi/opt-einsum-plugin

Adds opt-einsum path caching plugin",0
FIX sparse backend version check,0
Black formatting,0
Adds documentation for the plugins,0
Use a secure link to tensorly.org,0
Deprecated distutils.LooseVersion -> packaging.version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into opt-einsum-plugin,0
"Merge pull request #466 from JeanKossaifi/indian_pines

Temporarily skip indian_pines test",0
Keep track of original einsum fun,0
Temporarily skip indian_pines test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Bump Python version in tests,0
"Move to f-strings formatting (#464)

* fix: change str.format() to f-strings

* fix: change regular string into f-strings

* fix: indicate minimum supported Python (because of f-strings)

* fix: change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo, change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: change to support Python 3.7

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Update tensorly/contrib/decomposition/_tt_cross.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Black formatting

* More black formatting and fixes

Co-authored-by: Alexander Bakhtin <alexander.bakhtin@tuni.fi>
Co-authored-by: bakhtos <68953985+bakhtos@users.noreply.github.com>
Co-authored-by: Marie Roald <roald.marie@gmail.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>
Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Black fixes,0
Add tests for 4th order tensor,0
Black linting,0
Adds opt-einsum path caching plugin,0
FIX cp_norm: preserve context,0
"Refactors mttkrp

Move unfolding_dot_khatri_rao to tenalg, add einsum version",0
reformat using black,0
Delete unnecessary tl.tensor wrapper as suggested by @merajhashemi,0
Change the n_iter parameter to make it the exact number of iterations instead of half the number of iterations,0
"Merge remote-tracking branch 'upstream/main' into updated_main
Merge the updates from tensorly since the svd_interface is in need for the current tensor-train-OI code",0
Make stylistic changes suggested by @JeanKossaifi,0
Make stylistic changes suggested by @cohenjer,0
"Merge pull request #456 from JeanKossaifi/tt-rank-errors

Tt rank errors",0
"Merge pull request #455 from JeanKossaifi/partial_svd_error

Raise error for users trying to use tl.partial_svd.",0
"Merge pull request #454 from JeanKossaifi/tt_svd

TT improvements + doc",0
FIX errors for TT-rank checks,0
Raise error for users trying to use tl.partial_svd.,0
Adds tensor-ring/train/matrix to the doc,0
Adds TensorTrainRing class,0
"Merge pull request #453 from JeanKossaifi/tt_svd

Adds svd interface to TT and TR, as well as TensorRing class",0
Adds svd option to TTM,0
Formatting,0
Adds TensorRing class,0
Adds svd option to tensor-ring decomposition,0
Adds svd option to TT,0
"FIX: typo, forgotten argument in signature",0
FIX: Black linting,0
Adds option to return the reconstruction errors,0
"Merge pull request #417 from aarmey/callback

Callback interface for CP decomposition",0
"Merge pull request #450 from tensorly/fix-docs

Fix the documentation build by pinning the matplotlib version",0
Update requirements_doc.txt,0
"Merge pull request #435 from meyer-lab/plsr

Adding an implementation of tensor PLS.",0
Reformat for black,0
Formatting code using black,0
test_decomposition_accuracy fix,0
More reasonable conditions for test_optimized_covariance,0
"Reduce test runs, add 2-mode",0
Added docstrings to CP_PLSR tests,0
Add gamma / digamma to backend imports,0
Change naming: x_rank into n_modes in test,0
Fix tests for all backends,0
Use randomized SVD which will always be much faster,0
Change CP solving function; add test on covariance (corrcoef)),0
Fix test for optimized covariance,0
Added optimized covariance test,0
Change Z solving to parafac,0
Change from calling function partial_svd to calling svd_interface,0
Update test_cp_plsr.py,0
"Merge pull request #445 from ssnio/patch-1

Doc fix typo in tensor_basics.rst",0
"Doc fix typo in tensor_basics.rst

Correcting a typo in unfolding size",0
"Merge pull request #437 from caglayantuna/warning_when_fixing_last_mode

Warning when fixing last mode",0
Fix a bug due to changing a variable name in the sequential_prod function.,0
Made stylic changes,0
Fix bugs for rank larger than 1,0
Black formatting,0
Small fix on T.ndim,0
Use partial tucker for HOOI implementation,0
Black formatting,0
Add some more documentation,0
"Update tensorly/decomposition/_tucker.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix other backends,0
Black formatting,0
Remove tucker from iteration initialization,0
Merge branch 'tensorly:main' into plsr,0
"Added CP PLSR tests
 - Adds tests for class function, dimension compatibility,
 decomposition accuracy, and factor properties",0
CP: Avoid creating large Id mat if not needed,0
add fixed modes test for tucker hals,0
adds warning when fixing last mode,0
Some renaming on variables re Marie,0
"Improve readability based on Marie's review

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Remove the last pinv,0
Fix issues from other backends,0
Remove pinv from backend,0
Some testing adjustment and cleanup,0
Use tensordot for readability. Black format.,0
Fix indexing assignment problem,0
Use lstsq() instead of pinv(); use f-string; remove tile(),0
"Decorator for backend specific implementations

Made in collaboration with: Yngve Mardal Moe",0
Remove uneeded exports,0
Remove unneeded backend functions. Add indexing example.,0
Black formatting,0
Make rec_error an argument to the callback,0
Extend callback for sparsity case,0
Add callback to random CP. Fix tests.,0
Update proposed implementation,0
Merge branch 'main' into callback,0
FIX nn_init with new interface,0
Docstring: fix sphinx doc,0
Typo: fix title underline too short.,0
"Merge pull request #429 from aarmey/svd

Move SVD to a common frontend interface",0
Last adjustments,0
Adjust arguments based on review,0
"Rename svd_type to method.

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Add tPLS predict() and transform(),0
Put back sparse SVD,0
Add callable option to svd_funs and resolve issue with torch sign,0
Black linting,0
Add wrapper functions for a versions of arc functions,0
Merge branch 'tensorly:main' into svd,0
"Merge pull request #423 from aarmey/complex-test

Add testing for complex values in CP",0
Merge branch 'main' into complex-test,0
Merge branch 'main' into plsr,0
First try on tensor PLSR fit() function; some addition to backend,0
"Merge pull request #425 from aarmey/fix-mxnet

Fix mxnet testing",0
Add back last testing skip,0
Revert the test changes,0
"Revert ""Try another incantation of mxnet""

This reverts commit f8df1ea4552f5ad5038709a44a6693bf6e8312ba.",0
Merge in revert,0
Remove last test skips,0
Update test_tt_tensor.py,0
Try another incantation of mxnet,0
Last documentation,0
Documentation for svd_checks return value,0
Skip tensorflow and mxnet complex cases,0
Black linting,0
Try to fix tensorflow type promotion,0
"PEP8

Better luck this time.",0
Greatly speed up Jax/tensorflow tests,0
PEP8 (black),0
Linting,0
Fix occasional tolerance issue,0
Fix fixed mode tests,0
Fix torch issue with lists,0
Black linting,0
Found the last missing conj,0
Cleaner test code. Add MTTKRP * tl.conj(f),0
"Update tensorly/cp_tensor.py

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
More serious issue with mttkrp,0
"Merge pull request #424 from aarmey/better-cmtf-init

Better initialization of CMTF ALS",0
Update contributing.rst,0
More cleanup around SVD use,0
Solve circular import,0
Linting,0
More consistent Tucker init,0
More unification across backends,0
More backend cleanup,0
More cleanup,0
More cleanup,0
Remove redundant option,0
Move to only using backend functions with svd,0
Working,0
Refactor SVD to frontend,0
Black formatting,0
Setup basic files,0
Update base.py,0
Hack to test complex numbers,1
Merge branch 'main' into complex-test,0
Cosmetic: PEP8,0
Merge branch 'main' into callback,0
Merge branch 'main' into better-cmtf-init,0
Merge branch 'main' into fix-mxnet,0
"Merge pull request #401 from j6k4m8/apply-black-style

Apply black-style formatting to repository",0
Only run black on tensorly dir,0
Run black on tensorly directory,0
Update documentation,0
Try again,0
Pin to 2.0 but old version,0
Fix type error,0
Update test.yml,0
Better initialization of CMTF ALS,0
Add testing for complex values in CP,0
"Merge pull request #298 from maximeguillaud/master

Make parafac() robust to complex tensors",0
Fixed backend import name,0
Update cp_tensor.py,0
"Merge pull request #420 from MarieRoald/new_test_utils

Add assert allclose and tests for test utils",0
FIX: gamma distribution,0
"Merge pull request #421 from caglayantuna/fix_svd_test

change decimal for randomized_svd",0
Updated signature and added docstring,0
"Merge pull request #407 from aarmey/numpy-tf

Moves tf to the numpy interface",0
More correct type promotion,0
Fixes for edge cases in types,0
change decimal for randomized_svd,0
Fix from merge,0
Merge branch 'main' into numpy-tf,0
Merge branch 'main' into callback,0
FIX cupy backend ( gammad-> digamma),0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
"Merge pull request #419 from aarmey/rm-descending

Remove descending argument in sorting functions",0
Made tests pass with single precision,0
Add assert allclose and tests for test utils,0
"Merge pull request #418 from caglayantuna/reorder_partial_tucker

reorder modes and ranks in partial_tucker",0
Remove descending argument,0
reorder modes and ranks in partial_tucker,0
_validate_cp_tensor now supports 1D factors properly,0
"Merge pull request #371 from aarmey/more-cp-testing

Test for reproducibility of CP",0
Fix,0
Initial draft of a callback function,0
"Merge pull request #415 from Mahmood-Hussain/main

removed numpy copy bug",0
"Merge pull request #404 from caglayantuna/permute_factors_api

Permute factors api",0
"Merge pull request #408 from caglayantuna/add_new_dataset

Adds 2 new dataset",0
tl.tensor and fetch,0
change requests to urllib,0
load_Il2data in example,0
add wavelengths for indian pines,0
change to load_IL2,0
improve dataset information and init,0
add_2_dataset,0
"Merge pull request #406 from aarmey/fix-permute

Tensor permutation fix for Jax",0
removed numpy copy bug,0
remove redundant import,0
"Update plot_permute_factors.py

A few comments improvements",0
adds permute factors example,0
remove unused rank and improve api,0
Remove Seaborn,0
Small Fix,0
Remove Pandas Dependency,0
workflow test.yml: adds mxnet dependency,0
"test workflow: switching to MXNet 2.0

The mxnet.np interface is too partial in MXNet 1.X, switching to beta version of MXNet 2.0.",0
Add TTOI functions,0
Moves tf to the numpy interface,0
Tensor permutation fix for Jax,0
"Merge pull request #362 from borcuttjahns/IL2_Example_Script

Added IL2 PARAFAC Analysis Example Script",0
Update Makefile,0
Move IL2 Example,0
adds constrainedcp to doc,0
ConstrainedCP to init,0
add test for constrained cp class,0
add class,0
adds return errors to tucker,0
adds cp permute factors,0
FIX jax copy method,0
FIX: JAX backend,0
"Merge pull request #400 from j6k4m8/add-black-ci

Add black code style and linting to CI",0
Add constant properties for tf compat,0
Fix tensorflow function names,1
Resolve constants to numpy in tensorflow,0
Remove alias trig functions from mxnet and jax,0
Remove alias trig methods from numpy altogether,0
Remove alias functions for arc-trig fns from numpy,0
Add trig functions and constants to backendmanagtr,0
Add trig functions to core,0
Add trig fns and constants to backend exports,0
Add trig functions to backends,0
Fix black flags,0
Fix branch name in CI,0
Add linting CI,0
Merge branch 'tensorly:main' into main,0
Add exp and log to backend exports,0
Add exp and log to backend exports,0
default axis for tensorflow concatenate,0
PyTorch backend: fix tensordot args,0
Updated for Sphinx,0
"Drop nosetests

It was added as numpy.testing required nose [1], which is no longer the
case for numpy >= 1.15 [2] from 2018 [3].

Testing:
* nosetests fails as some testing code uses pytest-specific features
  (ex: @pytest.mark.parametrize in several files)
* `cd doc && make html` still works fine

[1] https://github.com/tensorly/tensorly/issues/48
[2] https://numpy.org/devdocs/release/1.15.0-notes.html
[3] https://pypi.org/project/numpy/#history",0
fix typo in the doc,0
"indices list doc

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
improve docstring,0
user defined indices list for sample kr,0
fix normalized sparsity test,0
Adds gamma random generator,0
pad_tt_rank: make compatible with tt-matrices,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX pad_tt_rank (indexing),0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
Fix tests,0
Fix Imports Name,0
Big Changes,0
Changes,0
Implemented multiple methods to compute the correlation index,0
Now works for all backends,0
Update similarity.py,0
"merge into one function, pep8 formatting and tl backend compatibility",0
tests for calc_corrindex,0
use tensorly operations instead of numpy,0
CorrIndex implementation for comparing decomposition outputs,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Adds doc for example + fix covid example,0
"Merge pull request #379 from caglayantuna/sparse_robust_pca_issue

Clip function to sparse backend with a_max=None",0
"Merge pull request #381 from caglayantuna/add_log

Adds log function to tensorly",0
add log function to tensorly,0
clip to sparse with amax=None,0
"Merge pull request #378 from JeanKossaifi/main

Adds digamma fun to backend",0
Adds digamma fun to backend,0
"Merge pull request #377 from JeanKossaifi/main

Adds exp to the backend",0
Adds exp to the backend,0
"Merge pull request #361 from cyrillustan/covid_notebook

Add Covid example notebook",0
Merge branch 'tensorly:main' into covid_notebook,0
"Merge pull request #359 from cyrillustan/covid_example

Import COVID-19 systems serology example dataset",0
Minor changes on adding more explanatory texts,0
Merge branch 'covid_example' into covid_notebook,0
Adjust the name in data import testing accordingly,0
"Some changes on importing data, more DESC",0
Merge branch 'covid_example' into covid_notebook,0
Change function name and expand DESC,0
Remove ROC curve; plot everything in matplotlib,0
Changes addressing Jean's comments,0
"Merge pull request #355 from MarieRoald/fix_clip

Fix bug with `tl.clip` for the PyTorch and TensorFlow backends",0
"Merge pull request #356 from MarieRoald/pytorch_sum_keepdims

Add `keepdims` to `tl.sum` with the PyTorch backend",0
"Merge pull request #357 from MarieRoald/pytorch_shape_as_tuple

Make `tl.shape` return tuple for PyTorch backend",0
"Merge pull request #363 from caglayantuna/fix_simplex

simplex projection issue",0
"Merge pull request #367 from caglayantuna/tucker_copy

copy tucker tensor",0
Raise tolerance for float32,0
Unreasonable to expect reproducible SVD,0
Remove change,0
Remove init testing,0
Fixed testing error. Narrowed problem to SVD.,0
Test for reproducibility of factorization,0
Change the structure of Bunch in example accordingly,0
Merge branch 'covid_example' into covid_notebook,0
Change how Bunch object is structured,0
copy tucker tensor,0
fix constrained parafac simplex test,0
Fix Imports Test,0
Address Comments,0
fix casting to int,0
fix simplex prox,0
"Merge pull request #366 from JeanKossaifi/main

Adds matricize function",0
Adds matricize function,0
MXNet backend fix,0
Backend: accept device in tensor,0
Added Example Script,0
Add COVID example notebook,0
Import COVID-19 systems serology example dataset,0
Fixed so shape returns tuple,0
Added test to check if shape returns tuple,0
Add keepdims argument to sum with pytorch backend,0
Added tests for sum function,0
Converted clip limits to single precision,0
Fixed clip bug in tensorflow backend,0
Fixed clip bug in pytorch backend,0
Added regression test for bug with clip,0
Extended test_clip,0
"Merge pull request #348 from borcuttjahns/main

Adds IL-2 stimulation dataset",0
Added license to Bunch,0
"Add docstring, and .DESC to data",0
Added a test,0
"Add metadata, bunch function",0
"Relocate data, remove example for now",0
"Merge pull request #347 from caglayantuna/constrained_cp_gallery

Constrained parafac example and improved docstrings",0
Initial edits,0
"Merge pull request #1 from borcuttjahns/IL2_Example_Notebook

Add IL-2 NN PARAFAC Notebook",0
Add IL-2 NN PARAFAC Notebook,0
"imroves constrained_parafac docs and adds example

improve example and api docs

improve the example

imrove example

fix

improve texts",0
"Merge pull request #345 from caglayantuna/nn_tucker_hals_class_doc

nn_tucker hals class, doc, api improvements",0
"Merge pull request #340 from caglayantuna/tensorflow_cast

fix tensorflow dtype issue",0
"nn_tucker hals class, doc, api improvements

update doc

fix indents

edit doc",0
fix tensorflow dtype issue,1
"Merge pull request #344 from MarieRoald/nn_parafac_seed

Adds random_state for non negative PARAFAC HALS",0
Fixed repeating argument due to merge,0
Merge branch 'main' into nn_parafac_seed,0
"Merge pull request #281 from caglayantuna/normalization

Better CP normalisation",0
Updated docstring,0
Added random state for NN PARAFAC HALS,0
"Merge pull request #324 from caglayantuna/copy_cptensor

Adds a `copy` method to CPTensor",0
"copy cptensor

naming cp_copy and adding test for it

copy each factor

remove import copy

new",0
"Merge pull request #339 from caglayantuna/nn_hals_issue

Solves hals rec_error0 issue #338  + pep8 improvements",0
solves hals rec-error0 issue and does some pep improvements,0
normalize inner loop and test normalize,0
hals class normalization,0
fix hals normalization,0
fix normalization,0
Bump version,0
FIX MXNet tests,0
FIX test_tt_matrix test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Fix MXNet test,0
"Merge pull request #334 from caglayantuna/nn_examples

non-negative hals examples",0
"Improved documentation, adds contrained_cp",0
FIX MXNet (no support transpose >6th order tensors),0
"Backend: import count_nonzero, flip and argsort",0
"Merge pull request #284 from caglayantuna/ADMM

Adds constrained parafac",0
"Merge pull request #330 from JeanKossaifi/new2

Backend and tenalg backend refactoring -use a BackendManager class and use it directly as tensorly.backend's Module class",0
FIX tensorflow backend,1
"Adding check for all modes fixed case and if true then to just return the initialization (#325)

* Adding check for all modes fixed case and if true then to just return initialization in CP decomposition - part of issue 292

* Adding check for all modes fixed case and if true then to just return the initialization

Co-authored-by: Parvathy <Parvathy>",0
"Rewrote vonneumann_entropy to handle multidimensional tensors. (#270)

Co-authored-by: tpatti <tpatti@nvidia.com>",0
remove numpy from monotoincity,0
onneagative hals examples,0
improve smoothness test,0
simplex names,0
"better names, optimized functions and argsort",0
Better tt_matrix_to_tensor,0
Tenalg: update manager + add einsum HOM,0
Missing base_tenalg,0
Adds TenalgBackendManager,0
raise value error when validating constraints,0
validate constraints,0
fix a bug,0
fix smoothness test for tensorflow,0
fix smooth and proximal test,0
new API and tests,0
ADMM and constrained parafac,0
"Merge pull request #283 from caglayantuna/Tucker_normalize

Adds a normalization function for Tucker tensors",0
Updated backend: use backend manager as module,0
"Merge pull request #326 from IsabellLehmann/cmtf_als

Add cmtf_als to init file so that it can be imported directly via tl.decomposition",0
README: update Slack join link,0
Merge branch 'tensorly:main' into cmtf_als,0
add cmtf_als to init file,0
weighting core,0
test_tucker_normalize,0
add tucker_normalize,0
remove normalization from tucker,0
update classes,0
fix partial tucker,0
normalization for tucker functions,0
"Merge pull request #293 from IsabellLehmann/cmtf_als

CMTF-ALS",0
"Merge pull request #322 from merajhashemi/mh-matmul

Add test for matmul",0
Slightly tighter testing,0
Remove stale file,0
Fix CMTF code for new interface,0
Remove other additions,0
Remove backend additions,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #323 from caglayantuna/fix_tests

fix active set and hals tests",0
fix active set and hals tests,0
Merge branch 'main' into mh-matmul,0
Minor: Remove wrong import,0
Add randn & matmul to package init,0
Remove unnecessary math.prod,0
Fix TF: 1d matmul,0
Add test for matmul,0
"Merge pull request #320 from merajhashemi/mh-svdorth

Fix  singular vectors to be orthonormal",0
"Merge pull request #321 from caglayantuna/diag

fix diag function for tensorflow and pytorch backends",0
fix diag function,0
Fix order before orthogonalization,0
Add test for svd orthonormality when n_eigenvecs > matrix_rank,0
Fix orthonormality test for svd,0
Fix singular vectors to be orthonormal,0
"Merge pull request #318 from merajhashemi/mh-svd

Fix `tl.partial_svd`",0
"Merge pull request #305 from merajhashemi/mh-lstsq

Add lstsq to backend",0
Add residuals to lstsq,0
Add lstsq to backend,0
Add test to check singular values are finite,0
Fix partial_svd,0
Merge branch 'main' into cmtf_als,0
Typo: math.prod -> utils.prod,0
"Merge pull request #309 from JeanKossaifi/main

Adding Batched Tensor Dot + Simplifying API",0
FIX doc tensordot,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
batched_tensor_dot -> tensordot,0
"Merge pull request #315 from merajhashemi/mh-unfold

Fix `tl.partial_unfold`",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
"Merge pull request #313 from merajhashemi/mh-matmul

Fix dot and matmul in PyTorch and TF",0
"Merge pull request #312 from merajhashemi/mh-pytorchsvd

Fix svd for pytorch < 1.8",0
Fix partial unfold,0
Fix dot & matmul in TF,0
Fix dot in PyTorch,0
Fix pytorch svd,0
FIX MXnet: keep tensors.ndim <= 6 for transpose,0
Add math.prod with failsafe for old version<3.8,0
Typo,0
Update doc for batched_tensor_dot,0
Use faster batched_tensor_dot version,0
Batched-tensordot: simplify API,0
Tests for batched tensorsdot,0
Adds batched-tensordot,0
Adds matmul to PyTorch backend,0
"Merge pull request #229 from merajhashemi/mh-tr

Adds Tensor Ring Decomposition",0
"Merge pull request #306 from JeanKossaifi/main

Adds matmul + fix tensordot pytorch backend + doc",0
Adds matmul + fix tensordot pytorch backend + doc,0
"Merge pull request #294 from aarmey/CP-lstsq-grad

Gradient of the difference norm between a CP and dense tensor",0
"Merge pull request #304 from yngvem/fix-tt-cross-seed

Added random seed for tensor_train_cross",0
Added random seed for tensor_train_cross,0
Fix test for lower accuracy backends,0
Linting,0
Edits based on review,0
Update README.rst,0
Make parafac() robust to complex tensors,0
FIX cp_to_tensor,0
"Merge pull request #295 from caglayantuna/nn_tucker_sparse_coeff

NN-Tucker hals sparsity coefficient issue",0
adds Iterable,0
fix typo,0
Fix tests for JAX/TF,0
Add tests for tensor ring,0
Add tests for `TRTensor`,0
Add random_tr + test,0
Add Tensor Ring implementation,0
Simplify normalization and make loop over modes,0
Initial changes to work on all backends,0
Finish docstring,0
Add testing,0
"fix tucker hals sparsity coefficient

core sparsity

sparsity coefficient",0
Initial implementation,0
delete fms,0
cmtf als,0
fix import error,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #268 from yngvem/wrapper_test

Test utility for class wrappers and some small bugfixes",0
Merged branch 'main' into wrapper_test and storing the errors after Tucker_NN.fit,0
Merge branch 'main' into wrapper_test,0
Added and fixed documentation,0
Updated the contributing guide to include a note about the class interface utility,0
"Merge pull request #280 from caglayantuna/sparse_example

Sparse backend usage section example",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
validate_tt_rank: fix test + check rank realizable through SVD,0
DOC: fix minor doc issues,0
DOC: fix case insensitive clash between fun&class,0
DOC: fix warnings sphinx examples,1
updated sparse example,0
sparse backend usage section example,0
"Merge pull request #282 from earmingol/main

Added random_state to CP and NN_CP when init='random'",0
Fixed missing random_state when init='random' in CP and NN_CP,0
Doc: add CPInit option for init in docstring,0
"Merge pull request #279 from MarieRoald/bugfix_nn_cp_init

Bugfix: Initialising non-negative CP with precomputed decomposition erroneously modified the initialisation",0
"Merge pull request #278 from caglayantuna/new_functions

adding tl.trace and tl.cumsum functions",0
Removed unused argument,0
Removed unused argument,0
"Test that if we initialise nn_cp with a precomputed decomposition, then the init is not modified before fitting the model",0
"Reverted back so all factor matrices are initialised non-negative

Only making the constrained factor matrices non-negative seemed
to make the fitting procedure less stable (higher likelihood of
all-zero components).",0
Added fix for initialisation,0
"Merge pull request #276 from bkmgit/bkmgit-argument-update

current version uses rank rather than ranks",0
tl.trace and tl.cumsum,0
"Merge pull request #277 from VoliCrank/main

Update API reference for non_negative_parafac",0
Update _nn_cp.py,0
current version uses rank rather than ranks,0
"Merge pull request #271 from MarieRoald/bugfix-hals_convergence_bug

Bugfix:HALS convergence checking fails when non-negativity is not imposed on final mode",0
Added fix for the bug,0
Added test that reproduces the error in convergence checking for HALS,0
"Merge pull request #254 from caglayantuna/nn_tucker

Non-negative tucker via HALS",0
optima stepsize for fista,0
edit fista test,0
skip tensorflow for active set test,0
raise error when active set with tensorflow,0
nn tucker hals to init,0
fix tests,0
fix mxnet test issue,0
fix tensor_to_vec,0
"names, any and fix tests",0
decimal and tensor to vec,0
fix active set test,0
notes and tests,0
fix fista and math operators,0
call nnsvd,0
Notes and name edits,0
fix fista initial x issue,0
nnnsvd for initialization,0
fix nn in fista,0
updated names and some edits according to PR review,0
add hals function,0
sparsity,0
improve doc,0
fix docstring,0
fix bugs,0
fix backend issues,0
active set and fista,0
core update and gradient algorithms,0
test function,0
initialize tucker and update core,0
hals function,0
changed terms,0
PEP8,0
nn_tucker function is added,0
Merge remote-tracking branch 'upstream/main' into wrapper_test,0
"Merge pull request #267 from MarieRoald/parafac2_stopping_condition

Minor fixes for PARAFAC2 (#263 and more)",0
Changed max number of iterations to speed up tests,0
"Changed absolute tolerance to 1e-13

Setting it 1000*eps led to problems with single precision, so we set it to 1e-13 which is similar to 1000*eps for double precision",0
Added version changed number,0
Added test for class wrapper of decomposition function,0
Added test for class wrapping of decomposition function,0
Added test for class wrapper,0
Added test for wrapping of tucker tensor,0
Added test for tucker wrappers,0
Fixed so wrapper accepts all correct arguments,0
Added wrapper tests,0
Added utility to test if class-wrappers are correctly made,0
Bump version.,0
Added missing tl.tensor,0
Changed default tolerance to 1000 times the machine precision,0
Added versionchanged for n_iter_max,0
Added docstring for nn_modes and updated Parafac2 class,0
Added test for stopping conditions,0
Added absolute tolerance and updated Parafac2 class,0
Merge remote-tracking branch 'tensorly/main' into parafac2_stopping_condition,0
Adds `any` to the backend,0
"Merge pull request #262 from MarieRoald/hals_only_some_modes

Non negativity in only some modes + congruence_coef",0
Removed unnecessary part of convergence checking,0
Casting the congruence matrix to a numpy array,0
Make random matrices into tensors,0
Removed unused argument,0
Wrapped random signs in a T.tensor,0
Added congruence coefficient,0
Added congruence coefficient,0
Fixed docstring,0
Use builtin congruence coefficient function,0
Changed to use the builtin congruence coefficient,0
Added congruence coefficient computation,0
Changed tolerance,0
Changed tolerance and number of iteration for test,0
"Fixed so the weights are also a TensorLy tensor, not NumPy array",0
Changed random numpy matrices into tensorly tensors,0
Changed so the synthetic components are used to form a CPTensor object,0
Added comment,0
Removed extra space,0
Fixed so HALS is used when constraints are imposed and added warning if all modes are constrained.,0
"Fixed so non negativity is tested after only one iteration, and added checks for warnings if all modes are constrained",0
Merge remote-tracking branch 'tensorly/main' into hals_only_some_modes,0
Testing the unconstrained B-factor matrices in nn-test too.,0
Added tests to ensure that constrained factors are non-negative,0
currect version of cmtf als,0
"Merge pull request #1 from tensorly/main

update master branch",0
Added trig functions (sin and cos) to backends (#256),0
"Merge pull request #216 from merajhashemi/mh-signsvd

Fix svd sign indeterminacy",0
Merge branch 'main' into mh-signsvd,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
Added non-negativity constraints for some modes,0
added non_negative_parafac_hals to __init__,0
Added non-negative HALS for only some modes and unconstrained for others,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
Small fix,0
Capitalize variable names and remove to numpy,0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
Merge branch 'main' into mh-signsvd,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
Merge branch 'main' into mh-signsvd,0
Move svd-flip to backend,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fix svd sign indeterminacy,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Bump version,0
"Merge pull request #489 from cohenjer/hotfix_permute_factors

Hotfix permute factors",0
Update black formatting based on latest version of the linter (#493),0
black lint,0
Fixing tests inputs congruence coefficient,0
more black linting,0
black reformatting,0
removing commented lines,0
fix cp_permute_factors() #487,0
"Merge pull request #485 from meyer-lab/test-einsum

Fix einsum backend and run full test suite against it",0
"Fix factor conjugate, weights=None case",0
Add testing for einsum backend,0
"Fix for f-strings and test compatibility with python 3.7, 3.9 and 3.10 (#482)

Removes f-string syntax that is not supported in Python 3.7. To prevent incompatibilities in the future, the tests (with Numpy backend) are now run on several of the supported Python versions.

Fixes #479 and #473.",0
"Merge pull request #480 from cohenjer/fetch_kinetic

Fetch kinetic",0
Updating docstring and api refs,0
black linting and ticks update,0
Merge branch 'main' into fetch_kinetic,0
adding Kinetic data locally,0
"Moderately speeds up and adds testing for CP, PARAFAC2, and Tucker (#478)

* Test adjustments

* Fix

* Remove index_update from parafac2

* Consolidate CP tests

* Fix torch

* Black formatting

* Add durations to testing output

* More adjustments to speed up parafac2 test times

* Fix test random states

* Fix merge conflicts

* Small fixes

* Small fixes

* Update Github actions

* Fix occasional TTOI error

* Fix mxnet test

* Fix PARAFAC2 normalize factors

* Fixes and black formatting

Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Satisfy linter,0
Temporarily disable Kinetic db test,0
"Merge pull request #472 from cohenjer/correct_indian_pines

Adding indian pines locally and updating loader",0
"Merge pull request #474 from meyer-lab/simplify-parafac2

Remove in-place projection operations in PARAFAC2",0
Changing data from .mat to .npy,0
A little more simplification,0
Remove indexing,0
black linter,0
correcting tests,0
adding indian pines locally and updating loader,0
Update tensorly overview,0
DOC: fix theme link,0
DOC: document backend static and dynamical dispatching,0
Improve doc,0
Use git version of the theme,0
DOC: Revert logo change,0
Try fixing website logo,0
DOC: revert last conf change,0
DOC: remove permalinks,0
Doc: Add SVD interface to API,0
Adds CP-PLSR to API + docstring fix,0
Add corr-index to API,0
Randomized parafac: no verbosity by default,0
Adds cuQuantum pluging,0
Einsum plugin: only reset if not None,0
Update conf for latest theme version,0
Update cite,0
Adds cff citation,0
DOC: clearer API,0
Covid example: Valid REST links,0
Black linting,0
Improve TT-OI and add to API,0
CP: improve doc,0
Add reference for opt-einsum,0
Website: add dropdown,0
TT-TTOI test: increase tolerance,0
FIX Black linting,0
FIX test_tt_TTOI for MXNet,0
DOC: update to maintained jsmin,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
CP: fix undefined unnorml_rec_error,0
FIX test for MXNet,0
CI FIX,0
"CI MXNet test: revert numpy

Identified the issue - MXNet isn't updated to support latest version of NumPy that deprecated np.bool -- reverting to previous one (1.23.1)",0
CI MXNet test: revert to 1.8,0
CI test MXNet: trying to fix,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX validate_tucker_tensor,1
"Merge pull request #434 from MarieRoald/backend_specific

Decorator for backend specific implementations",0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Update setup files,0
bump version + import submodules,0
"Merge pull request #411 from Lili-Zheng-stat/updated_main

Add TTOI functions",0
Fix for bool value in svd,0
Merge branch 'main' of https://github.com/tensorly/tensorly into updated_main,0
"Merge pull request #467 from johnthagen/patch-1

Use a secure link to tensorly.org",0
"Merge pull request #462 from JeanKossaifi/opt-einsum-plugin

Adds opt-einsum path caching plugin",0
FIX sparse backend version check,0
Black formatting,0
Adds documentation for the plugins,0
Use a secure link to tensorly.org,0
Deprecated distutils.LooseVersion -> packaging.version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into opt-einsum-plugin,0
"Merge pull request #466 from JeanKossaifi/indian_pines

Temporarily skip indian_pines test",0
Keep track of original einsum fun,0
Temporarily skip indian_pines test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Bump Python version in tests,0
"Move to f-strings formatting (#464)

* fix: change str.format() to f-strings

* fix: change regular string into f-strings

* fix: indicate minimum supported Python (because of f-strings)

* fix: change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo, change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: change to support Python 3.7

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Update tensorly/contrib/decomposition/_tt_cross.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Black formatting

* More black formatting and fixes

Co-authored-by: Alexander Bakhtin <alexander.bakhtin@tuni.fi>
Co-authored-by: bakhtos <68953985+bakhtos@users.noreply.github.com>
Co-authored-by: Marie Roald <roald.marie@gmail.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>
Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Black fixes,0
Add tests for 4th order tensor,0
Black linting,0
Adds opt-einsum path caching plugin,0
FIX cp_norm: preserve context,0
"Refactors mttkrp

Move unfolding_dot_khatri_rao to tenalg, add einsum version",0
reformat using black,0
Delete unnecessary tl.tensor wrapper as suggested by @merajhashemi,0
Change the n_iter parameter to make it the exact number of iterations instead of half the number of iterations,0
"Merge remote-tracking branch 'upstream/main' into updated_main
Merge the updates from tensorly since the svd_interface is in need for the current tensor-train-OI code",0
Make stylistic changes suggested by @JeanKossaifi,0
Make stylistic changes suggested by @cohenjer,0
"Merge pull request #456 from JeanKossaifi/tt-rank-errors

Tt rank errors",0
"Merge pull request #455 from JeanKossaifi/partial_svd_error

Raise error for users trying to use tl.partial_svd.",0
"Merge pull request #454 from JeanKossaifi/tt_svd

TT improvements + doc",0
FIX errors for TT-rank checks,0
Raise error for users trying to use tl.partial_svd.,0
Adds tensor-ring/train/matrix to the doc,0
Adds TensorTrainRing class,0
"Merge pull request #453 from JeanKossaifi/tt_svd

Adds svd interface to TT and TR, as well as TensorRing class",0
Adds svd option to TTM,0
Formatting,0
Adds TensorRing class,0
Adds svd option to tensor-ring decomposition,0
Adds svd option to TT,0
"FIX: typo, forgotten argument in signature",0
FIX: Black linting,0
Adds option to return the reconstruction errors,0
"Merge pull request #417 from aarmey/callback

Callback interface for CP decomposition",0
"Merge pull request #450 from tensorly/fix-docs

Fix the documentation build by pinning the matplotlib version",0
Update requirements_doc.txt,0
"Merge pull request #435 from meyer-lab/plsr

Adding an implementation of tensor PLS.",0
Reformat for black,0
Formatting code using black,0
test_decomposition_accuracy fix,0
More reasonable conditions for test_optimized_covariance,0
"Reduce test runs, add 2-mode",0
Added docstrings to CP_PLSR tests,0
Add gamma / digamma to backend imports,0
Change naming: x_rank into n_modes in test,0
Fix tests for all backends,0
Use randomized SVD which will always be much faster,0
Change CP solving function; add test on covariance (corrcoef)),0
Fix test for optimized covariance,0
Added optimized covariance test,0
Change Z solving to parafac,0
Change from calling function partial_svd to calling svd_interface,0
Update test_cp_plsr.py,0
"Merge pull request #445 from ssnio/patch-1

Doc fix typo in tensor_basics.rst",0
"Doc fix typo in tensor_basics.rst

Correcting a typo in unfolding size",0
"Merge pull request #437 from caglayantuna/warning_when_fixing_last_mode

Warning when fixing last mode",0
Fix a bug due to changing a variable name in the sequential_prod function.,0
Made stylic changes,0
Fix bugs for rank larger than 1,0
Black formatting,0
Small fix on T.ndim,0
Use partial tucker for HOOI implementation,0
Black formatting,0
Add some more documentation,0
"Update tensorly/decomposition/_tucker.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix other backends,0
Black formatting,0
Remove tucker from iteration initialization,0
Merge branch 'tensorly:main' into plsr,0
"Added CP PLSR tests
 - Adds tests for class function, dimension compatibility,
 decomposition accuracy, and factor properties",0
CP: Avoid creating large Id mat if not needed,0
add fixed modes test for tucker hals,0
adds warning when fixing last mode,0
Some renaming on variables re Marie,0
"Improve readability based on Marie's review

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Remove the last pinv,0
Fix issues from other backends,0
Remove pinv from backend,0
Some testing adjustment and cleanup,0
Use tensordot for readability. Black format.,0
Fix indexing assignment problem,0
Use lstsq() instead of pinv(); use f-string; remove tile(),0
"Decorator for backend specific implementations

Made in collaboration with: Yngve Mardal Moe",0
Remove uneeded exports,0
Remove unneeded backend functions. Add indexing example.,0
Black formatting,0
Make rec_error an argument to the callback,0
Extend callback for sparsity case,0
Add callback to random CP. Fix tests.,0
Update proposed implementation,0
Merge branch 'main' into callback,0
FIX nn_init with new interface,0
Docstring: fix sphinx doc,0
Typo: fix title underline too short.,0
"Merge pull request #429 from aarmey/svd

Move SVD to a common frontend interface",0
Last adjustments,0
Adjust arguments based on review,0
"Rename svd_type to method.

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Add tPLS predict() and transform(),0
Put back sparse SVD,0
Add callable option to svd_funs and resolve issue with torch sign,0
Black linting,0
Add wrapper functions for a versions of arc functions,0
Merge branch 'tensorly:main' into svd,0
"Merge pull request #423 from aarmey/complex-test

Add testing for complex values in CP",0
Merge branch 'main' into complex-test,0
Merge branch 'main' into plsr,0
First try on tensor PLSR fit() function; some addition to backend,0
"Merge pull request #425 from aarmey/fix-mxnet

Fix mxnet testing",0
Add back last testing skip,0
Revert the test changes,0
"Revert ""Try another incantation of mxnet""

This reverts commit f8df1ea4552f5ad5038709a44a6693bf6e8312ba.",0
Merge in revert,0
Remove last test skips,0
Update test_tt_tensor.py,0
Try another incantation of mxnet,0
Last documentation,0
Documentation for svd_checks return value,0
Skip tensorflow and mxnet complex cases,0
Black linting,0
Try to fix tensorflow type promotion,0
"PEP8

Better luck this time.",0
Greatly speed up Jax/tensorflow tests,0
PEP8 (black),0
Linting,0
Fix occasional tolerance issue,0
Fix fixed mode tests,0
Fix torch issue with lists,0
Black linting,0
Found the last missing conj,0
Cleaner test code. Add MTTKRP * tl.conj(f),0
"Update tensorly/cp_tensor.py

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
More serious issue with mttkrp,0
"Merge pull request #424 from aarmey/better-cmtf-init

Better initialization of CMTF ALS",0
Update contributing.rst,0
More cleanup around SVD use,0
Solve circular import,0
Linting,0
More consistent Tucker init,0
More unification across backends,0
More backend cleanup,0
More cleanup,0
More cleanup,0
Remove redundant option,0
Move to only using backend functions with svd,0
Working,0
Refactor SVD to frontend,0
Black formatting,0
Setup basic files,0
Update base.py,0
Hack to test complex numbers,1
Merge branch 'main' into complex-test,0
Cosmetic: PEP8,0
Merge branch 'main' into callback,0
Merge branch 'main' into better-cmtf-init,0
Merge branch 'main' into fix-mxnet,0
"Merge pull request #401 from j6k4m8/apply-black-style

Apply black-style formatting to repository",0
Only run black on tensorly dir,0
Run black on tensorly directory,0
Update documentation,0
Try again,0
Pin to 2.0 but old version,0
Fix type error,0
Update test.yml,0
Better initialization of CMTF ALS,0
Add testing for complex values in CP,0
"Merge pull request #298 from maximeguillaud/master

Make parafac() robust to complex tensors",0
Fixed backend import name,0
Update cp_tensor.py,0
"Merge pull request #420 from MarieRoald/new_test_utils

Add assert allclose and tests for test utils",0
FIX: gamma distribution,0
"Merge pull request #421 from caglayantuna/fix_svd_test

change decimal for randomized_svd",0
Updated signature and added docstring,0
"Merge pull request #407 from aarmey/numpy-tf

Moves tf to the numpy interface",0
More correct type promotion,0
Fixes for edge cases in types,0
change decimal for randomized_svd,0
Fix from merge,0
Merge branch 'main' into numpy-tf,0
Merge branch 'main' into callback,0
FIX cupy backend ( gammad-> digamma),0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
"Merge pull request #419 from aarmey/rm-descending

Remove descending argument in sorting functions",0
Made tests pass with single precision,0
Add assert allclose and tests for test utils,0
"Merge pull request #418 from caglayantuna/reorder_partial_tucker

reorder modes and ranks in partial_tucker",0
Remove descending argument,0
reorder modes and ranks in partial_tucker,0
_validate_cp_tensor now supports 1D factors properly,0
"Merge pull request #371 from aarmey/more-cp-testing

Test for reproducibility of CP",0
Fix,0
Initial draft of a callback function,0
"Merge pull request #415 from Mahmood-Hussain/main

removed numpy copy bug",0
"Merge pull request #404 from caglayantuna/permute_factors_api

Permute factors api",0
"Merge pull request #408 from caglayantuna/add_new_dataset

Adds 2 new dataset",0
tl.tensor and fetch,0
change requests to urllib,0
load_Il2data in example,0
add wavelengths for indian pines,0
change to load_IL2,0
improve dataset information and init,0
add_2_dataset,0
"Merge pull request #406 from aarmey/fix-permute

Tensor permutation fix for Jax",0
removed numpy copy bug,0
remove redundant import,0
"Update plot_permute_factors.py

A few comments improvements",0
adds permute factors example,0
remove unused rank and improve api,0
Remove Seaborn,0
Small Fix,0
Remove Pandas Dependency,0
workflow test.yml: adds mxnet dependency,0
"test workflow: switching to MXNet 2.0

The mxnet.np interface is too partial in MXNet 1.X, switching to beta version of MXNet 2.0.",0
Add TTOI functions,0
Moves tf to the numpy interface,0
Tensor permutation fix for Jax,0
"Merge pull request #362 from borcuttjahns/IL2_Example_Script

Added IL2 PARAFAC Analysis Example Script",0
Update Makefile,0
Move IL2 Example,0
adds constrainedcp to doc,0
ConstrainedCP to init,0
add test for constrained cp class,0
add class,0
adds return errors to tucker,0
adds cp permute factors,0
FIX jax copy method,0
FIX: JAX backend,0
"Merge pull request #400 from j6k4m8/add-black-ci

Add black code style and linting to CI",0
Add constant properties for tf compat,0
Fix tensorflow function names,1
Resolve constants to numpy in tensorflow,0
Remove alias trig functions from mxnet and jax,0
Remove alias trig methods from numpy altogether,0
Remove alias functions for arc-trig fns from numpy,0
Add trig functions and constants to backendmanagtr,0
Add trig functions to core,0
Add trig fns and constants to backend exports,0
Add trig functions to backends,0
Fix black flags,0
Fix branch name in CI,0
Add linting CI,0
Merge branch 'tensorly:main' into main,0
Add exp and log to backend exports,0
Add exp and log to backend exports,0
default axis for tensorflow concatenate,0
PyTorch backend: fix tensordot args,0
Updated for Sphinx,0
"Drop nosetests

It was added as numpy.testing required nose [1], which is no longer the
case for numpy >= 1.15 [2] from 2018 [3].

Testing:
* nosetests fails as some testing code uses pytest-specific features
  (ex: @pytest.mark.parametrize in several files)
* `cd doc && make html` still works fine

[1] https://github.com/tensorly/tensorly/issues/48
[2] https://numpy.org/devdocs/release/1.15.0-notes.html
[3] https://pypi.org/project/numpy/#history",0
fix typo in the doc,0
"indices list doc

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
improve docstring,0
user defined indices list for sample kr,0
fix normalized sparsity test,0
Adds gamma random generator,0
pad_tt_rank: make compatible with tt-matrices,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX pad_tt_rank (indexing),0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
Fix tests,0
Fix Imports Name,0
Big Changes,0
Changes,0
Implemented multiple methods to compute the correlation index,0
Now works for all backends,0
Update similarity.py,0
"merge into one function, pep8 formatting and tl backend compatibility",0
tests for calc_corrindex,0
use tensorly operations instead of numpy,0
CorrIndex implementation for comparing decomposition outputs,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Adds doc for example + fix covid example,0
"Merge pull request #379 from caglayantuna/sparse_robust_pca_issue

Clip function to sparse backend with a_max=None",0
"Merge pull request #381 from caglayantuna/add_log

Adds log function to tensorly",0
add log function to tensorly,0
clip to sparse with amax=None,0
"Merge pull request #378 from JeanKossaifi/main

Adds digamma fun to backend",0
Adds digamma fun to backend,0
"Merge pull request #377 from JeanKossaifi/main

Adds exp to the backend",0
Adds exp to the backend,0
"Merge pull request #361 from cyrillustan/covid_notebook

Add Covid example notebook",0
Merge branch 'tensorly:main' into covid_notebook,0
"Merge pull request #359 from cyrillustan/covid_example

Import COVID-19 systems serology example dataset",0
Minor changes on adding more explanatory texts,0
Merge branch 'covid_example' into covid_notebook,0
Adjust the name in data import testing accordingly,0
"Some changes on importing data, more DESC",0
Merge branch 'covid_example' into covid_notebook,0
Change function name and expand DESC,0
Remove ROC curve; plot everything in matplotlib,0
Changes addressing Jean's comments,0
"Merge pull request #355 from MarieRoald/fix_clip

Fix bug with `tl.clip` for the PyTorch and TensorFlow backends",0
"Merge pull request #356 from MarieRoald/pytorch_sum_keepdims

Add `keepdims` to `tl.sum` with the PyTorch backend",0
"Merge pull request #357 from MarieRoald/pytorch_shape_as_tuple

Make `tl.shape` return tuple for PyTorch backend",0
"Merge pull request #363 from caglayantuna/fix_simplex

simplex projection issue",0
"Merge pull request #367 from caglayantuna/tucker_copy

copy tucker tensor",0
Raise tolerance for float32,0
Unreasonable to expect reproducible SVD,0
Remove change,0
Remove init testing,0
Fixed testing error. Narrowed problem to SVD.,0
Test for reproducibility of factorization,0
Change the structure of Bunch in example accordingly,0
Merge branch 'covid_example' into covid_notebook,0
Change how Bunch object is structured,0
copy tucker tensor,0
fix constrained parafac simplex test,0
Fix Imports Test,0
Address Comments,0
fix casting to int,0
fix simplex prox,0
"Merge pull request #366 from JeanKossaifi/main

Adds matricize function",0
Adds matricize function,0
MXNet backend fix,0
Backend: accept device in tensor,0
Added Example Script,0
Add COVID example notebook,0
Import COVID-19 systems serology example dataset,0
Fixed so shape returns tuple,0
Added test to check if shape returns tuple,0
Add keepdims argument to sum with pytorch backend,0
Added tests for sum function,0
Converted clip limits to single precision,0
Fixed clip bug in tensorflow backend,0
Fixed clip bug in pytorch backend,0
Added regression test for bug with clip,0
Extended test_clip,0
"Merge pull request #348 from borcuttjahns/main

Adds IL-2 stimulation dataset",0
Added license to Bunch,0
"Add docstring, and .DESC to data",0
Added a test,0
"Add metadata, bunch function",0
"Relocate data, remove example for now",0
"Merge pull request #347 from caglayantuna/constrained_cp_gallery

Constrained parafac example and improved docstrings",0
Initial edits,0
"Merge pull request #1 from borcuttjahns/IL2_Example_Notebook

Add IL-2 NN PARAFAC Notebook",0
Add IL-2 NN PARAFAC Notebook,0
"imroves constrained_parafac docs and adds example

improve example and api docs

improve the example

imrove example

fix

improve texts",0
"Merge pull request #345 from caglayantuna/nn_tucker_hals_class_doc

nn_tucker hals class, doc, api improvements",0
"Merge pull request #340 from caglayantuna/tensorflow_cast

fix tensorflow dtype issue",0
"nn_tucker hals class, doc, api improvements

update doc

fix indents

edit doc",0
fix tensorflow dtype issue,1
"Merge pull request #344 from MarieRoald/nn_parafac_seed

Adds random_state for non negative PARAFAC HALS",0
Fixed repeating argument due to merge,0
Merge branch 'main' into nn_parafac_seed,0
"Merge pull request #281 from caglayantuna/normalization

Better CP normalisation",0
Updated docstring,0
Added random state for NN PARAFAC HALS,0
"Merge pull request #324 from caglayantuna/copy_cptensor

Adds a `copy` method to CPTensor",0
"copy cptensor

naming cp_copy and adding test for it

copy each factor

remove import copy

new",0
"Merge pull request #339 from caglayantuna/nn_hals_issue

Solves hals rec_error0 issue #338  + pep8 improvements",0
solves hals rec-error0 issue and does some pep improvements,0
normalize inner loop and test normalize,0
hals class normalization,0
fix hals normalization,0
fix normalization,0
Bump version,0
FIX MXNet tests,0
FIX test_tt_matrix test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Fix MXNet test,0
"Merge pull request #334 from caglayantuna/nn_examples

non-negative hals examples",0
"Improved documentation, adds contrained_cp",0
FIX MXNet (no support transpose >6th order tensors),0
"Backend: import count_nonzero, flip and argsort",0
"Merge pull request #284 from caglayantuna/ADMM

Adds constrained parafac",0
"Merge pull request #330 from JeanKossaifi/new2

Backend and tenalg backend refactoring -use a BackendManager class and use it directly as tensorly.backend's Module class",0
FIX tensorflow backend,1
"Adding check for all modes fixed case and if true then to just return the initialization (#325)

* Adding check for all modes fixed case and if true then to just return initialization in CP decomposition - part of issue 292

* Adding check for all modes fixed case and if true then to just return the initialization

Co-authored-by: Parvathy <Parvathy>",0
"Rewrote vonneumann_entropy to handle multidimensional tensors. (#270)

Co-authored-by: tpatti <tpatti@nvidia.com>",0
remove numpy from monotoincity,0
onneagative hals examples,0
improve smoothness test,0
simplex names,0
"better names, optimized functions and argsort",0
Better tt_matrix_to_tensor,0
Tenalg: update manager + add einsum HOM,0
Missing base_tenalg,0
Adds TenalgBackendManager,0
raise value error when validating constraints,0
validate constraints,0
fix a bug,0
fix smoothness test for tensorflow,0
fix smooth and proximal test,0
new API and tests,0
ADMM and constrained parafac,0
"Merge pull request #283 from caglayantuna/Tucker_normalize

Adds a normalization function for Tucker tensors",0
Updated backend: use backend manager as module,0
"Merge pull request #326 from IsabellLehmann/cmtf_als

Add cmtf_als to init file so that it can be imported directly via tl.decomposition",0
README: update Slack join link,0
Merge branch 'tensorly:main' into cmtf_als,0
add cmtf_als to init file,0
weighting core,0
test_tucker_normalize,0
add tucker_normalize,0
remove normalization from tucker,0
update classes,0
fix partial tucker,0
normalization for tucker functions,0
"Merge pull request #293 from IsabellLehmann/cmtf_als

CMTF-ALS",0
"Merge pull request #322 from merajhashemi/mh-matmul

Add test for matmul",0
Slightly tighter testing,0
Remove stale file,0
Fix CMTF code for new interface,0
Remove other additions,0
Remove backend additions,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #323 from caglayantuna/fix_tests

fix active set and hals tests",0
fix active set and hals tests,0
Merge branch 'main' into mh-matmul,0
Minor: Remove wrong import,0
Add randn & matmul to package init,0
Remove unnecessary math.prod,0
Fix TF: 1d matmul,0
Add test for matmul,0
"Merge pull request #320 from merajhashemi/mh-svdorth

Fix  singular vectors to be orthonormal",0
"Merge pull request #321 from caglayantuna/diag

fix diag function for tensorflow and pytorch backends",0
fix diag function,0
Fix order before orthogonalization,0
Add test for svd orthonormality when n_eigenvecs > matrix_rank,0
Fix orthonormality test for svd,0
Fix singular vectors to be orthonormal,0
"Merge pull request #318 from merajhashemi/mh-svd

Fix `tl.partial_svd`",0
"Merge pull request #305 from merajhashemi/mh-lstsq

Add lstsq to backend",0
Add residuals to lstsq,0
Add lstsq to backend,0
Add test to check singular values are finite,0
Fix partial_svd,0
Merge branch 'main' into cmtf_als,0
Typo: math.prod -> utils.prod,0
"Merge pull request #309 from JeanKossaifi/main

Adding Batched Tensor Dot + Simplifying API",0
FIX doc tensordot,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
batched_tensor_dot -> tensordot,0
"Merge pull request #315 from merajhashemi/mh-unfold

Fix `tl.partial_unfold`",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
"Merge pull request #313 from merajhashemi/mh-matmul

Fix dot and matmul in PyTorch and TF",0
"Merge pull request #312 from merajhashemi/mh-pytorchsvd

Fix svd for pytorch < 1.8",0
Fix partial unfold,0
Fix dot & matmul in TF,0
Fix dot in PyTorch,0
Fix pytorch svd,0
FIX MXnet: keep tensors.ndim <= 6 for transpose,0
Add math.prod with failsafe for old version<3.8,0
Typo,0
Update doc for batched_tensor_dot,0
Use faster batched_tensor_dot version,0
Batched-tensordot: simplify API,0
Tests for batched tensorsdot,0
Adds batched-tensordot,0
Adds matmul to PyTorch backend,0
"Merge pull request #229 from merajhashemi/mh-tr

Adds Tensor Ring Decomposition",0
"Merge pull request #306 from JeanKossaifi/main

Adds matmul + fix tensordot pytorch backend + doc",0
Adds matmul + fix tensordot pytorch backend + doc,0
"Merge pull request #294 from aarmey/CP-lstsq-grad

Gradient of the difference norm between a CP and dense tensor",0
"Merge pull request #304 from yngvem/fix-tt-cross-seed

Added random seed for tensor_train_cross",0
Added random seed for tensor_train_cross,0
Fix test for lower accuracy backends,0
Linting,0
Edits based on review,0
Update README.rst,0
Make parafac() robust to complex tensors,0
FIX cp_to_tensor,0
"Merge pull request #295 from caglayantuna/nn_tucker_sparse_coeff

NN-Tucker hals sparsity coefficient issue",0
adds Iterable,0
fix typo,0
Fix tests for JAX/TF,0
Add tests for tensor ring,0
Add tests for `TRTensor`,0
Add random_tr + test,0
Add Tensor Ring implementation,0
Simplify normalization and make loop over modes,0
Initial changes to work on all backends,0
Finish docstring,0
Add testing,0
"fix tucker hals sparsity coefficient

core sparsity

sparsity coefficient",0
Initial implementation,0
delete fms,0
cmtf als,0
fix import error,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #268 from yngvem/wrapper_test

Test utility for class wrappers and some small bugfixes",0
Merged branch 'main' into wrapper_test and storing the errors after Tucker_NN.fit,0
Merge branch 'main' into wrapper_test,0
Added and fixed documentation,0
Updated the contributing guide to include a note about the class interface utility,0
"Merge pull request #280 from caglayantuna/sparse_example

Sparse backend usage section example",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
validate_tt_rank: fix test + check rank realizable through SVD,0
DOC: fix minor doc issues,0
DOC: fix case insensitive clash between fun&class,0
DOC: fix warnings sphinx examples,1
updated sparse example,0
sparse backend usage section example,0
"Merge pull request #282 from earmingol/main

Added random_state to CP and NN_CP when init='random'",0
Fixed missing random_state when init='random' in CP and NN_CP,0
Doc: add CPInit option for init in docstring,0
"Merge pull request #279 from MarieRoald/bugfix_nn_cp_init

Bugfix: Initialising non-negative CP with precomputed decomposition erroneously modified the initialisation",0
"Merge pull request #278 from caglayantuna/new_functions

adding tl.trace and tl.cumsum functions",0
Removed unused argument,0
Removed unused argument,0
"Test that if we initialise nn_cp with a precomputed decomposition, then the init is not modified before fitting the model",0
"Reverted back so all factor matrices are initialised non-negative

Only making the constrained factor matrices non-negative seemed
to make the fitting procedure less stable (higher likelihood of
all-zero components).",0
Added fix for initialisation,0
"Merge pull request #276 from bkmgit/bkmgit-argument-update

current version uses rank rather than ranks",0
tl.trace and tl.cumsum,0
"Merge pull request #277 from VoliCrank/main

Update API reference for non_negative_parafac",0
Update _nn_cp.py,0
current version uses rank rather than ranks,0
"Merge pull request #271 from MarieRoald/bugfix-hals_convergence_bug

Bugfix:HALS convergence checking fails when non-negativity is not imposed on final mode",0
Added fix for the bug,0
Added test that reproduces the error in convergence checking for HALS,0
"Merge pull request #254 from caglayantuna/nn_tucker

Non-negative tucker via HALS",0
optima stepsize for fista,0
edit fista test,0
skip tensorflow for active set test,0
raise error when active set with tensorflow,0
nn tucker hals to init,0
fix tests,0
fix mxnet test issue,0
fix tensor_to_vec,0
"names, any and fix tests",0
decimal and tensor to vec,0
fix active set test,0
notes and tests,0
fix fista and math operators,0
call nnsvd,0
Notes and name edits,0
fix fista initial x issue,0
nnnsvd for initialization,0
fix nn in fista,0
updated names and some edits according to PR review,0
add hals function,0
sparsity,0
improve doc,0
fix docstring,0
fix bugs,0
fix backend issues,0
active set and fista,0
core update and gradient algorithms,0
test function,0
initialize tucker and update core,0
hals function,0
changed terms,0
PEP8,0
nn_tucker function is added,0
Merge remote-tracking branch 'upstream/main' into wrapper_test,0
"Merge pull request #267 from MarieRoald/parafac2_stopping_condition

Minor fixes for PARAFAC2 (#263 and more)",0
Changed max number of iterations to speed up tests,0
"Changed absolute tolerance to 1e-13

Setting it 1000*eps led to problems with single precision, so we set it to 1e-13 which is similar to 1000*eps for double precision",0
Added version changed number,0
Added test for class wrapper of decomposition function,0
Added test for class wrapping of decomposition function,0
Added test for class wrapper,0
Added test for wrapping of tucker tensor,0
Added test for tucker wrappers,0
Fixed so wrapper accepts all correct arguments,0
Added wrapper tests,0
Added utility to test if class-wrappers are correctly made,0
Bump version.,0
Added missing tl.tensor,0
Changed default tolerance to 1000 times the machine precision,0
Added versionchanged for n_iter_max,0
Added docstring for nn_modes and updated Parafac2 class,0
Added test for stopping conditions,0
Added absolute tolerance and updated Parafac2 class,0
Merge remote-tracking branch 'tensorly/main' into parafac2_stopping_condition,0
Adds `any` to the backend,0
"Merge pull request #262 from MarieRoald/hals_only_some_modes

Non negativity in only some modes + congruence_coef",0
Removed unnecessary part of convergence checking,0
Casting the congruence matrix to a numpy array,0
Make random matrices into tensors,0
Removed unused argument,0
Wrapped random signs in a T.tensor,0
Added congruence coefficient,0
Added congruence coefficient,0
Fixed docstring,0
Use builtin congruence coefficient function,0
Changed to use the builtin congruence coefficient,0
Added congruence coefficient computation,0
Changed tolerance,0
Changed tolerance and number of iteration for test,0
"Fixed so the weights are also a TensorLy tensor, not NumPy array",0
Changed random numpy matrices into tensorly tensors,0
Changed so the synthetic components are used to form a CPTensor object,0
Added comment,0
Removed extra space,0
Fixed so HALS is used when constraints are imposed and added warning if all modes are constrained.,0
"Fixed so non negativity is tested after only one iteration, and added checks for warnings if all modes are constrained",0
Merge remote-tracking branch 'tensorly/main' into hals_only_some_modes,0
Testing the unconstrained B-factor matrices in nn-test too.,0
Added tests to ensure that constrained factors are non-negative,0
currect version of cmtf als,0
"Merge pull request #1 from tensorly/main

update master branch",0
Added trig functions (sin and cos) to backends (#256),0
"Merge pull request #216 from merajhashemi/mh-signsvd

Fix svd sign indeterminacy",0
Merge branch 'main' into mh-signsvd,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
Added non-negativity constraints for some modes,0
added non_negative_parafac_hals to __init__,0
Added non-negative HALS for only some modes and unconstrained for others,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
Small fix,0
Capitalize variable names and remove to numpy,0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
Merge branch 'main' into mh-signsvd,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
Merge branch 'main' into mh-signsvd,0
Move svd-flip to backend,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fix svd sign indeterminacy,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
"Merge pull request #472 from cohenjer/correct_indian_pines

Adding indian pines locally and updating loader",0
"Merge pull request #474 from meyer-lab/simplify-parafac2

Remove in-place projection operations in PARAFAC2",0
Changing data from .mat to .npy,0
A little more simplification,0
Remove indexing,0
black linter,0
correcting tests,0
adding indian pines locally and updating loader,0
Update tensorly overview,0
DOC: fix theme link,0
DOC: document backend static and dynamical dispatching,0
Improve doc,0
Use git version of the theme,0
DOC: Revert logo change,0
Try fixing website logo,0
DOC: revert last conf change,0
DOC: remove permalinks,0
Doc: Add SVD interface to API,0
Adds CP-PLSR to API + docstring fix,0
Add corr-index to API,0
Randomized parafac: no verbosity by default,0
Adds cuQuantum pluging,0
Einsum plugin: only reset if not None,0
Update conf for latest theme version,0
Update cite,0
Adds cff citation,0
DOC: clearer API,0
Covid example: Valid REST links,0
Black linting,0
Improve TT-OI and add to API,0
CP: improve doc,0
Add reference for opt-einsum,0
Website: add dropdown,0
TT-TTOI test: increase tolerance,0
FIX Black linting,0
FIX test_tt_TTOI for MXNet,0
DOC: update to maintained jsmin,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
CP: fix undefined unnorml_rec_error,0
FIX test for MXNet,0
CI FIX,0
"CI MXNet test: revert numpy

Identified the issue - MXNet isn't updated to support latest version of NumPy that deprecated np.bool -- reverting to previous one (1.23.1)",0
CI MXNet test: revert to 1.8,0
CI test MXNet: trying to fix,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX validate_tucker_tensor,1
"Merge pull request #434 from MarieRoald/backend_specific

Decorator for backend specific implementations",0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Update setup files,0
bump version + import submodules,0
"Merge pull request #411 from Lili-Zheng-stat/updated_main

Add TTOI functions",0
Fix for bool value in svd,0
Merge branch 'main' of https://github.com/tensorly/tensorly into updated_main,0
"Merge pull request #467 from johnthagen/patch-1

Use a secure link to tensorly.org",0
"Merge pull request #462 from JeanKossaifi/opt-einsum-plugin

Adds opt-einsum path caching plugin",0
FIX sparse backend version check,0
Black formatting,0
Adds documentation for the plugins,0
Use a secure link to tensorly.org,0
Deprecated distutils.LooseVersion -> packaging.version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into opt-einsum-plugin,0
"Merge pull request #466 from JeanKossaifi/indian_pines

Temporarily skip indian_pines test",0
Keep track of original einsum fun,0
Temporarily skip indian_pines test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Bump Python version in tests,0
"Move to f-strings formatting (#464)

* fix: change str.format() to f-strings

* fix: change regular string into f-strings

* fix: indicate minimum supported Python (because of f-strings)

* fix: change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo, change to support Python 3.7 and shorten line

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: typo

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* fix: change to support Python 3.7

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Update tensorly/contrib/decomposition/_tt_cross.py

Co-authored-by: Marie Roald <roald.marie@gmail.com>

* Black formatting

* More black formatting and fixes

Co-authored-by: Alexander Bakhtin <alexander.bakhtin@tuni.fi>
Co-authored-by: bakhtos <68953985+bakhtos@users.noreply.github.com>
Co-authored-by: Marie Roald <roald.marie@gmail.com>
Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>
Co-authored-by: Aaron Meyer <github@asmlab.org>",0
Black fixes,0
Add tests for 4th order tensor,0
Black linting,0
Adds opt-einsum path caching plugin,0
FIX cp_norm: preserve context,0
"Refactors mttkrp

Move unfolding_dot_khatri_rao to tenalg, add einsum version",0
reformat using black,0
Delete unnecessary tl.tensor wrapper as suggested by @merajhashemi,0
Change the n_iter parameter to make it the exact number of iterations instead of half the number of iterations,0
"Merge remote-tracking branch 'upstream/main' into updated_main
Merge the updates from tensorly since the svd_interface is in need for the current tensor-train-OI code",0
Make stylistic changes suggested by @JeanKossaifi,0
Make stylistic changes suggested by @cohenjer,0
"Merge pull request #456 from JeanKossaifi/tt-rank-errors

Tt rank errors",0
"Merge pull request #455 from JeanKossaifi/partial_svd_error

Raise error for users trying to use tl.partial_svd.",0
"Merge pull request #454 from JeanKossaifi/tt_svd

TT improvements + doc",0
FIX errors for TT-rank checks,0
Raise error for users trying to use tl.partial_svd.,0
Adds tensor-ring/train/matrix to the doc,0
Adds TensorTrainRing class,0
"Merge pull request #453 from JeanKossaifi/tt_svd

Adds svd interface to TT and TR, as well as TensorRing class",0
Adds svd option to TTM,0
Formatting,0
Adds TensorRing class,0
Adds svd option to tensor-ring decomposition,0
Adds svd option to TT,0
"FIX: typo, forgotten argument in signature",0
FIX: Black linting,0
Adds option to return the reconstruction errors,0
"Merge pull request #417 from aarmey/callback

Callback interface for CP decomposition",0
"Merge pull request #450 from tensorly/fix-docs

Fix the documentation build by pinning the matplotlib version",0
Update requirements_doc.txt,0
"Merge pull request #435 from meyer-lab/plsr

Adding an implementation of tensor PLS.",0
Reformat for black,0
Formatting code using black,0
test_decomposition_accuracy fix,0
More reasonable conditions for test_optimized_covariance,0
"Reduce test runs, add 2-mode",0
Added docstrings to CP_PLSR tests,0
Add gamma / digamma to backend imports,0
Change naming: x_rank into n_modes in test,0
Fix tests for all backends,0
Use randomized SVD which will always be much faster,0
Change CP solving function; add test on covariance (corrcoef)),0
Fix test for optimized covariance,0
Added optimized covariance test,0
Change Z solving to parafac,0
Change from calling function partial_svd to calling svd_interface,0
Update test_cp_plsr.py,0
"Merge pull request #445 from ssnio/patch-1

Doc fix typo in tensor_basics.rst",0
"Doc fix typo in tensor_basics.rst

Correcting a typo in unfolding size",0
"Merge pull request #437 from caglayantuna/warning_when_fixing_last_mode

Warning when fixing last mode",0
Fix a bug due to changing a variable name in the sequential_prod function.,0
Made stylic changes,0
Fix bugs for rank larger than 1,0
Black formatting,0
Small fix on T.ndim,0
Use partial tucker for HOOI implementation,0
Black formatting,0
Add some more documentation,0
"Update tensorly/decomposition/_tucker.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix other backends,0
Black formatting,0
Remove tucker from iteration initialization,0
Merge branch 'tensorly:main' into plsr,0
"Added CP PLSR tests
 - Adds tests for class function, dimension compatibility,
 decomposition accuracy, and factor properties",0
CP: Avoid creating large Id mat if not needed,0
add fixed modes test for tucker hals,0
adds warning when fixing last mode,0
Some renaming on variables re Marie,0
"Improve readability based on Marie's review

Co-authored-by: Marie Roald <roald.marie@gmail.com>",0
Remove the last pinv,0
Fix issues from other backends,0
Remove pinv from backend,0
Some testing adjustment and cleanup,0
Use tensordot for readability. Black format.,0
Fix indexing assignment problem,0
Use lstsq() instead of pinv(); use f-string; remove tile(),0
"Decorator for backend specific implementations

Made in collaboration with: Yngve Mardal Moe",0
Remove uneeded exports,0
Remove unneeded backend functions. Add indexing example.,0
Black formatting,0
Make rec_error an argument to the callback,0
Extend callback for sparsity case,0
Add callback to random CP. Fix tests.,0
Update proposed implementation,0
Merge branch 'main' into callback,0
FIX nn_init with new interface,0
Docstring: fix sphinx doc,0
Typo: fix title underline too short.,0
"Merge pull request #429 from aarmey/svd

Move SVD to a common frontend interface",0
Last adjustments,0
Adjust arguments based on review,0
"Rename svd_type to method.

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Add tPLS predict() and transform(),0
Put back sparse SVD,0
Add callable option to svd_funs and resolve issue with torch sign,0
Black linting,0
Add wrapper functions for a versions of arc functions,0
Merge branch 'tensorly:main' into svd,0
"Merge pull request #423 from aarmey/complex-test

Add testing for complex values in CP",0
Merge branch 'main' into complex-test,0
Merge branch 'main' into plsr,0
First try on tensor PLSR fit() function; some addition to backend,0
"Merge pull request #425 from aarmey/fix-mxnet

Fix mxnet testing",0
Add back last testing skip,0
Revert the test changes,0
"Revert ""Try another incantation of mxnet""

This reverts commit f8df1ea4552f5ad5038709a44a6693bf6e8312ba.",0
Merge in revert,0
Remove last test skips,0
Update test_tt_tensor.py,0
Try another incantation of mxnet,0
Last documentation,0
Documentation for svd_checks return value,0
Skip tensorflow and mxnet complex cases,0
Black linting,0
Try to fix tensorflow type promotion,0
"PEP8

Better luck this time.",0
Greatly speed up Jax/tensorflow tests,0
PEP8 (black),0
Linting,0
Fix occasional tolerance issue,0
Fix fixed mode tests,0
Fix torch issue with lists,0
Black linting,0
Found the last missing conj,0
Cleaner test code. Add MTTKRP * tl.conj(f),0
"Update tensorly/cp_tensor.py

Co-authored-by: Yngve Mardal Moe <yngve.m.moe@gmail.com>",0
More serious issue with mttkrp,0
"Merge pull request #424 from aarmey/better-cmtf-init

Better initialization of CMTF ALS",0
Update contributing.rst,0
More cleanup around SVD use,0
Solve circular import,0
Linting,0
More consistent Tucker init,0
More unification across backends,0
More backend cleanup,0
More cleanup,0
More cleanup,0
Remove redundant option,0
Move to only using backend functions with svd,0
Working,0
Refactor SVD to frontend,0
Black formatting,0
Setup basic files,0
Update base.py,0
Hack to test complex numbers,1
Merge branch 'main' into complex-test,0
Cosmetic: PEP8,0
Merge branch 'main' into callback,0
Merge branch 'main' into better-cmtf-init,0
Merge branch 'main' into fix-mxnet,0
"Merge pull request #401 from j6k4m8/apply-black-style

Apply black-style formatting to repository",0
Only run black on tensorly dir,0
Run black on tensorly directory,0
Update documentation,0
Try again,0
Pin to 2.0 but old version,0
Fix type error,0
Update test.yml,0
Better initialization of CMTF ALS,0
Add testing for complex values in CP,0
"Merge pull request #298 from maximeguillaud/master

Make parafac() robust to complex tensors",0
Fixed backend import name,0
Update cp_tensor.py,0
"Merge pull request #420 from MarieRoald/new_test_utils

Add assert allclose and tests for test utils",0
FIX: gamma distribution,0
"Merge pull request #421 from caglayantuna/fix_svd_test

change decimal for randomized_svd",0
Updated signature and added docstring,0
"Merge pull request #407 from aarmey/numpy-tf

Moves tf to the numpy interface",0
More correct type promotion,0
Fixes for edge cases in types,0
change decimal for randomized_svd,0
Fix from merge,0
Merge branch 'main' into numpy-tf,0
Merge branch 'main' into callback,0
FIX cupy backend ( gammad-> digamma),0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
"Merge pull request #419 from aarmey/rm-descending

Remove descending argument in sorting functions",0
Made tests pass with single precision,0
Add assert allclose and tests for test utils,0
"Merge pull request #418 from caglayantuna/reorder_partial_tucker

reorder modes and ranks in partial_tucker",0
Remove descending argument,0
reorder modes and ranks in partial_tucker,0
_validate_cp_tensor now supports 1D factors properly,0
"Merge pull request #371 from aarmey/more-cp-testing

Test for reproducibility of CP",0
Fix,0
Initial draft of a callback function,0
"Merge pull request #415 from Mahmood-Hussain/main

removed numpy copy bug",0
"Merge pull request #404 from caglayantuna/permute_factors_api

Permute factors api",0
"Merge pull request #408 from caglayantuna/add_new_dataset

Adds 2 new dataset",0
tl.tensor and fetch,0
change requests to urllib,0
load_Il2data in example,0
add wavelengths for indian pines,0
change to load_IL2,0
improve dataset information and init,0
add_2_dataset,0
"Merge pull request #406 from aarmey/fix-permute

Tensor permutation fix for Jax",0
removed numpy copy bug,0
remove redundant import,0
"Update plot_permute_factors.py

A few comments improvements",0
adds permute factors example,0
remove unused rank and improve api,0
Remove Seaborn,0
Small Fix,0
Remove Pandas Dependency,0
workflow test.yml: adds mxnet dependency,0
"test workflow: switching to MXNet 2.0

The mxnet.np interface is too partial in MXNet 1.X, switching to beta version of MXNet 2.0.",0
Add TTOI functions,0
Moves tf to the numpy interface,0
Tensor permutation fix for Jax,0
"Merge pull request #362 from borcuttjahns/IL2_Example_Script

Added IL2 PARAFAC Analysis Example Script",0
Update Makefile,0
Move IL2 Example,0
adds constrainedcp to doc,0
ConstrainedCP to init,0
add test for constrained cp class,0
add class,0
adds return errors to tucker,0
adds cp permute factors,0
FIX jax copy method,0
FIX: JAX backend,0
"Merge pull request #400 from j6k4m8/add-black-ci

Add black code style and linting to CI",0
Add constant properties for tf compat,0
Fix tensorflow function names,1
Resolve constants to numpy in tensorflow,0
Remove alias trig functions from mxnet and jax,0
Remove alias trig methods from numpy altogether,0
Remove alias functions for arc-trig fns from numpy,0
Add trig functions and constants to backendmanagtr,0
Add trig functions to core,0
Add trig fns and constants to backend exports,0
Add trig functions to backends,0
Fix black flags,0
Fix branch name in CI,0
Add linting CI,0
Merge branch 'tensorly:main' into main,0
Add exp and log to backend exports,0
Add exp and log to backend exports,0
default axis for tensorflow concatenate,0
PyTorch backend: fix tensordot args,0
Updated for Sphinx,0
"Drop nosetests

It was added as numpy.testing required nose [1], which is no longer the
case for numpy >= 1.15 [2] from 2018 [3].

Testing:
* nosetests fails as some testing code uses pytest-specific features
  (ex: @pytest.mark.parametrize in several files)
* `cd doc && make html` still works fine

[1] https://github.com/tensorly/tensorly/issues/48
[2] https://numpy.org/devdocs/release/1.15.0-notes.html
[3] https://pypi.org/project/numpy/#history",0
fix typo in the doc,0
"indices list doc

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
improve docstring,0
user defined indices list for sample kr,0
fix normalized sparsity test,0
Adds gamma random generator,0
pad_tt_rank: make compatible with tt-matrices,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
FIX pad_tt_rank (indexing),0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
FIX + doc,0
Better naming,0
Adds padding of rank for tensor-train,0
Fix tests,0
Fix Imports Name,0
Big Changes,0
Changes,0
Implemented multiple methods to compute the correlation index,0
Now works for all backends,0
Update similarity.py,0
"merge into one function, pep8 formatting and tl backend compatibility",0
tests for calc_corrindex,0
use tensorly operations instead of numpy,0
CorrIndex implementation for comparing decomposition outputs,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Adds doc for example + fix covid example,0
"Merge pull request #379 from caglayantuna/sparse_robust_pca_issue

Clip function to sparse backend with a_max=None",0
"Merge pull request #381 from caglayantuna/add_log

Adds log function to tensorly",0
add log function to tensorly,0
clip to sparse with amax=None,0
"Merge pull request #378 from JeanKossaifi/main

Adds digamma fun to backend",0
Adds digamma fun to backend,0
"Merge pull request #377 from JeanKossaifi/main

Adds exp to the backend",0
Adds exp to the backend,0
"Merge pull request #361 from cyrillustan/covid_notebook

Add Covid example notebook",0
Merge branch 'tensorly:main' into covid_notebook,0
"Merge pull request #359 from cyrillustan/covid_example

Import COVID-19 systems serology example dataset",0
Minor changes on adding more explanatory texts,0
Merge branch 'covid_example' into covid_notebook,0
Adjust the name in data import testing accordingly,0
"Some changes on importing data, more DESC",0
Merge branch 'covid_example' into covid_notebook,0
Change function name and expand DESC,0
Remove ROC curve; plot everything in matplotlib,0
Changes addressing Jean's comments,0
"Merge pull request #355 from MarieRoald/fix_clip

Fix bug with `tl.clip` for the PyTorch and TensorFlow backends",0
"Merge pull request #356 from MarieRoald/pytorch_sum_keepdims

Add `keepdims` to `tl.sum` with the PyTorch backend",0
"Merge pull request #357 from MarieRoald/pytorch_shape_as_tuple

Make `tl.shape` return tuple for PyTorch backend",0
"Merge pull request #363 from caglayantuna/fix_simplex

simplex projection issue",0
"Merge pull request #367 from caglayantuna/tucker_copy

copy tucker tensor",0
Raise tolerance for float32,0
Unreasonable to expect reproducible SVD,0
Remove change,0
Remove init testing,0
Fixed testing error. Narrowed problem to SVD.,0
Test for reproducibility of factorization,0
Change the structure of Bunch in example accordingly,0
Merge branch 'covid_example' into covid_notebook,0
Change how Bunch object is structured,0
copy tucker tensor,0
fix constrained parafac simplex test,0
Fix Imports Test,0
Address Comments,0
fix casting to int,0
fix simplex prox,0
"Merge pull request #366 from JeanKossaifi/main

Adds matricize function",0
Adds matricize function,0
MXNet backend fix,0
Backend: accept device in tensor,0
Added Example Script,0
Add COVID example notebook,0
Import COVID-19 systems serology example dataset,0
Fixed so shape returns tuple,0
Added test to check if shape returns tuple,0
Add keepdims argument to sum with pytorch backend,0
Added tests for sum function,0
Converted clip limits to single precision,0
Fixed clip bug in tensorflow backend,0
Fixed clip bug in pytorch backend,0
Added regression test for bug with clip,0
Extended test_clip,0
"Merge pull request #348 from borcuttjahns/main

Adds IL-2 stimulation dataset",0
Added license to Bunch,0
"Add docstring, and .DESC to data",0
Added a test,0
"Add metadata, bunch function",0
"Relocate data, remove example for now",0
"Merge pull request #347 from caglayantuna/constrained_cp_gallery

Constrained parafac example and improved docstrings",0
Initial edits,0
"Merge pull request #1 from borcuttjahns/IL2_Example_Notebook

Add IL-2 NN PARAFAC Notebook",0
Add IL-2 NN PARAFAC Notebook,0
"imroves constrained_parafac docs and adds example

improve example and api docs

improve the example

imrove example

fix

improve texts",0
"Merge pull request #345 from caglayantuna/nn_tucker_hals_class_doc

nn_tucker hals class, doc, api improvements",0
"Merge pull request #340 from caglayantuna/tensorflow_cast

fix tensorflow dtype issue",0
"nn_tucker hals class, doc, api improvements

update doc

fix indents

edit doc",0
fix tensorflow dtype issue,1
"Merge pull request #344 from MarieRoald/nn_parafac_seed

Adds random_state for non negative PARAFAC HALS",0
Fixed repeating argument due to merge,0
Merge branch 'main' into nn_parafac_seed,0
"Merge pull request #281 from caglayantuna/normalization

Better CP normalisation",0
Updated docstring,0
Added random state for NN PARAFAC HALS,0
"Merge pull request #324 from caglayantuna/copy_cptensor

Adds a `copy` method to CPTensor",0
"copy cptensor

naming cp_copy and adding test for it

copy each factor

remove import copy

new",0
"Merge pull request #339 from caglayantuna/nn_hals_issue

Solves hals rec_error0 issue #338  + pep8 improvements",0
solves hals rec-error0 issue and does some pep improvements,0
normalize inner loop and test normalize,0
hals class normalization,0
fix hals normalization,0
fix normalization,0
Bump version,0
FIX MXNet tests,0
FIX test_tt_matrix test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Fix MXNet test,0
"Merge pull request #334 from caglayantuna/nn_examples

non-negative hals examples",0
"Improved documentation, adds contrained_cp",0
FIX MXNet (no support transpose >6th order tensors),0
"Backend: import count_nonzero, flip and argsort",0
"Merge pull request #284 from caglayantuna/ADMM

Adds constrained parafac",0
"Merge pull request #330 from JeanKossaifi/new2

Backend and tenalg backend refactoring -use a BackendManager class and use it directly as tensorly.backend's Module class",0
FIX tensorflow backend,1
"Adding check for all modes fixed case and if true then to just return the initialization (#325)

* Adding check for all modes fixed case and if true then to just return initialization in CP decomposition - part of issue 292

* Adding check for all modes fixed case and if true then to just return the initialization

Co-authored-by: Parvathy <Parvathy>",0
"Rewrote vonneumann_entropy to handle multidimensional tensors. (#270)

Co-authored-by: tpatti <tpatti@nvidia.com>",0
remove numpy from monotoincity,0
onneagative hals examples,0
improve smoothness test,0
simplex names,0
"better names, optimized functions and argsort",0
Better tt_matrix_to_tensor,0
Tenalg: update manager + add einsum HOM,0
Missing base_tenalg,0
Adds TenalgBackendManager,0
raise value error when validating constraints,0
validate constraints,0
fix a bug,0
fix smoothness test for tensorflow,0
fix smooth and proximal test,0
new API and tests,0
ADMM and constrained parafac,0
"Merge pull request #283 from caglayantuna/Tucker_normalize

Adds a normalization function for Tucker tensors",0
Updated backend: use backend manager as module,0
"Merge pull request #326 from IsabellLehmann/cmtf_als

Add cmtf_als to init file so that it can be imported directly via tl.decomposition",0
README: update Slack join link,0
Merge branch 'tensorly:main' into cmtf_als,0
add cmtf_als to init file,0
weighting core,0
test_tucker_normalize,0
add tucker_normalize,0
remove normalization from tucker,0
update classes,0
fix partial tucker,0
normalization for tucker functions,0
"Merge pull request #293 from IsabellLehmann/cmtf_als

CMTF-ALS",0
"Merge pull request #322 from merajhashemi/mh-matmul

Add test for matmul",0
Slightly tighter testing,0
Remove stale file,0
Fix CMTF code for new interface,0
Remove other additions,0
Remove backend additions,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #323 from caglayantuna/fix_tests

fix active set and hals tests",0
fix active set and hals tests,0
Merge branch 'main' into mh-matmul,0
Minor: Remove wrong import,0
Add randn & matmul to package init,0
Remove unnecessary math.prod,0
Fix TF: 1d matmul,0
Add test for matmul,0
"Merge pull request #320 from merajhashemi/mh-svdorth

Fix  singular vectors to be orthonormal",0
"Merge pull request #321 from caglayantuna/diag

fix diag function for tensorflow and pytorch backends",0
fix diag function,0
Fix order before orthogonalization,0
Add test for svd orthonormality when n_eigenvecs > matrix_rank,0
Fix orthonormality test for svd,0
Fix singular vectors to be orthonormal,0
"Merge pull request #318 from merajhashemi/mh-svd

Fix `tl.partial_svd`",0
"Merge pull request #305 from merajhashemi/mh-lstsq

Add lstsq to backend",0
Add residuals to lstsq,0
Add lstsq to backend,0
Add test to check singular values are finite,0
Fix partial_svd,0
Merge branch 'main' into cmtf_als,0
Typo: math.prod -> utils.prod,0
"Merge pull request #309 from JeanKossaifi/main

Adding Batched Tensor Dot + Simplifying API",0
FIX doc tensordot,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
batched_tensor_dot -> tensordot,0
"Merge pull request #315 from merajhashemi/mh-unfold

Fix `tl.partial_unfold`",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
"Merge pull request #313 from merajhashemi/mh-matmul

Fix dot and matmul in PyTorch and TF",0
"Merge pull request #312 from merajhashemi/mh-pytorchsvd

Fix svd for pytorch < 1.8",0
Fix partial unfold,0
Fix dot & matmul in TF,0
Fix dot in PyTorch,0
Fix pytorch svd,0
FIX MXnet: keep tensors.ndim <= 6 for transpose,0
Add math.prod with failsafe for old version<3.8,0
Typo,0
Update doc for batched_tensor_dot,0
Use faster batched_tensor_dot version,0
Batched-tensordot: simplify API,0
Tests for batched tensorsdot,0
Adds batched-tensordot,0
Adds matmul to PyTorch backend,0
"Merge pull request #229 from merajhashemi/mh-tr

Adds Tensor Ring Decomposition",0
"Merge pull request #306 from JeanKossaifi/main

Adds matmul + fix tensordot pytorch backend + doc",0
Adds matmul + fix tensordot pytorch backend + doc,0
"Merge pull request #294 from aarmey/CP-lstsq-grad

Gradient of the difference norm between a CP and dense tensor",0
"Merge pull request #304 from yngvem/fix-tt-cross-seed

Added random seed for tensor_train_cross",0
Added random seed for tensor_train_cross,0
Fix test for lower accuracy backends,0
Linting,0
Edits based on review,0
Update README.rst,0
Make parafac() robust to complex tensors,0
FIX cp_to_tensor,0
"Merge pull request #295 from caglayantuna/nn_tucker_sparse_coeff

NN-Tucker hals sparsity coefficient issue",0
adds Iterable,0
fix typo,0
Fix tests for JAX/TF,0
Add tests for tensor ring,0
Add tests for `TRTensor`,0
Add random_tr + test,0
Add Tensor Ring implementation,0
Simplify normalization and make loop over modes,0
Initial changes to work on all backends,0
Finish docstring,0
Add testing,0
"fix tucker hals sparsity coefficient

core sparsity

sparsity coefficient",0
Initial implementation,0
delete fms,0
cmtf als,0
fix import error,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #268 from yngvem/wrapper_test

Test utility for class wrappers and some small bugfixes",0
Merged branch 'main' into wrapper_test and storing the errors after Tucker_NN.fit,0
Merge branch 'main' into wrapper_test,0
Added and fixed documentation,0
Updated the contributing guide to include a note about the class interface utility,0
"Merge pull request #280 from caglayantuna/sparse_example

Sparse backend usage section example",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
validate_tt_rank: fix test + check rank realizable through SVD,0
DOC: fix minor doc issues,0
DOC: fix case insensitive clash between fun&class,0
DOC: fix warnings sphinx examples,1
updated sparse example,0
sparse backend usage section example,0
"Merge pull request #282 from earmingol/main

Added random_state to CP and NN_CP when init='random'",0
Fixed missing random_state when init='random' in CP and NN_CP,0
Doc: add CPInit option for init in docstring,0
"Merge pull request #279 from MarieRoald/bugfix_nn_cp_init

Bugfix: Initialising non-negative CP with precomputed decomposition erroneously modified the initialisation",0
"Merge pull request #278 from caglayantuna/new_functions

adding tl.trace and tl.cumsum functions",0
Removed unused argument,0
Removed unused argument,0
"Test that if we initialise nn_cp with a precomputed decomposition, then the init is not modified before fitting the model",0
"Reverted back so all factor matrices are initialised non-negative

Only making the constrained factor matrices non-negative seemed
to make the fitting procedure less stable (higher likelihood of
all-zero components).",0
Added fix for initialisation,0
"Merge pull request #276 from bkmgit/bkmgit-argument-update

current version uses rank rather than ranks",0
tl.trace and tl.cumsum,0
"Merge pull request #277 from VoliCrank/main

Update API reference for non_negative_parafac",0
Update _nn_cp.py,0
current version uses rank rather than ranks,0
"Merge pull request #271 from MarieRoald/bugfix-hals_convergence_bug

Bugfix:HALS convergence checking fails when non-negativity is not imposed on final mode",0
Added fix for the bug,0
Added test that reproduces the error in convergence checking for HALS,0
"Merge pull request #254 from caglayantuna/nn_tucker

Non-negative tucker via HALS",0
optima stepsize for fista,0
edit fista test,0
skip tensorflow for active set test,0
raise error when active set with tensorflow,0
nn tucker hals to init,0
fix tests,0
fix mxnet test issue,0
fix tensor_to_vec,0
"names, any and fix tests",0
decimal and tensor to vec,0
fix active set test,0
notes and tests,0
fix fista and math operators,0
call nnsvd,0
Notes and name edits,0
fix fista initial x issue,0
nnnsvd for initialization,0
fix nn in fista,0
updated names and some edits according to PR review,0
add hals function,0
sparsity,0
improve doc,0
fix docstring,0
fix bugs,0
fix backend issues,0
active set and fista,0
core update and gradient algorithms,0
test function,0
initialize tucker and update core,0
hals function,0
changed terms,0
PEP8,0
nn_tucker function is added,0
Merge remote-tracking branch 'upstream/main' into wrapper_test,0
"Merge pull request #267 from MarieRoald/parafac2_stopping_condition

Minor fixes for PARAFAC2 (#263 and more)",0
Changed max number of iterations to speed up tests,0
"Changed absolute tolerance to 1e-13

Setting it 1000*eps led to problems with single precision, so we set it to 1e-13 which is similar to 1000*eps for double precision",0
Added version changed number,0
Added test for class wrapper of decomposition function,0
Added test for class wrapping of decomposition function,0
Added test for class wrapper,0
Added test for wrapping of tucker tensor,0
Added test for tucker wrappers,0
Fixed so wrapper accepts all correct arguments,0
Added wrapper tests,0
Added utility to test if class-wrappers are correctly made,0
Bump version.,0
Added missing tl.tensor,0
Changed default tolerance to 1000 times the machine precision,0
Added versionchanged for n_iter_max,0
Added docstring for nn_modes and updated Parafac2 class,0
Added test for stopping conditions,0
Added absolute tolerance and updated Parafac2 class,0
Merge remote-tracking branch 'tensorly/main' into parafac2_stopping_condition,0
Adds `any` to the backend,0
"Merge pull request #262 from MarieRoald/hals_only_some_modes

Non negativity in only some modes + congruence_coef",0
Removed unnecessary part of convergence checking,0
Casting the congruence matrix to a numpy array,0
Make random matrices into tensors,0
Removed unused argument,0
Wrapped random signs in a T.tensor,0
Added congruence coefficient,0
Added congruence coefficient,0
Fixed docstring,0
Use builtin congruence coefficient function,0
Changed to use the builtin congruence coefficient,0
Added congruence coefficient computation,0
Changed tolerance,0
Changed tolerance and number of iteration for test,0
"Fixed so the weights are also a TensorLy tensor, not NumPy array",0
Changed random numpy matrices into tensorly tensors,0
Changed so the synthetic components are used to form a CPTensor object,0
Added comment,0
Removed extra space,0
Fixed so HALS is used when constraints are imposed and added warning if all modes are constrained.,0
"Fixed so non negativity is tested after only one iteration, and added checks for warnings if all modes are constrained",0
Merge remote-tracking branch 'tensorly/main' into hals_only_some_modes,0
Testing the unconstrained B-factor matrices in nn-test too.,0
Added tests to ensure that constrained factors are non-negative,0
currect version of cmtf als,0
"Merge pull request #1 from tensorly/main

update master branch",0
Added trig functions (sin and cos) to backends (#256),0
"Merge pull request #216 from merajhashemi/mh-signsvd

Fix svd sign indeterminacy",0
Merge branch 'main' into mh-signsvd,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
Added non-negativity constraints for some modes,0
added non_negative_parafac_hals to __init__,0
Added non-negative HALS for only some modes and unconstrained for others,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
Small fix,0
Capitalize variable names and remove to numpy,0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
Merge branch 'main' into mh-signsvd,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
Merge branch 'main' into mh-signsvd,0
Move svd-flip to backend,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fix svd sign indeterminacy,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Bump version,0
FIX MXNet tests,0
FIX test_tt_matrix test,0
Merge branch 'main' of https://github.com/tensorly/tensorly,0
Fix MXNet test,0
"Merge pull request #334 from caglayantuna/nn_examples

non-negative hals examples",0
"Improved documentation, adds contrained_cp",0
FIX MXNet (no support transpose >6th order tensors),0
"Backend: import count_nonzero, flip and argsort",0
"Merge pull request #284 from caglayantuna/ADMM

Adds constrained parafac",0
"Merge pull request #330 from JeanKossaifi/new2

Backend and tenalg backend refactoring -use a BackendManager class and use it directly as tensorly.backend's Module class",0
FIX tensorflow backend,1
"Adding check for all modes fixed case and if true then to just return the initialization (#325)

* Adding check for all modes fixed case and if true then to just return initialization in CP decomposition - part of issue 292

* Adding check for all modes fixed case and if true then to just return the initialization

Co-authored-by: Parvathy <Parvathy>",0
"Rewrote vonneumann_entropy to handle multidimensional tensors. (#270)

Co-authored-by: tpatti <tpatti@nvidia.com>",0
remove numpy from monotoincity,0
onneagative hals examples,0
improve smoothness test,0
simplex names,0
"better names, optimized functions and argsort",0
Better tt_matrix_to_tensor,0
Tenalg: update manager + add einsum HOM,0
Missing base_tenalg,0
Adds TenalgBackendManager,0
raise value error when validating constraints,0
validate constraints,0
fix a bug,0
fix smoothness test for tensorflow,0
fix smooth and proximal test,0
new API and tests,0
ADMM and constrained parafac,0
"Merge pull request #283 from caglayantuna/Tucker_normalize

Adds a normalization function for Tucker tensors",0
Updated backend: use backend manager as module,0
"Merge pull request #326 from IsabellLehmann/cmtf_als

Add cmtf_als to init file so that it can be imported directly via tl.decomposition",0
README: update Slack join link,0
Merge branch 'tensorly:main' into cmtf_als,0
add cmtf_als to init file,0
weighting core,0
test_tucker_normalize,0
add tucker_normalize,0
remove normalization from tucker,0
update classes,0
fix partial tucker,0
normalization for tucker functions,0
"Merge pull request #293 from IsabellLehmann/cmtf_als

CMTF-ALS",0
"Merge pull request #322 from merajhashemi/mh-matmul

Add test for matmul",0
Slightly tighter testing,0
Remove stale file,0
Fix CMTF code for new interface,0
Remove other additions,0
Remove backend additions,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #323 from caglayantuna/fix_tests

fix active set and hals tests",0
fix active set and hals tests,0
Merge branch 'main' into mh-matmul,0
Minor: Remove wrong import,0
Add randn & matmul to package init,0
Remove unnecessary math.prod,0
Fix TF: 1d matmul,0
Add test for matmul,0
"Merge pull request #320 from merajhashemi/mh-svdorth

Fix  singular vectors to be orthonormal",0
"Merge pull request #321 from caglayantuna/diag

fix diag function for tensorflow and pytorch backends",0
fix diag function,0
Fix order before orthogonalization,0
Add test for svd orthonormality when n_eigenvecs > matrix_rank,0
Fix orthonormality test for svd,0
Fix singular vectors to be orthonormal,0
"Merge pull request #318 from merajhashemi/mh-svd

Fix `tl.partial_svd`",0
"Merge pull request #305 from merajhashemi/mh-lstsq

Add lstsq to backend",0
Add residuals to lstsq,0
Add lstsq to backend,0
Add test to check singular values are finite,0
Fix partial_svd,0
Merge branch 'main' into cmtf_als,0
Typo: math.prod -> utils.prod,0
"Merge pull request #309 from JeanKossaifi/main

Adding Batched Tensor Dot + Simplifying API",0
FIX doc tensordot,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
batched_tensor_dot -> tensordot,0
"Merge pull request #315 from merajhashemi/mh-unfold

Fix `tl.partial_unfold`",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
"Merge pull request #313 from merajhashemi/mh-matmul

Fix dot and matmul in PyTorch and TF",0
"Merge pull request #312 from merajhashemi/mh-pytorchsvd

Fix svd for pytorch < 1.8",0
Fix partial unfold,0
Fix dot & matmul in TF,0
Fix dot in PyTorch,0
Fix pytorch svd,0
FIX MXnet: keep tensors.ndim <= 6 for transpose,0
Add math.prod with failsafe for old version<3.8,0
Typo,0
Update doc for batched_tensor_dot,0
Use faster batched_tensor_dot version,0
Batched-tensordot: simplify API,0
Tests for batched tensorsdot,0
Adds batched-tensordot,0
Adds matmul to PyTorch backend,0
"Merge pull request #229 from merajhashemi/mh-tr

Adds Tensor Ring Decomposition",0
"Merge pull request #306 from JeanKossaifi/main

Adds matmul + fix tensordot pytorch backend + doc",0
Adds matmul + fix tensordot pytorch backend + doc,0
"Merge pull request #294 from aarmey/CP-lstsq-grad

Gradient of the difference norm between a CP and dense tensor",0
"Merge pull request #304 from yngvem/fix-tt-cross-seed

Added random seed for tensor_train_cross",0
Added random seed for tensor_train_cross,0
Fix test for lower accuracy backends,0
Linting,0
Edits based on review,0
Update README.rst,0
FIX cp_to_tensor,0
"Merge pull request #295 from caglayantuna/nn_tucker_sparse_coeff

NN-Tucker hals sparsity coefficient issue",0
adds Iterable,0
fix typo,0
Fix tests for JAX/TF,0
Add tests for tensor ring,0
Add tests for `TRTensor`,0
Add random_tr + test,0
Add Tensor Ring implementation,0
Simplify normalization and make loop over modes,0
Initial changes to work on all backends,0
Finish docstring,0
Add testing,0
"fix tucker hals sparsity coefficient

core sparsity

sparsity coefficient",0
Initial implementation,0
delete fms,0
cmtf als,0
fix import error,0
Merge branch 'tensorly:main' into cmtf_als,0
"Merge pull request #268 from yngvem/wrapper_test

Test utility for class wrappers and some small bugfixes",0
Merged branch 'main' into wrapper_test and storing the errors after Tucker_NN.fit,0
Merge branch 'main' into wrapper_test,0
Added and fixed documentation,0
Updated the contributing guide to include a note about the class interface utility,0
"Merge pull request #280 from caglayantuna/sparse_example

Sparse backend usage section example",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
validate_tt_rank: fix test + check rank realizable through SVD,0
DOC: fix minor doc issues,0
DOC: fix case insensitive clash between fun&class,0
DOC: fix warnings sphinx examples,1
updated sparse example,0
sparse backend usage section example,0
"Merge pull request #282 from earmingol/main

Added random_state to CP and NN_CP when init='random'",0
Fixed missing random_state when init='random' in CP and NN_CP,0
Doc: add CPInit option for init in docstring,0
"Merge pull request #279 from MarieRoald/bugfix_nn_cp_init

Bugfix: Initialising non-negative CP with precomputed decomposition erroneously modified the initialisation",0
"Merge pull request #278 from caglayantuna/new_functions

adding tl.trace and tl.cumsum functions",0
Removed unused argument,0
Removed unused argument,0
"Test that if we initialise nn_cp with a precomputed decomposition, then the init is not modified before fitting the model",0
"Reverted back so all factor matrices are initialised non-negative

Only making the constrained factor matrices non-negative seemed
to make the fitting procedure less stable (higher likelihood of
all-zero components).",0
Added fix for initialisation,0
"Merge pull request #276 from bkmgit/bkmgit-argument-update

current version uses rank rather than ranks",0
tl.trace and tl.cumsum,0
"Merge pull request #277 from VoliCrank/main

Update API reference for non_negative_parafac",0
Update _nn_cp.py,0
current version uses rank rather than ranks,0
"Merge pull request #271 from MarieRoald/bugfix-hals_convergence_bug

Bugfix:HALS convergence checking fails when non-negativity is not imposed on final mode",0
Added fix for the bug,0
Added test that reproduces the error in convergence checking for HALS,0
"Merge pull request #254 from caglayantuna/nn_tucker

Non-negative tucker via HALS",0
optima stepsize for fista,0
edit fista test,0
skip tensorflow for active set test,0
raise error when active set with tensorflow,0
nn tucker hals to init,0
fix tests,0
fix mxnet test issue,0
fix tensor_to_vec,0
"names, any and fix tests",0
decimal and tensor to vec,0
fix active set test,0
notes and tests,0
fix fista and math operators,0
call nnsvd,0
Notes and name edits,0
fix fista initial x issue,0
nnnsvd for initialization,0
fix nn in fista,0
updated names and some edits according to PR review,0
add hals function,0
sparsity,0
improve doc,0
fix docstring,0
fix bugs,0
fix backend issues,0
active set and fista,0
core update and gradient algorithms,0
test function,0
initialize tucker and update core,0
hals function,0
changed terms,0
PEP8,0
nn_tucker function is added,0
Merge remote-tracking branch 'upstream/main' into wrapper_test,0
"Merge pull request #267 from MarieRoald/parafac2_stopping_condition

Minor fixes for PARAFAC2 (#263 and more)",0
Changed max number of iterations to speed up tests,0
"Changed absolute tolerance to 1e-13

Setting it 1000*eps led to problems with single precision, so we set it to 1e-13 which is similar to 1000*eps for double precision",0
Added version changed number,0
Added test for class wrapper of decomposition function,0
Added test for class wrapping of decomposition function,0
Added test for class wrapper,0
Added test for wrapping of tucker tensor,0
Added test for tucker wrappers,0
Fixed so wrapper accepts all correct arguments,0
Added wrapper tests,0
Added utility to test if class-wrappers are correctly made,0
Bump version.,0
Added missing tl.tensor,0
Changed default tolerance to 1000 times the machine precision,0
Added versionchanged for n_iter_max,0
Added docstring for nn_modes and updated Parafac2 class,0
Added test for stopping conditions,0
Added absolute tolerance and updated Parafac2 class,0
Merge remote-tracking branch 'tensorly/main' into parafac2_stopping_condition,0
Adds `any` to the backend,0
"Merge pull request #262 from MarieRoald/hals_only_some_modes

Non negativity in only some modes + congruence_coef",0
Removed unnecessary part of convergence checking,0
Casting the congruence matrix to a numpy array,0
Make random matrices into tensors,0
Removed unused argument,0
Wrapped random signs in a T.tensor,0
Added congruence coefficient,0
Added congruence coefficient,0
Fixed docstring,0
Use builtin congruence coefficient function,0
Changed to use the builtin congruence coefficient,0
Added congruence coefficient computation,0
Changed tolerance,0
Changed tolerance and number of iteration for test,0
"Fixed so the weights are also a TensorLy tensor, not NumPy array",0
Changed random numpy matrices into tensorly tensors,0
Changed so the synthetic components are used to form a CPTensor object,0
Added comment,0
Removed extra space,0
Fixed so HALS is used when constraints are imposed and added warning if all modes are constrained.,0
"Fixed so non negativity is tested after only one iteration, and added checks for warnings if all modes are constrained",0
Merge remote-tracking branch 'tensorly/main' into hals_only_some_modes,0
Testing the unconstrained B-factor matrices in nn-test too.,0
Added tests to ensure that constrained factors are non-negative,0
currect version of cmtf als,0
"Merge pull request #1 from tensorly/main

update master branch",0
Added trig functions (sin and cos) to backends (#256),0
"Merge pull request #216 from merajhashemi/mh-signsvd

Fix svd sign indeterminacy",0
Merge branch 'main' into mh-signsvd,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
Added non-negativity constraints for some modes,0
added non_negative_parafac_hals to __init__,0
Added non-negative HALS for only some modes and unconstrained for others,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
Small fix,0
Capitalize variable names and remove to numpy,0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
Merge branch 'main' into mh-signsvd,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
Merge branch 'main' into mh-signsvd,0
Move svd-flip to backend,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fix svd sign indeterminacy,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Pypi Worflow: use correct token for test pypi,0
Bumb version,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
Update release workflow,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
fix sparsify,0
fixed modes and compatibility issues,0
DOC update: add CP-NN via HALS,0
FIX TT + Support order 1 CP tensors,1
TTM: support a single core.,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX tensor-train-matrix: return TTM not TT,0
"Merge pull request #255 from caglayantuna/fixed_modes

Fixed modes now defaults to None + FIX compatibility issues",0
Test CP: add true_rank and decomp rank,0
fix sparsify,0
Adds tensordot to all backends,0
fixed modes and compatibility issues,0
"Allowed TTs to have a single core and re-removed MPS entropy (#253)

* Removed constraint that TT must have more than one core
* Removed mps_entanglement_entropy",0
Updated contributors list,0
"Merge pull request #230 from caglayantuna/init_issue

Fix CP init",0
khatri_rao w/ einsum: fix when mask given,0
mode_dot: take conj transpose for complex tensors,0
Tenalg backend: option to specify via env variable,0
initial tensor option for CP,0
Complex: remove conjugate,0
"Merge pull request #247 from merajhashemi/mh-complexcp

Fix parafac for complex tensors",0
Fix parafac for complex tensors,0
Complex: use conjugate transpose,0
Adds complex dtype,0
FIX norm: complex support,0
Complex support in cp_to_tensor,0
FIX: remove forgotten print,0
FIX metrics test + remove print in core backend,0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
FIX MPS test: use same number of param,0
"Merge pull request #244 from chrisyeh96/patch-1

Fixes bug and typos in CP Power Iteration",0
Update power_iteration to match symmetric_power_iteration,0
Remove unnecessary initialization of best_score,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Fix bugs in symmetric_power_iteration()

1. Fix bug where score was <= 0, resulting in no ""best_factor""
2. Fix bug that limited the function to order-3 tensors. Now works for tensors of arbitrary order.",0
Fix more typos in symmetric power iteration,0
Fix typos in symmetric power iteration,0
"Merge pull request #243 from taylorpatti/main

Removed mps_EE for use in other module",0
Merge branch 'main' into main,0
Removed mps_EE for use in other module,0
FIX PyTorch backend: remove register already defined SVD,0
PyTorch backend: fix legacy SVD full_matrix arg,0
Tucker validate rank: fix test,0
FIX entropy tests,0
Minor: removed unused import,0
Tests: separate backend and core fun + speed test for SVD,0
"PyTorch: revert to using PyTorch SVD

Use NumPy SVD only for numpy_svd",0
"FIX partial_SVD speed

If n_eigenvecs == min(matrix.shape) we should be using
full_matrices=False otherwise it's very slow!",0
Add mask to tucker decomp. docstring,0
NumPy backend: use Scipy's faster SVD,0
"FIX: minor issue, convert to numpy after shape call",0
Merge branch 'main' of https://github.com/tensorly/tensorly into main,0
partial_svd now uses NumPy only,0
"Merge pull request #231 from taylorpatti/main

Entropy metric (Von Neumann Entropy) + adds log2 to backends",0
Merge branch 'main' of https://github.com/taylorpatti/tensorly into main,0
Added try/except to catch non-Hermitian rounding errors.,0
Merge branch 'main' into main,0
Updated naming convention and docs for EE,0
PyTorch backend: FIX SVD legacy memory issue,0
"Merge pull request #215 from merajhashemi/mh-randomsvd

Add randomized SVD",0
Add randomized svd and small fixes to other svd methods,0
Merge conflict,0
Merge branch 'main' into main,0
"FIX partial_tucker with mask on subset of modes

The core was initialized with the wrong size (only modes in the subset
of modes were created).",0
PyTorch backend: legacy support version < 1.8.0.,0
Updated naming conventions on testing suite,0
Updated naming conventions on testing suite,0
Fix: partial_tucker when using a mask and modes,0
Updated entropy docs,0
"Updated entropy, added tt funtions",0
"Updated entropy, added tt funtions",0
Merge branch 'main' into main,0
"Updated entropy, added tt functions",0
"Merge pull request #234 from aarmey/torch

More simplifications using common numpy interface",0
Fix,0
Revert tf.kron,0
Fix,0
Revert kron due to mxnet,0
Add mxnet kron,0
More simplifications using common numpy interface,0
"updated log2 backends, updated entropy",0
"updated log2 backends, updated entropy",0
removed qutip,0
"removed qutip, updated test functions",0
upgraded arrays to tensors in test_entropy,0
updated testing suite,0
updated vne to transform data based on backend,0
updated install requirements with qutip,0
updated core,0
fixed init,0
updated init,0
added dispatch and imports,0
added entropy.py and test_entropy.py for VNE and updated backends,0
restore,0
check,0
"Merge pull request #224 from caglayantuna/hals_feature

Adds NN CP via Hierarchical Alternating Least Square (HALS)",0
"Merge pull request #217 from aarmey/backend-refactor

Refactoring across backends",0
"Merge pull request #226 from aarmey/fix-sign

Sign correction method for CP tensors",0
Check the weights signs,0
Remove to_numpy,0
Renamed to match SVD method,0
Last fix,0
Fixes from review,0
check_random_state,0
fix bug,0
tl.max to tl.where,0
complexity ratio for rho,0
PEP8,0
PR review,0
return_errors,0
"authors, function names and exact string",0
PR review,0
sparsity,0
PR review,0
PR Review,0
PR review,0
typo,0
PR Review,0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Apply suggestions from code review

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Update tensorly/decomposition/_nn_cp.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Adding test for hals,0
correcting typo,0
final code review changes,0
Changing nonzero name to nonzero_row,0
backends,0
update,0
update,0
update,0
update,0
update,0
CPNN_Hals,0
hals,0
CPNN_Hals,0
hals,0
Fix merge error.,0
Add fix-sign function,0
Fix,0
Fix.,0
Merge branch 'main' into backend-refactor,0
"Merge pull request #212 from merajhashemi/mh-random

Move check_random_state to core backend",0
Bug fix,0
Add randn function to backend,0
Merge branch 'main' into mh-random,0
One more typing fix,0
More fixes for cupy,0
Fix incorrect merge,0
Seems to be working,0
Fixes,0
More rearrangement. Make symeig common across backends,0
Fix for different exceptions,0
Add mxnet.np.linalg.svd,0
Merge branch 'master' into backend-refactor,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
"Merge pull request #225 from aarmey/upgrade-mxnet

Upgrade MXNet backend to use MXNet.np interface",0
Comment to reference MXNet issue,0
Fixes,0
Another fix,0
Fix types,0
Merge branch 'upgrade-mxnet' of github.com:aarmey/tensorly into upgrade-mxnet,0
Merge branch 'master' into upgrade-mxnet,0
Power iteration: add to API + fix docstring,0
Add UCLA logo,0
API: add missing functions,0
Github action - FIX test.yml,0
Merge branch 'master' into upgrade-mxnet,0
Update mxnet_backend.py,0
It works!,0
Simplify backend checks,0
FIX tenalg backend for multi-thread,0
DOC: improve API doc for backend + guide,0
Import explicitely missed bakend funs,0
"Doc: github action, change branch name",0
DOC: use mathjax,0
Minor doc fix,0
DOC improvements,0
DOC: new theme,0
Update Github action to build doc,0
CP: relax tol for abs rec,0
DOC: add matplotlib to requirements,0
Github action for building doc,0
Doc: improve user-guide,0
"Merge pull request #221 from MarieRoald/fix_220

Fix #220 - Improving naming consistency",0
Renamed _robust_decomposition back to robust_decomposition,0
Moved docstring to make it accessible at class level,0
"Rename files to increase consistency

The `tensorly.decomposition.parafac2` and
`tensorly.decomposition.robust_decomposition` modules provided implementations
of decompositions, but all other modules that does this are hidden (start
with a leading underscore). The files are renamed to resolve this inconsistency.",1
Update README.rst,0
README: Added CodeConv badge,0
Update README.rst,0
Updating README: github action badge instead of Travis,0
"Merge pull request #204 from aarmey/nnsvd-cp

Refactor non-negative CP and provide nndsvd initialization",0
Add to author list,0
Fix test warnings due to formatting,0
Fix parafac test,0
Use a better name for nnsvd,0
Update _nn_cp.py,0
"Merge pull request #182 from MarieRoald/parafac2-svd-init-bugfix

Bugfix for PARAFAC2 SVD init",0
"FIX: Typo in doc

Co-authored-by: Aaron Meyer <2065146+aarmey@users.noreply.github.com>",0
Add conj to pytorch backed,0
Test: switch to CodeCov,0
Test: check coverage,0
check_tucker_rank: have at least 3 non-fixed modes,0
"FIX test tucker_rank, add tol",0
Github workflow for testing,0
Fix tensorflow backend,1
Revert numpy kr,0
Remove mxnet kr,0
Revert jax,0
Revert core kr,0
Refactoring across backends,0
Fixed bug in _pad_by_zeros for the TensorFlow backend,0
Initialize v0 using check_random_state,0
Move check_random_state to core backend,0
Fix,0
Separate nndsvd method,0
Whitespace linting,0
Fixes based on review,0
"Merge pull request #209 from merajhashemi/mh-reproducibility

Fix random functions to use NumPy's global seed",0
Modify RandomState generator to use global numpy RNG when seed is None,0
Revert unused V,0
Refactor non-negative CP,0
Merge branch 'master' into nnsvd-cp,0
"Merge pull request #207 from aarmey/test-clip

Fix mxnet clip and add simple test",0
Update test_backend.py,0
Fixed mxnet clip and added test.,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC improvements + skoltech logo,0
Mostly implemented,0
Updated README,0
DOC: minor fix for mobile,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
Merge branch 'parafac2-svd-init-bugfix' of github.com:MarieRoald/tensorly into parafac2-svd-init-bugfix,0
Added test for svd init with rank greater than number of columns per slice,0
Added check for rank with SVD init,0
Added test for SVD init,0
"Fixed two bugs for SVD init

1. A matrix was initialised using SVD, should be ones
2. Created Parafac2Tensor from tuple of factors not list of factors",0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
DOC: fix class documentation,0
TensorFlow fix,0
FIX TensorFlow issue (not reshape),0
Bump version,0
Update DOC + add tt-matrix,0
Update for tt-matrices,0
Adding TT-Matrix format,0
"validate_tt_rank: fix for proportional float rank

The rank was not changing for float rank, and always returning result
for rank='same'",0
validate_tucker_rank: opt for modes w/ fixed ranks,0
validate_tt_rank : fix for the matrix case,0
doc html: fix footer message for sphinx-gallery,0
Credit TensorLy developers on website footer,0
option for quick html doc build,0
n_mode_dot: add transpose option,0
FIX for CP with init=random: pass context.,0
Fix validate_tt_rank for 2nd order tensors,1
DOC: make image map clickable,0
Test tt_tensor: mps -> tt,0
validate_tt_rank : always return a list,0
validate_tt_rank: fix for proportional rank,0
TT-tensor: remove prints,0
TT-tensor: Option for proportional rank in validate_tt_rank,0
CP tensor: fix inplace error for mode_dot,0
Make parafac2 consistent with other decompositions,0
Show line-search image in examples,0
FIX doc: Tucker ranks -> rank,0
"Update Doc

    Remove home.html, merge with index.html, update theme",0
Update decomposition module,0
"DOC: auto deploy, create doc folder if needed",0
Fix doc build - no update if build fails + requirements.,0
DOC + fix naming issues,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Update website + API fix,0
Merge branch 'decomposition',0
Update documentation,0
"Merge pull request #197 from JeanKossaifi/decomposition

Adding Class API",0
Validate rank in decompositions,0
Refactor MPS -> TT,0
Added rank validation and refactored MPS to TT,0
Refactor: kruskal tensor -> CP tensor,0
Refactored Kruskal tensors to CP,0
Tensor decomposition: add __setitem__,0
Factorized tensors + decomposition classes,0
Class API for decompositions,0
Parafac2 class: store errors by default,0
Tucker fix,0
Added CP via Robust Tensor Power Iteration,0
Class API,0
Merge branch 'master' into decomposition,0
Tucker: sort fixed_modes,0
Tucker: option to fix factors,0
Relax line-search test,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
"Update api.rst

Small spelling fix",0
CP: fix init with KruskalTensor (take weights into account),0
Tucker decomposition: option to provide init + fix core,0
Cosmetic: minor doc edit,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
"Merge pull request #192 from aarmey/patch-1

Update api.rst",0
"Update api.rst

Small spelling fix",0
Decomposition classes,0
MXNet: fix issue with stacking scalars,0
Add symmetric sparse parafac to doc,0
Symmetric parafac with sparse tensors,0
FIX sparse test.,0
Remove forgotten param,0
"FIX for Tensorflow, use index_update",1
Add Symmetric Parafac via Robust Tensor Power Iter,0
CP: normalize during optimization,0
"FIX tensor_dot test for MXNet

MXNet currently doesn't support transpose for tensors of order higher
than 6",0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Update doc,0
Adds tensor_dot + batched version and HOM.,0
"Merge pull request #185 from aarmey/missing-SVD

Using missing values with SVD initialization in PARAFAC",0
Use kruskal_normalise(),0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
Update candecomp_parafac.py,0
"Merge pull request #186 from aarmey/line-search-demo

Line search example script",0
Merge branch 'master' into missing-SVD,0
Should now initialize weights.,0
Some edits to polish the demo script.,0
"Tenalg Backend: correctly set global tenalg_backend

(when local_threadsafe=False).",0
Use default moveaxis with sparse,0
Default implementation for moveaxis,0
"Merge pull request #183 from aarmey/line-search

PARAFAC line search",0
Add file.,0
Add check that error monotonically decreases.,0
Fixed typo.,0
Acceleration adjustments from the N-way Toolbox,0
"Compare error to last iteration, so that we only calculate the error once unless line search fails.",0
Linting.,0
Added documentation for error_calc(),0
Changed to Bro line search implementation.,0
Fix missing jump scaling.,0
Fixed Jax backend.,0
Working for PARAFAC.,0
Performance now better. Included benchmarking workbook.,0
Now works with fixed modes.,0
Unify error calculation and fix necessary tensor copy.,0
Merge branch 'master' into line-search,0
"Revert ""Reduce tensor reconstruction.""

This reverts commit a776373b6285d7b2ef59dd9f4e8a8909d23cffc0.",0
Reduce tensor reconstruction.,0
"Merge pull request #184 from aarmey/testing-fixes

Fix testing errors",0
Update test_candecomp_parafac.py,0
Update test_candecomp_parafac.py,0
Fix sporadic masked Tucker errors.,0
Fixed Jax masking shape in kr.,0
Lower rank of MPS to prevent sporadic testing errors.,0
Reduce rank of MPS test.,0
Make masked PARAFAC test more reliable.,0
Don't need to tl.copy.,0
Update candecomp_parafac.py,0
Mostly setup.,0
Add line search for dense PARAFAC solving,0
"Merge pull request #171 from cohenjer/feature_fixed-mode

Fixing modes in parafac and nonegative_parafac",0
changed assert condition,0
"Update tensorly/decomposition/tests/test_candecomp_parafac.py

Co-authored-by: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Added unit testing for the fixed_mode feature,0
Merge branch 'dev' into feature_fixed-mode,0
Doc: Add Logo uao,0
Sparse Backend: shape is now builtin,0
DOC: removed old authors file and added Athens uni,0
DOC: update authors page,0
"Merge pull request #175 from aarmey/PARAFAC2-init

Bugfix: PARAFAC2 not using ""init"" option",0
"Merge pull request #173 from aarmey/masked-tucker

Implement masked Tucker",0
Pass in SVD.,0
Fix init passing.,0
Fix tensorflow indexing.,1
Add warning about SVD initialization within PARAFAC.,0
Move masking before first iteration.,0
Fixed.,0
Update test_tucker.py,0
Update test_tucker.py,0
Added a more stringent test.,0
Update test_tucker.py,0
Implement masked Tucker.,0
"Merge pull request #150 from MarieRoald/parafac2

PARAFAC2 in TensorLy",0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
Reverted to_numpy fix since it was fixed in the backend,0
Casting singleton tensor norm to numpy to avoid dtype issues in TensorFlow,0
FIX Tensorflow norm (order 0 tensors),1
Reverted previous change since we couldn't do a tl.sum with a list as input for pytorch and mxnet backends,0
"Workaround for the weird TensorFlow behaviour that makes (x**2) change the dtype of x from float32 to float64, thus making a division later raise an error.",0
Fixed so congruence is computed correctly and adapted to the changed convergence tolerance in PARAFAC2,0
Added missing square in data norm computation (used for convergence criterion),0
Removed unused variable,0
Fixed so the convergence tolerance is based on the change in relative reconstruction error,0
Changed docstring for PARAFAC2 to make it clearer that it's for third order tensors and that the second mode changes over the third mode.,0
Added fixed_modes functionality,0
Removed set backend,0
Changed tolerance and changed from np.ones to tl.ones,0
Fixed index_update error,0
Fixed so we no longer loop over a tl.tensor for TF backend,0
Fixed numpy ones to tl ones instead and reduced tolerance of normalize factors test,0
Fixed normalization test of PARAFAC2 to check magnitude,0
Changed shapes and rank so all tests use a tensor with unique PARAFAC2 decomposition,0
"Fixed issue with normalisation not happening inplace

Previously, the factor variable was replaced in a loop. However, that didn't change the factors list where each factor was stored. Now, the factors list is updated instead",0
"Merge pull request #170 from aarmey/fix-mask

Fix mask shape during kr calculation",0
Maybe just a tolerance difference.,0
Try handling mask above kr() to fix other backends.,0
Simplify and match other backends.,0
Fix.,0
Try and fix other backends.,0
This seems to be working.,0
Flexible Tensor Algebra backend: enable more efficient operations.,0
Faster test + re-adding test case (normalize=True),0
issue with index_update + norm,0
FIX: preserve tensor context,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Stopped iterating over A factor rows,0
Removed copy flag in normalize since inplace operators aren't supported with TensorFlow,0
"Fixed bug with erroneous paranthesis placement

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
Added missing tl,0
Made inplace operator no longer inplace,0
Changed so inplace updates are no longer inplace,0
Changed tl.shape to T.shape,0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed so update no longer is inplace because of tensorflow backend

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Changed len to tl.shape

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"changed tensor.reshape(...) to tensorly.reshape(tensor, ...)",0
Switched out implicit tensor.setitem calls with tensorly.index_update calls,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
Tensorflow: make tensor Variables,0
Fix Tensorflow backend,1
Merge branch 'master' of https://github.com/tensorly/tensorly,0
Updated Makefile (added jax + debug),0
JAX Backend,0
Support for update_index for all backends,0
PyTorch backend: symeig interface changed.,0
"Merge pull request #160 from meyer-lab/orthoFix

Non-negative CP fixes (keep factors positive after qr with abs and remove undefined expression)",0
README: Travis CI badge - migrated .org -> .com,0
DOC: fix html API,0
Added fix for PARAFAC2 test with low A values,0
Changed precision since roundoff errors accumulated for the PyTorch backend,0
Renamed incorrectly named variable,0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing context when creating a tensor

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
"Added missing tl.tensor-wrap

Co-Authored-By: Jean Kossaifi <jean.kossaifi@gmail.com>",0
Fix verbose output in non-negative form.,0
Fix.,0
FIX: create tensors with context of existing ones,0
Merge branch 'parafac2' of git://github.com/MarieRoald/tensorly into MarieRoald-parafac2,0
"Merge pull request #147 from juliagusak/sparse_parafac

Sparse parafac",0
+,0
+,0
+,0
Add np(ascending)/mx/tf sort,0
Add: tl.sort with numpy and pytorch backends,0
+,0
+,0
Merge branch 'master' into sparse_parafac,0
+,0
Add: test for parafac(sparsity != None),0
"Fixing Some Minor Issues (#145)

Cosmetic changes

    unused imports & parameter, redundant parenthesis",0
"Bump version, MXNet travis fix (QR + travis.yml) + cosmetic changes",0
Update MXNET travis setup,0
Reduced tolerance because pytorch had more roundoff errors than other backends,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
No longer using np allclose because issues with other backend,0
Changed [...]Â to [:],0
Fixed tl.dot isntead of T.dot,0
Fixed wrong order of parantheses introduced with previous commit,0
Changed @Â operator to T.dot,0
CP: add l2 regularization,0
"Fixed for backends where @ operator isn't implemented, using T.dot instead now",0
Fixed another transpose error,0
Reduced tolerance in validate_parafac2_tensor to account for single precision in non-python backends,0
Changed from tensor.T to T.transpose(tensor),0
Added more test cases for validate parafac2 tensor,0
Added comment,0
added tests for parafac2 tensors,0
Fixed bugs in parafac2_normalise and removed duplicate code,0
Added convergence rate for CP updates to ensure that they are updated each iteration.,0
Added parafac2 examples,0
Merge branch 'master' of github.com:MarieRoald/tensorly,0
Merge remote-tracking branch 'tensorly/master' into parafac2,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
Add small fix,0
Add small changes,0
Add: example,0
Add: sparse parafac,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
Updated docstrings to fit better with the rest of the documentation.,0
Updated documentation to include PARAFAC2,0
Updated docstring,0
"Added tests for valid init, normalization during fit and input-format to PARAFAC2 (list and array)",0
"Added svd and CP init, fixed bug so normalisation is correct and some docstrings.",0
Added option to convert kruskal tensors to parafac2 tensors and some docstrings,0
Merge branch 'master' into parafac2,0
Merge remote-tracking branch 'tensorly/master',0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
Merge branch 'master' into parafac2,0
Tests are now passing,0
Added default for full argument of random_parafac2,0
Added first try at PARAFAC2,0
Added option to initiate using specified decomposition,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
"Merge pull request #146 from yngvem/master

[BUGFIX]: scipy.misc.imresize is removed from latest version of SciPy",0
Update plot_image_compression.py,0
"Using scipy.ndimage.zoom instead of scipy.misc.imresize

scipy.misc.imresize is no longer in SciPy, however scipy.ndimage.zoom is.",0
"Merge pull request #144 from kingsj0405/master

Fix TypeError run tensorly.partial_svd with None n_eigenvecs",0
Auto format,0
Merge branch 'feature/issue#119' of https://github.com/kingsj0405/tensorly into feature/issue#120,0
Refactor code to pass the tests,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
"Merge pull request #141 from juliagusak/parafac_stopping_criterion

parafac: more option for convergence criterion",0
Add: renamed convergence criteria,0
small fix,0
Small fix,0
Add: stopping criterion to parafac,0
"Merge pull request #139 from lan496/reproducibility-for-tucker

Making partial_svd and tucker reproducible",0
fix initialization of v0,0
add kwargs in SVD functions,0
enable tucker decomposition to be deterministic with random_state,0
fix test tensor for multiple backends,0
option for starting vector in partial svd,0
Fixed typo,0
Compatibility with TensorFlow 2.0,0
"Merge pull request #135 from Cor3Down/troubleShooting

Fix docstrings and minor typos",0
"Adding missing information of parameters in docstrings and
fix some typo mistakes",0
"Merge pull request #134 from Cor3Down/issue_#133

PyTorch backend: remove duplicate declaration of 'stack' method",0
Removing second declaration of 'stack' static method.,0
TTcross: increase tolerance for random test,0
FIX: sparse backend,0
"Fix truncated_svd method (#132)

PyTorch truncated SVD: adding staticmethod decorator and remove self parameter.",0
README example: use lower rank,0
README: use new tucker_tensor syntax,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
kruskal_normalise: fix + test,0
"Fix typo mistakes in some files (#127)

* docs: fix all typo mistakes",0
Temporary fix for MXNet,1
Random tensors: allow over-parametrization,0
Fix: partial_svd on singular matrix (zero eigenvals),0
"Create Contributing.rst

For Github integration.",0
Add feature request template,0
Add bug template,0
Bump version,0
PyTorch backend: use solve instead of gels/gesv,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Fix TypeError run tensorly.partial_svd with None n_eigenvecs,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Upload only once,0
Use Travis to deploy to Pypi,0
Added test case for rank-1 CP decomposition,0
Tensorflow backend: update solve,0
"Tensorflow backend: minor update

Use tf.linalg.qr instead of the (deprecated) tf.qr",0
Satisfy pydata sparse..,0
Satisfy tensorflow...,0
MXNet specific fix,0
Update,0
FIX kruskal_norm,0
Update tol,0
Minor change in tensorflow backend,0
Updated version of Python used for tests,0
FIX: kruskal normalise,0
FIX: kruskal normalisation + rec error estimation,0
Adds outer-product,0
"Merge pull request #123 from kingsj0405/feature/issue#122

Use UTF-8 encoding",0
Use UTF-8 encoding,0
Add back mask to kruskal_to_tensor,0
Test for correctness of weights for Kruskal tensor,0
Added diag to backend,0
sparse DOC: kruskal_tensors have weights,0
Update sparse DOC,0
Add sparse functions to API,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX: orthogonalisation,0
FIX: use _get_backend_method in dispatch,0
DOC: update for tucker tensor syntax + update API,0
Update to Tucker tensor as tuples,0
"Merge pull request #87 from JeanKossaifi/tensor-classes

Adding a KruskalTensor class and enforces that kruskal tensors (e.g. tensors decomposed with Parafac) should always be expressed as mappings (tuple like) object of the form (weights, factor_list). It also adds various function to check the validity of input decomposed tensors (CP, Tucker and MPS) and efficient operations on decomposed tensors.",0
FIX precision for multi-mode-dot tests,0
FIX: typos/non-tensorly tensor,0
"Added tucker_mode_dot

    n-mode-product between Tucker tensor and matrix/vector",0
Added MPS tensor validation,0
Add tucker_tensor validation,0
"FIX kruskal_tensor for sparse_backend

    Always carry weights around, e.g. kruskal_tensor = (weights,
factors) always",0
"FIX kruskal_tensor

    Now kruskal_tensor should always be (weights, factors)",0
Merge branch 'master' into tensor-classes,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
nn-tucker: FIX when only one mode provided,0
"Merge pull request #90 from Quansight/sparse-robust-pca

Sparse robust pca",0
Minor refactor: svd_thresholding always returns a tensor,0
Merge branch 'master' into sparse-robust-pca,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
FIX README: sparse SVD fails on int array...,1
"Merge pull request #107 from JeanKossaifi/Quansight-sparse-docs

Add sparse docs",0
Update sparse documentation.,0
Merge branch 'sparse-docs' of git://github.com/Quansight/tensorly into Quansight-sparse-docs,0
"Merge pull request #105 from JeanKossaifi/sparse-missing-values

Sparse missing values for PARAFAC",0
Merge branch 'master' into sparse-missing-values,0
Added reference,0
"Merge pull request #106 from JeanKossaifi/maximeguillaud-master

Support for complex tensors in CP",0
Support for complex tensors in PARAFAC,0
Merge branch 'master' of git://github.com/maximeguillaud/tensorly into maximeguillaud-master,0
Updated README,0
"Updated README

Update tensorly paper reference.",0
More efficient kruskal_to_tensor,0
Readibility of khatri-rao,0
"Use tl.kruskal_to_tensor

Also remove an unused import.",0
Merge branch 'master' into sparse-parafac-missing,0
"Merge pull request #102 from JeanKossaifi/sparse_parafac

Adding sparse parafac",0
Added test for sparse parafac,0
Tests for sparse tenalg,0
TYPO,0
Update Travis + test for sparse with numpy,0
Sparse: minor refactor + test tenalg,0
"Adding unfolding_dot_khatri_rao test + misc

* wrap unfolding_dot_khatri_rao for sparse
* added email for asmeurer",0
Remove unused variable,0
Update authors list,0
Refactor mttkrp,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into sparse_parafac,0
Use tl.shape instead of tensor.shape,0
Use tl.reshape instead of tensor.reshape,0
"More efficient mttkrp in parafac()

It now computes along all ranks at once, while still computing in such a way
so as to be sparse-safe (it does not create the full Khatri-Rao as an
intermediate array). This is about 3x faster.",0
FIX: sparse imports,0
"Fix dot in the numpy backend

It must use a.dot(b) for the numpy backend parafac to work properly with
sparse inputs.",0
Use direct slicing instead of reshape to create a new axis,0
Merge branch 'sparse-parafac' of git://github.com/Quansight/tensorly into Quansight-sparse-parafac,0
"Use transpose directly instead of moveaxis in the mttkrp

This provides a slight performance improvement.",0
FIX for solve in PyTorch backend,0
Remove duplicate stack definition,0
"Fix issues with mxnet backend

Some custom methods were not being used because of a bad merge conflict
resolution.",0
Merge branch 'master' into sparse-parafac,0
"Merge pull request #95 from JeanKossaifi/backend-manager

Backend refactor + sparse support for numpy",0
Test backend: remove needless try,0
"Add back dynamical dispatch for backend methods

Also bump version",0
Make parafac() robust to complex tensors,0
FIX sparse backend,0
Make norm() from numpy backend robust to complex tensors,0
FIX contraction tests,0
Fix the sparse backend,0
Merge branch 'master' into backend-manager,0
FIX: forgotten backend registration,0
Revert to functions,0
Refactor + Thread Local + context manager,0
update,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
BackendManager draft,0
"Fix the PDF build of the docs

The LaTeX preamble wasn't properly included in the latex_elements dictionary
in conf.py.",0
Add information on masks (tensorly/tensorly#91),0
Merge branch 'sparse-parafac' into sparse-parafac-missing,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
Merge branch 'sparse' of github.com:Quansight/tensorly into sparse,0
Merge branch 'sparse' into sparse-robust-pca,0
some minor sparse fixes,0
Wrap non-negative PARAFAC for the sparse back-end.,0
Fix typo in non-negative PARAFAC kwarg.,0
Correct kruskal_to_tensor() with both weights and a mask,0
"Make the parafac mask support sparse friendly

This required adding a mask flag to kruskal_to_tensor() and kr() so that the
mask could be absorbed into the calculation in a sparse friendly way. In order
to be sparse friendly, the mask should be a sparse array with a fill value of
1 (True). In other words, the number of missing values should itself be
sparse.

The generic kr() algorithm was rewritten to use a generic outer product, and
kruskal_to_tensor() now uses sum instead of dot (the NumPy kr() just
multiplies the mask).",0
Fix nonnegative -> non_negative,0
"Revert ""Add broadcast_to to the backends""

Turns out I didn't need it.

This reverts commit 729b8b95ab736916929d33d89192423c912b2b4d.",0
Add broadcast_to to the backends,0
Merge branch 'sparse' into sparse-robust-pca,0
Merge branch 'sparse' into sparse-parafac,0
Merge branch 'sparse' into sparse-docs,0
remove sparse tensor,0
"Start adding support for masked values to parafac()

The idea to modify the tensor with the masked array is from Tomasi, Giorgio,
and Rasmus Bro. ""PARAFAC and missing values."" Chemometrics and Intelligent
Laboratory Systems 75.2 (2005): 163-180.

This still needs to be modified to continue to work with sparse arrays. Right
now, it fully decomposes the factors to compute the modification, which will
not work if the fully decomposed factors do not fit in memory.",0
Fix some text in a comment,0
"convert output of svd_threshold() to orginal tensor type, as needed.",0
Add non_negative_parafac to the sparse backend,0
Nonnegative PARAFAC supports sparse now as well,0
"Fold non_negative_parafac() into parafac(non_negative=True)

non_negative_parafac() still exists as a alias to it.",0
tucker should be partial_tucker,0
fix typo: U -> V,0
Add an example showing the parafac decomposition with sparse,0
Remove cruft,0
Add some more docs about the sparse backends,0
Remove sparse_backend from the development_guide index,0
Fix filename spelling,0
Add the sparse backend docs to the index,0
Move the sparse backend docs from the development guide to the user guide,0
Make the docs always builds with the git version of tensorly,0
"Convert A and b to csc in sparse.solve

This avoids warnings from scipy that csc is more efficient when using solve.",0
Add kruskal_to_tensor to the sparse backend,0
Adding a KruskalTensor class,0
use dense linear alg when needed in partial_svd,0
Fix typo in mxnet moveaxis,0
"Remove axis keyword argument from prod() call

It is a different keyword argument name for different backends.",0
"Fix stack for the pytorch backend

It calls the second argument 'dim' instead of 'axis'.",0
Use an implementation of moveaxis that supports negative indices for mxnet,0
"Make sure the dot product is against a n x 1 vector

Only NumPy will take the dot product of a shape (m, n) with shape (n,) array it seems.",0
Fix moveaxis for the pytorch backend for negative source or target,0
Fix moveaxis for the tensorflow backend for negative source or target arguments,0
"Use a.dot(b) for the numpy backend dot

This fixes an issue with the sparse library when dotting a sparse array with a
dense array.",0
Add stack to the pytorch backend,0
Fix an instance of array.dot -> tl.dot,0
Use tl.dot and tl.transpose instead of .dot and .T,0
Merge branch 'sparse' into sparse-parafac,0
Add stack to the other backends,0
Use tl.moveaxis instead of np.moveaxis,0
V gets transposed in quick return,0
Add explanatory comment,0
numpy sparse clip() fix and partial_svd fix for nnz == 0 tensors,0
Print the variation after 2 iterations instead of 3,0
Easier to read verbose output,0
Fix typo in norm calculation,0
Add stack to the backend core so that tl.stack works,0
Remove random-sparse method from initialize_factors(),0
"Add stack() to the numpy and sparse backends

It still needs to be added to the other backends.",0
"Leave in some commented out code, but clarify what it is",0
Indicate how many modes there are in the verbose message,0
initial robust_pca wrapping,0
Fix IndexError in parafac,0
"Compute the norm at the end of ALS in a sparse-safe way

We can never compute the exact kruskal_to_tensor() for a decomposed sparse
tensor, because it will be highly dense due to numerical inaccuracies (the
zeroes of the original will become near-zeroes).

Rather, we compute ||tensor - kruskal_to_tensor(factors)|| as
sqrt(||tensor||^2 + ||factors||^2 - 2<tensor, factors>). The second term can
be computed via sum(hadamard_product(f.T.dot(f) for f in factors)). See
section 5.2.5 from Bader, Brett W., and Tamara G. Kolda. ""Efficient MATLAB
computations with sparse and factored tensors."" SIAM Journal on Scientific
Computing 30.1 (2007): 205-231.

The third term can be computed from the matricized Khatri-Rao product computed
earlier in the algorithm.

The idea was this was taken from the above cited paper and corresponding
source code. See
https://gitlab.com/tensors/tensor_toolbox/blob/master/cp_als.m and
https://gitlab.com/tensors/tensor_toolbox/blob/master/@ktensor/norm.m.

The norm computed here is not numerically identical to the norm as previously
computed, due to numerical differences.

This still requires cleanup to continue to work with non-sparse arrays (I
haven't factored out sparse.stack to the backend yet).",0
more docs,0
try to fix local_threadsafe tests,0
import tensorly as tl,0
make_session_default -> local_threadsafe,0
"Some more verbose printing

This commit should eventually be reverted.",0
Better variable names,0
Experimental work in progress support for sparse matrix-times-khatri-rao,0
added sparse tensor to initi,0
added sparse_tensor and backend system docs,0
revert tests to using relative imports,0
Sparse developer docs fixes,0
Sparse developer docs,0
Clear trailing whitespace in candecomp_parafac.py,0
Split out some variables for easier debugging,0
"Add random-sparse initialize_factors method

This is still experimental. I still need to figure out how to reliably get an
initial set of factors that are dense for the algorithm to work but sparse
enough to work with large sparse tensors.",0
Add solve for the sparse backend,0
Wrap parafac for sparse (it doesn't actually work yet),0
fixed make_session_default tests,0
some minor refactors,0
Skip MPS tests when on tensorflow backend due to unsupported fancy indexing operations,0
Merge branch 'master' into sparse,0
DOC FIX: home page user_guide link,0
Add argmin and argmax for tensorflow,0
register_method is only for functions that *aren't* defined as staticmethods,0
Fix assert_ import,0
Add argmin and argmax to __init__.py,0
Merge branch 'master' into sparse,0
Add tensorly.contrib.sparse.tenalg,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
Add numpy sparse backend,0
Test tensorflow backend on travis,0
Document generic backend methods,0
"Refactor again

- Use classes, to hopefully make the backend implementations clearer for
others.
- Add ability to set backend for all threads. Default is still
thread/context local, but we may want to change that later.",1
Add tests for set_backend/get_backend,0
"Remove backend-specific test utils

Having these as backend specific was unnecessary.

- Create `tensorly.testing`
- Move all test imports to `tensorly.testing`.
- Use absolute imports for test imports. For tests this makes more sense
than relative imports, and is standard practice in the numerical python
ecosystem.",0
flake,0
Refactor cupy backend,0
Refactor tensorflow backend,0
Refactor mxnet backend,0
"Refactor pytorch backend, add flake8",0
"Continue refactor

- Add docstrings for all public methods
- A few style cleanups
- Explicitly import things into top-level namespace
- Remove a few unnecessary backend methods.",0
WIP: refactor backends,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
TYPO,0
MXNET: fix reshape with empty shape,0
Adds tensor contraction,0
DOC FIX: home page user_guide link,0
Random: deprecate old functions,0
DOC: update random module API,0
Refactored random module,0
Sanity checks on rank for MPS,0
FIX: use tl.ones not np.,0
FIX: (multi_)mode_dot with vector,0
Do not set global random seed,0
DOC: add contrib to API,0
Contrib: add decomposition submodule,0
"Merge pull request #73 from wumming/TTcross

Cross-approx algorithm for MSP/tensor-train decomposition",0
Typos,0
Updated guide,0
Removed un-necessary import,0
Edit AUTHORS list,0
move check_random_state(1),0
Specify SVD fun for tucker,0
delete hard coded dtype.,0
Merge branch 'master' into TTcross,0
Merge branch 'TTcross' of https://github.com/wumming/tensorly into TTcross,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
Import dtypes,0
pytorch backend: don't force default dtype,0
modify pytorch's tl.tensor(). delete int()/tensor_as_indices(),0
change int() to tensor_as_indices() and minor changes,0
"use solve instead of inverse, delete npr.seed()",0
"Fix bugs for MxNet

1. wrapper Numpy's inverse for MxNet.
2. MxNet is not robust when vector has size 1. Add a base case for it.
3. MxNet is not robust for a/b. transpose b so that a and b are in the same shape.",0
candecomp_parafac.py should be in tensorly/decomposition instead of tensorly/contrib,0
add back candecomp_parafac.py from master,0
"delete candecomp

I didn't change candecomp. Only modified mps_cross",0
"Merge branch 'tensorly-master' into TTcross

Resolve the conflicts on pytorch and tensorflow backends.",0
Resolved merge conflict by incorporating both suggestions.,0
clear STT,0
delete STT,0
merge2,0
FIX: properly use svd fun provided,0
CPD: add svd parameter (default to 'numpy_svd'),0
merge,0
"Merge pull request #70 from eriche7133/patch-1

FIX: init uses `==` instead `is` to check for init options",0
"Update candecomp_parafac.py

Changed ""is"" to ""=="" for comparing strings in the initialize_factors function.",0
Doc for tensor-train decomposition,0
ENH: adds several options to compute truncated SVD,0
Update Makefile,0
FIX/pytorch: to_numpy detaches variables if needed,0
greedy maxvol,0
np.random -> randomState,0
wordings,0
advantages and disadvantages,0
"Don't specify default dtype for numpy backend

So as not to override passed array's existing dtype by default (type
cast only if dtype is specified)",0
tensorly standard,0
clear the code,0
comment out tf,0
Mxnet works,0
tests,0
TTcross for numpy and pytorch,0
Update quickstart.rst,0
DOC: add MPS/TTrain,0
Optimisations and cleanup,0
Update mps_tensor.py,0
Update test_mps_tensor.py,0
Moved test_mps_decomposition to correct tests folder,0
"Added mps_tensor, mps_decomposition and their tests",0
Update candecomp_parafac.py,0
MAINT: update __init__.py,0
FIX: partial_svd when n_eigenvecs is None,0
Add contrib submodule,0
Bump up version,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
random tensors: add orthogonal parameter,0
Adds orthogonalise parameter for CP decomposition,0
RCP: tests,0
"randomised CP: make max_stagnation optional

If tol=0 and max_stagnation=0, don't compute rec error",0
FIX: preserve tensor context,0
DOC: added randomised CP to API,0
"Merge pull request #53 from SamJohannes/randomised-cp

Adds randomised cp via sampled ALS",0
Re-added the max_stagnation convergence check to r-parafac,0
FIX: test_randomized_cp: rank of source tensor,0
"Refactored randomised_cp

Mainly:
- sample only needed elements from the tensor rather than unfold +
select
- rename with better names
- avoid conversion to and from numpy
- add convergence test",0
Removed obselete variables from random-cp,0
Changed the min/max for arrays in testing,0
Merge branch 'randomised-cp' of https://github.com/SamJohannes/tensorly into randomised-cp,0
Made tests multi-backend compatible,0
Made tests multi-backend compatible,0
Merge branch 'master' into randomised-cp,0
Cleaned up backend utilisation for randomised parafac,0
Removed debugging statements,0
include license in wheels,0
"Backend, partial_svd: full_matrices=false when sensible",0
CI: install pytorch for cpu only,0
DOC: citation + pytorch 0.4.0+,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
Fixed indexing in sample_mttkrp - improved testing of random_als,0
"Merge branch 'master' into randomised-cp

Realign with master",0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
Implemented function to sample KR-product randomly,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
FIX README + bump version,0
Add nose as a dependency,0
FIX: ndim,0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Add nose as a dependency,0
FIX: ndim,0
README: minor update,0
Numpy is default for testing,0
PyTorch backend: update context,0
PyTorch: use newly added native reshape,0
PyTorch: simplify backend,0
DOC,0
DOC + bump version,0
Pytorch backend: update channel,0
Use PyTorch >= '0.4.0',0
DOC: missing dependency for imgmath,0
DOC: minor refactor ci + texlive-extra,0
DOC: apt-get texlive,0
DOC: Make notation more consistent,0
fix: remove spaces,0
Merge branch 'master' of https://github.com/tensorly/tensorly,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
DOC: Refactor matrix,0
DOC: Fix,0
DOC: use conda for install,0
Auto-doc: first attempt,0
Tucker decomposition: s/ranks/rank,0
Temporary fix for cupy.linalg.solve,1
CuPy backend,0
Added CuPy backend,0
"FIX: tensorflow, device setting",1
avoid changing TL for local vars,0
Make Fold and UnFold using tl,0
FIX: device (context) of tensors,0
Remove forgotten print,0
tensorflow backend,0
Clean + prepare for new backend,0
"README: cosmetic changes 

Also use the website's url for the logo so it still works e.g. on pypi",0
forgot some more conj-calls,0
eigenvalue computation requires conjugate transpose,0
tenor -> tensor in docs,0
Make example tensor visible in docs,0
doc/CSS: minor change,0
README: re-added warning re. Python 3 only,0
DOC: a lot of additions and improvements,0
DOCSTRINGS: improved doc,0
Better handling of none-installed backend imports,0
README: more links update,0
Updated README: new website domain!,0
README: fix links + shorten quickstart,0
pytorch backend: fix for partial_svd,0
Cosmetic changes on README + added logo,0
"README: Added quickstart section 

For.. quickstart!",0
README: update description,0
README: reorganise for clarity,0
README: added anaconda badge,0
Added conda packaging meta.yaml,0
README: Using the anaconda repository,0
Made minor change to readme documentation for possible future addition of conda-forge version of tensorly.,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
DOC: added fun to API,0
minor update: changelog,0
setup.py: get version without importing package,0
FIX: import inner in tenalg,0
Do not normalize random factors,0
Add missing hardware context,0
Satisfying coveralls,0
Add `orthogonal` parameter to `random.cp_tensor`,0
Satisfying coveralls,0
Add noisy tensor parafac tests,0
"Refactor parafac initialization

We factor out the factor initialization code from the main parafac algorithm. We
do this in anticipation of upcoming changes to the main algorithm mentioned in
PR #29. Otherwise, `parafac()` will be too large of a function and, therefore,
difficult to debug.

Added a collection of randomized parafac tests, as well.",0
"Update installation.rst

Clarifying python version.",0
"Update README.rst

Clarifying the python version.",0
Add more metrics,0
Pytorch backend: support for axis in mean and sum,0
Numpy backend: add sqrt,0
MXNET backend: support for axis in sum and mean,0
More elegent where() solution and randomized tests,0
Combine where() tests by request,0
"Handle case when zero_like is not available

Pytorch recently added `zeros_like()` but it is not included in recent releases.
Create a fallback in this case.",0
"Add where() to Pytorch backend

Pytorch does not seem to include the `where()` function so we implement our own.",0
"Allow optional weights input in kruskal_to_tensor

In some applications it is useful to scale the factor matrices using a vector of
weights. An optional argument `weights` is added to `kruskal_to_tensor`.",0
Simplify qr implementation,0
Fix norm(order='inf') and clean up added functions,0
Add prod() functions to backend,0
"Add functionality to backend

We add the QR decomposition function `qr()` to the backends as well as update
`norm()` to accept different axes.",0
TYPO in doc,0
Update tensor_decomposition.rst,0
Update tensor_decomposition.rst,0
"FIX test kronecker

Account for numerical error.",0
Increment version,0
Tensor regression on any context,0
Readme: fixed typo,0
Tucker regression: reuse input's context,0
Kruskal regression: reuse input's context,0
Reuse input tensor's context,0
Reuse intput tensor's context,0
Added: function to get tensor context,0
Updated setup.py,0
"Updated requirements

removed MXNet (should be optional)",0
DOC: minor update,0
DOC: updated dev guide,0
FIX: error changes over runs,0
doc-theme: update notebook link,0
DOC: fix notation for unfolding,0
DOC: update backend,0
Added test for inner,0
FIX: generalised inner product,0
Function to get_backend,0
DOC: document set_backend,0
Added links for notebooks,0
DOC: fixed default is param,0
FIX Travis MXNet build,0
Pytorch fix,0
Test for backend setting,0
Test for generalised inner product,0
Adds generalised inner product,0
FIX for khatri-rao of one matrix,0
Updated pytorch backend,0
"Updated MXNet backend

Native kronecker and khatri-rao products + refactoring.",0
Doc build instructions,0
Updated build instructions,0
README: added gitter badge,0
Cleaner PyTorch backend,0
Cleaned NumPy backend,0
Cleaned MXNet backend,0
TRAVIS: pdated build instructions,0
Added tensor decomposition example,0
small typo fix,0
Proof-of-concept pytorch backend,0
Forgotten kruskal_tensor test,0
"Merge pull request #9 from cswiercz/ascii-fix

Remove non-ascii characters from decomposition docstrings",0
"Remove non-ascii characters from decomposition docstrings

The presence of non-ascii characters causes a SyntaxError to be raised on
import. This minor fix removes said characters.",0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Updated doc and website,0
Refactored and updated website,0
DOC: minor refactoring,0
Version 0.2.0 with MXNet backend,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
"Merge pull request #7 from chubei/master

Improving partial_svd by omitting full svd matrices when possible",0
fix random state,0
Add partial_tucker + doc,0
Merge branch 'improve-partial_svd',0
Improved partial_svd by omitting full svd matrices when possible,0
DOC: minor improvements.,0
Fixed display issue on safari,0
"Added partial Tucker decomposition

Allows to perform decomposition along selected mode exclusively while
leaving the others untouched (i.e. identity factor for these).",0
DOC: updated API doc for random module.,0
DOC: fixed equation style,0
Function to add noise to tensors,0
Refactored random module. Moved check_random_state to random module.,0
Increment version,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
DOC: Minor update,0
DOC: minor corrections.,0
DOC: fix math display,0
DOC: minor theme tweaks.,0
New theme for the website.,0
DOC: Left out file.,0
Doc: remove breadcrumbs,0
Added python 3.6 and incremented current version.,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Better github ribbon (especially for mobiles),0
Preparing release.,0
Added robust tensor PCA.,0
DOC: added random module.,0
Added a random module to sample random tensors.,0
FIX: take sqrt of abs of reconstruction error.,0
Added coverage badge.,0
Add coverage with coveralls,0
Creating low rank random matrices.,0
DOC: added doc on Tucker decomposition and regression.,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
Updated version,0
"DOC: added logo, git ribbon + minor changes",0
FIX: proximal naming + updated corresponding doc.,0
"Updated README and setup.py, removed setup.cfg.",0
Added continuous integration (.travis.yml),0
"Updated README.

* Added badge.
* Converted into Restructured Text from markdown.
* Minor edits.",0
DOC: improved documentation.,0
FIX: corrected example plot_tensor,0
DOC: added draft for tensor decomposition + minor changes.,0
DOC: minor changes.,0
Added doc,0
Added examples,0
"Utility function to create specific images.

Useful for testing (e.g. regression models)",0
Cosmetic changes,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
prepare first version,0
Updated setup file,0
Added proximal and HOM,0
Tucker tensor regression,0
Minor doc enhancements,0
Kruskal Tensor Regression,0
Added metrics,0
Tucker decomposition,0
Cosmetic changes,0
Minor changes: moved partial_svd,0
Candecomp-Parafac decomposition,0
Minor changes to norm,0
Added utils and norm,0
Fast partial SVD,0
Sensitive imports,0
Added Tucker tensor,0
Added Kruskal tensor,0
Added n_mode_product,0
Added Kronecker and Khatri-rao,0
Core tensor operations.,0
Initial commit,0
