Commit Message,predict
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Select a device.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Open index file,0
create an empty list to store lines in files.,0
iterate through each line in the input file,0
If the number of lines iterated through is equal or less than the shard size:,0
append to list,0
else yield the list,0
set the line_number variable to the last line number (num) before 'yield' was called,0
yield list (shard/batch),0
Re-initialize list with the index line to begin a new shard.,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
Set self.return_quality_scores,0
Featurize sequences,0
"(X, y , w, ids)",0
Featurize sequences,0
"(X, y , w, ids)",0
Go through each sequence entity in the fastq_file: each sequence consists of 4 lines,0
First line : header description,0
second line : sequence,0
third line : more description usually the same as the first line,0
fourth line: quality scores of the sequence,0
Second line : add sequence to the sequence array,0
Fourth line,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
Sort image files,0
Sometimes zip files contain directories within. Traverse directories,0
Sort label image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
The line here assumes that y generated by shard_generator is a numpy array,0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Try specifying particular columns,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create directory of multiple image files,0
Zip directory of multiple image files,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
These are the known dimensions of a_image.tif,0
These are the known dimensions of a_image.tif,0
"Since the different files have different shapes, makes an object array",0
Test that the order of the contents of an unzipped file is preserved.,0
Load the zip file,0
Load multi_path directly,0
Check that the order of the files is the same,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Default file contains 4 sequences each of length 192 (excluding the end of line character '\n').,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"Expected shape is now (4, 192, 5)",0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
safe operations,0
occupation number gradients,0
get the length of the tensor output,0
other tensor ops,0
add the diagonal with a small eps to safeguard from nan,0
replace the diagonal with infinite (usually used for coulomb matrix),0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
data.shape and segment_ids.shape should be equal,0
"return V.set_(V.storage(), V.storage_offset(), V.size(), tuple(reversed(V.stride())))",0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
isotope-averaged atom masses in a.m.u.,0
from https://www.angelo.edu/faculty/kboudrea/periodic/structure_mass.htm,0
"JCP 41, 3199 (1964); DOI:10.1063/1.1725697",0
taken from PySCF:,0
https://github.com/pyscf/pyscf/blob/45582e915e91890722fcae2bc30fb04867d5c95f/pyscf/data/radii.py#L23,0
I don't know why H has 0.35 while in the reference it is 0.,0
"They are in angstrom, so we need to convert it to Bohr",0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
NOTE We have lot of type ignores here since grover mol-graph which is of type,0
"GraphData have kwargs which are not attributes of GraphData. Hence, in these",0
cases mypy raises GraphData does not have attributes `..`.,0
max with 1 to fix a crash in rare case of all single-heavy-atom mols,0
graph_index indicates which atom belongs to which molecule,0
padding,0
computing a2b,0
only needed if using atom messages,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
"For a node-prediction task, label is not added to edge features and other global features",0
because label here is a node-level attribute and not a graph-level attribute,0
"In this case, the 'y' attribute of GraphData will contain the",0
node-level labels.,0
not a self-loop,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
for each node (E[(X-E[X])^n])^{1/n},0
EPS is added to the absolute value of expectation before taking the nth root for stability,0
"each scaler is a function that takes as input X (B x N x Din), adj (B x N x N) and",0
avg_d (dictionary containing averages over training set) and returns X_scaled (B x N x Din) as output,0
Generate the raising operator matrix,0
Generate the lowering operator matrix,0
Generate the z-generator matrix,0
"Combine the matrices to form the x, z, and y generators",0
Stack the generators along the first dimension to create a tensor,0
The transformation matrix generated is used to change the basis of a vector of,0
real spherical harmonics with representation index 1 to complex spherical harmonics.,0
"Construct the transformation matrix Q for m in range(-k, 0)",0
Set the diagonal elements for m = 0,0
"Construct the transformation matrix Q for m in range(1, k + 1)",0
Apply the factor of (-1j)**k to make the Clebsch-Gordan coefficients real,0
Handle dtype and device options,0
Ensure the tensor is contiguous and on the specified device,0
Get the SU(2) generators for the given quantum angular momentum (spin) value.,0
Get the transformation matrix to change the basis from real to complex spherical harmonics.,0
Convert the SU(2) generators to the SO(3) basis using the transformation matrix Q.,0
"X represents the SU(2) generators, and Q is the transformation matrix from real to complex spherical harmonics.",0
The resulting X matrix will be the SO(3) generators in the complex basis.,0
Return the real part of the SO(3) generators to ensure they are purely real.,0
"Ensure that alpha, beta, and gamma have the same shape for broadcasting.",0
"Ensure the angles are within the range [0, 2*pi) using modulo.",0
Get the SO(3) generators for the given quantum angular momentum (spin) value 'k'.,0
Calculate the Wigner D matrix using the matrix exponential of the generators,0
"and the rotation angles alpha, beta, and gamma in the appropriate order.",0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
Warnings,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Calculation of Step Size and steps,0
Number of atoms per molecule is calculated by counting all the non zero elements(numbers) of every molecule.,0
"It loops over the molecules in the Coulomb matrix and takes the ""2.4"" root of the diagonal of ""2X"" of each molecule's representation.",0
Calculates the Gaussian Distance by passing distance by a gaussian function.,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
dtype=object allows for arrays(images here) of arbitrary size,0
Tasks are either in .sdf.csv file or in the .sdf file itself for QM9 dataset,0
Structures are stored in .sdf file,0
"Note: Here, the order of columns is based on the order in which the values",0
"are appended to `df_row`. Since pos_x, pos_y, pos_z are appended after appending",0
"tasks above, they occur after `tasks` here.",0
"FIXME Ideally, we should use something like a dictionary here to keep it independent",1
of column ordering.,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
"pattern to split the names, e.g. ""model.params[1]"" into [""model"", ""params"", ""[1]""]",0
"return: (nao, nao)",0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
get the unique parameters of A,0
separate the parameters for A and for M,0
"grad_x: (*BABEM, nr, ncols)",0
"x: (*BABEM, nr, ncols)",0
solve (A-biases*M)^T v = grad_x,0
this is the grad of B,0
calculate the grad of matrices parameters,0
calculate the biases gradient,0
calculate the gradient to the biases matrices,0
Hidden,0
"NOTE: currently only works for batched B (1 batch dim), but unbatched A",0
check the parameters,0
convert the numpy/scipy,0
NOTE: The line below is very inefficient for large na and ncols,0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
correct the residual calculation,0
check for the stopping condition,0
move to the next index,0
"x: (ncols, *, nr, 1)",0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
correct the residual calculation regularly,0
calculate the residual,0
save the best results,0
check for the stopping conditions,0
"x: (ncols, *, nr, 1)",0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
res = res * B_norm,0
save the best results,0
general helpers,0
get the linear operator (including the MXE part),0
"A: (*BA, nr, nr) linop",0
"B: (*BB, nr, ncols)",0
"E: (*BE, ncols)",0
"M: (*BM, nr, nr) linop",0
"x: (ncols, *BX, nr, 1)",0
"x: (ncols, *BX, nr, 1)",0
estimate if it's posdef with power iteration,0
set posdef to False to make the operator becomes AT * A so it is,0
hermitian,0
TODO: the posdef check by largest eival only works for Hermitian/symmetric,1
"matrix, but it doesn't always work for non-symmetric matrix.",0
"In non-symmetric case, one need to do Cholesky LDL decomposition",0
"if the largest eigenvalue is negative, then it's not posdef",0
"otherwise, calculate the lowest eigenvalue to check if it's positive",0
get the linear operation if it is not a posdef (A -> AT.A),0
cg and bicgstab helpers,0
rootfinder-based,0
using rootfinder algorithm,0
set up the function for the rootfinding,0
"xi: (*BX, nr*ncols)",0
setup the initial guess (the batch dimension must be the largest),0
check if xnorm is converging,0
Broadcast Utilities,0
check the hermitian,0
check which methods are implemented,0
@abstractmethod,0
@abstractmethod # (optional),0
@abstractmethod,0
@abstractmethod,0
implemented functions,0
use batched mv as mm,0
move the last dimension to the very first dimension to be broadcasted,0
apply batched mv and restore the initial shape,0
use batched mv as mm,0
move the last dimension to the very first dimension to be broadcasted,0
apply batched mv and restore the initial shape,0
special functions,0
properties,0
implementation,0
private functions,0
"xt: (*BY, p)",0
"xdummy: (*BY, q)",0
calculate y = Ax,0
calculate (dL/dx)^T = A^T (dL/dy)^T with (dL/dy)^T = xt,0
Helper Classes,0
"if it is a method from an object, unroll the parameters and add",0
the object's parameters as well,0
get the unique ids,0
search the id if it has been added to the list,0
debugging,0
check the method input,0
assert if the method preserve the float tensors of the object,0
now assert if all_params0 == all_params1,0
get all tensor parameters in the object,0
get the parameter tensors used in the operation and the tensors specified by the developer,0
check if the userparams contains non-tensor,0
"check if there are missing parameters (present in operating params, but not in the user params)",0
if oper_names[i] not in user_names:,0
"if there are missing parameters, give a warning (because the program",0
"can still run correctly, e.g. missing parameters are parameters that",0
are never set to require grad),0
"check if there are excessive parameters (present in the user params, but not in the operating params)",0
if user_names[i] not in oper_names:,0
"if there are excess parameters, give warnings",0
get all the tensors recursively,0
copy the tensors and require them to be differentiable,0
run the method and see which one has the gradients,0
return the original tensor,0
traversing functions,0
None is set as default arg to avoid expanding list for multiple,0
invokes of _get_tensors without exception_ids argument,0
add exception to avoid infinite loop if there is a mutual dependant on objects,0
get the tensors recursively towards torch.nn.Module,0
traverse down the object to collect the tensors,0
traverse down the object to collect the tensors,0
flake8: noqa,0
TODO: implement robust LOBPCG and put it here,1
get the unique parameters of A & M,0
adapted from scipy.sparse.linalg.svds,0
clamp the eigenvalues to a small positive values to avoid numerical,0
instability,0
separate the sets of parameters,0
options for calculating the backward (not for `solve`),0
save for the backward,0
"evals: (*BAM, neig)",0
"evecs: (*BAM, na, neig)",0
get the variables from ctx,0
set the default values of degen_*tol,0
check the degeneracy,0
"idx_degen: (*BAM, neig, neig)",0
the loss function where the gradient will be retrieved,0
"warnings: if not all params have the connection to the output of A,",0
it could cause an infinite loop because pytorch will keep looking,0
for the *params node and propagate further backward via the `evecs`,0
path. So make sure all the *params are all connected in the graph.,0
"if degenerate, check the conditions for finite derivative",0
"if the requirements are not satisfied, raises a warning",0
calculate the contributions from the eigenvalues,0
calculate the contributions from the eigenvectors,0
orthogonalize the grad_evecs with evecs,0
"Based on test cases, complex datatype is more likely to suffer from",0
"singularity error when doing the inverse. Therefore, I add a small",0
offset here to prevent that from happening,0
orthogonalize gevecs w.r.t. evecs,0
accummulate the gradient contributions,0
the contribution from the parallel elements,0
"evals: (*BAM, neig)",0
get the index of degeneracies,0
contracted using opt_einsum,0
"evals, evecs = torch.linalg.eigh(Amatrix, eigenvectors=True)  # (*BA, q), (*BA, q, q)",0
M decomposition to make A symmetric,0
it is done this way to make it numerically stable in avoiding,0
complex eigenvalues for (near-)degenerate case,0
calculate the eigenvalues and eigenvectors,0
(the eigvecs are normalized in M-space),0
"evals, evecs = torch.linalg.eigh(A2, eigenvectors=True)  # (*BAM, q, q)",0
temporary solution to https://github.com/pytorch/pytorch/issues/47599,1
remove the degenerate part,0
see https://arxiv.org/pdf/2011.04366.pdf,0
take the contribution from the eivec,0
calculate the contribution from the eival,0
symmetrize to reduce numerical instability,0
TODO: optimize for large linear operator and strict min_eps,1
Ideas:,0
(1) use better strategy to get the estimate on eigenvalues,0
(2) use restart strategy,0
get the shape of the transformation,0
set up the initial guess,0
Can be optimized by saving AV from the previous iteration and only,0
operate AV for the new V. This works because the old V has already,0
"been orthogonalized, so it will stay the same",0
"AV = A.mm(V) # (*BAM,na,nguess)",0
eigvals are sorted from the lowest,0
"eval: (*BAM, nguess), evec: (*BAM, nguess, nguess)",0
calculate the eigenvectors of A,0
calculate the residual,0
print information and check convergence,0
apply the preconditioner,0
orthogonalize t with the rest of the V,0
orthogonalize V,0
check idxs,0
make the function a functional (depends on all parameters in the object),0
params tensor is the LinearOperator's parameters,0
"if the object parameter is still the same, then use the pre-calculated values",0
"otherwise, reevaluate by replacing the parameters with the new tensor params",0
self.yfcn: (*nin),0
file mostly from SciPy:,0
https://github.com/scipy/scipy/blob/914523af3bc03fe7bf61f621363fca27e97ca1d6/scipy/optimize/nonlin.py#L221,0
and converted to PyTorch for GPU efficiency,0
jacobian parameters,0
stopping criteria,0
algorithm parameters,0
misc parameters,0
"solving complex rootfinder by concatenating real and imaginary part,",0
making the variable twice as long,0
represents x as a long real vector,0
pack a long real vector into the shape accepted by fcn,0
shorthand for the function,0
set up the jacobian,0
solver tolerance,0
save the best results,0
print out dx and df,0
adjust forcing parameters for inexact solve,0
jacobian parameters,0
stopping criteria,0
algorithm parameters,0
misc parameters,0
"No suitable step length found. Take the full Newton step,",0
and hope for the best.,0
"Otherwise, compute the minimizer of a quadratic interpolant:",0
"Otherwise, loop with cubic interpolation until we find an alpha which",0
"satisfies the first Wolfe condition (since we are backtracking, we will",0
assume that the value of alpha is not too small and satisfies the second,0
condition.,0
Failed to find a suitable step length,0
gd parameters,0
stopping conditions,0
misc parameters,0
update the step,0
check the stopping conditions,0
gd parameters,0
stopping conditions,0
misc parameters,0
update the step,0
check the stopping conditions,0
get the best values,0
usually user set maxiter == 0 just to wrap the minimizer backprop,0
taking most of the part from SciPy,0
setup the approximate inverse Jacobian,0
update Gm,0
keep the rank small,0
keep the rank small,0
raise RuntimeError,0
"u: (n, 1), s: (1,), vh: (1, n)",0
"equilibrium can use all rootfinder methods, but there are several methods developed specifically for",0
equilibrium (or fixed-point iterations). This dictionary gives the list of those special methods.,0
"minimization can use rootfinder algorithm, so check if it is actually",0
"using the optimization algorithm, not the rootfinder algorithm",0
the rootfinder algorithms are designed to move to the opposite direction,0
"of the output of the function, so the output of this function is just",0
the grad of z w.r.t. y,0
"if it is going to optimization method, then also returns the value",0
"if using the optimization algorithm, then the forward function is the one",0
that returns f and grad,0
"if it is just using the rootfinder algorithm, then the forward function",0
is the one that returns only the grad,0
set default options,0
split tensors and non-tensors params,0
merge the tensor and nontensor parameters,0
dL/df,0
get the grad for the params,0
anderson_acc parameters,0
stopping criteria,0
misc options,0
"x0: (..., *nfeats)",0
"reshape x to have a shape of (batch_size, feats_dim)",0
"x: (..., *nfeats)",0
"xn: (..., feats_tot)",0
"x: (..., feats_dim)",0
"torch.bmm(g, g.transpose(-2, -1))",0
"alpha: (batch_size, nsize)",0
check the stopping condition,0
update the xn,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
"6 atoms: CC -> 2, CCC -> 3",0
"7 bonds: CC -> 2, CCC -> 4 (bonds are considered as undirected",0
and a single bond contributes to 2 bonds),0
graph-level labels,0
node-level labels,0
graph.y contains node-labels and graph.node_features.shape[0],0
holds number of nodes in that graph,0
Get Data,0
Checks that all atoms exits in array,0
Checks shape of gaussian distance,0
Checks all molecule membership exist,0
Check Distance Membership shape,0
Prepare Data,0
Run,0
Prepare Data,0
Inputs property,0
Without reverse input,0
With revercse input,0
Prepare Data,0
Inputs property,0
TODO test more formats for ligand,0
Test if the output has the correct shape.,0
Test for the case of zero momentum (j=0).,0
Test for the case of momentum j=1 (spin-1).,0
"Expected J_x, J_z, J_y matrices for j=1",0
"Test for j = 0, which means we have a 1x1 transformation matrix",0
"Test for j = 2, which means we have a 5x5 transformation matrix",0
Test for device placement (CPU to CUDA),0
Test for dtype conversion (complex128 to complex64),0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
dummy function which can be passed as the parameter f to simultaneous_move and single_move,0
test for gauss_initialize_position,0
testing symmetric simultaneous_move,0
testing asymmetric simultaneous_move,0
testing symmetric single_move,0
testing asymmetric single_move,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(3)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
get the location and weights of the integration in its original,0
coordinate,0
get the coordinate in Cartesian,0
integration element,0
Grid Transformations,0
"xnew is from [xmin, xmax]",0
"r is approximately from [rmin, rmax]",0
type of the atom Z,0
input types,0
"if the basis has been normalized before, then do nothing",0
normalize to have individual gaussian integral to be 1 (if coeff is 1),0
normalize the coefficients in the basis (because some basis such as,0
def2-svp-jkfit is not normalized to have 1 in overlap),0
input basis type,0
QR decomposition's solution is not unique in a way that every column,0
can be multiplied by -1 and it still a solution,0
"So, to remove the non-uniqueness, we will make the sign of the sum",0
positive.,0
construct the rotation parameters,0
calculate the orthogonal orbital,0
"orb: (*, nao, norb)",0
the orbital becomes the coefficients while params is all zeros (no rotation),0
properties,0
setups,0
fock matrix components,0
interface to dm,0
energy of the Hamiltonian,0
free parameters for variational method,0
Editable module,0
1 / cell.vol == det(b) / (2 pi)^3,0
drop ls that has norm > rcut * 1.05,0
System Properties,0
all-time calculations,0
(i.e. meaning it does not have to be executed to run the functions below),0
"densinfo.value & lapl: (*BD, nr)",0
"densinfo.grad: (*BD, ndim, nr)",0
"return: (*BD, nr)",0
"densinfo.value & lapl: (*BD, nr)",0
"densinfo.grad: (*BD, ndim, nr)",0
return:,0
"potentialinfo.value & lapl: (*BD, nr)",0
"potentialinfo.grad: (*BD, ndim, nr)",0
mark the densinfo components as requiring grads,0
"mgga might only use one of either lapl or kin, so we need to change the deriv manually to 0s",0
"mgga might only use one of either lapl or kin, so we need to change the deriv manually to 0s",0
set the vars to require grad and returns the previous state of the vars,0
restore the state of requiring grad based on reqgrads list,0
all vars before this function requires grad,0
getting which parameters should require grad,0
set the params to require grad,0
special operations,0
properties,0
TODO: use regex!,0
convert the atomz to tensor,0
convert the atompos to tensor,0
"convert to dtype if atomzs is a floating point tensor, not an integer tensor",0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
Break the loop if max_records is set,0
Break the loop if max_records is set,0
Break the loop if max_records is set,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
biological sequence featurizers,0
tokenizers,0
support classes,0
dqc dependencies,0
get the density matrix from PySCF's CCSD calculation,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
condition if the original atom order is required,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
"np.max() method works only for a non-empty array, so size of the array should be non-zero",0
Adding shapes of kwargs,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
Create a mapping from the original node indices to the new node indices,0
Filter and reindex node features,0
Filter and reindex edge indices and edge features,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
number of nodes in each graph,0
cumulative number of nodes for each graph. This is necessary because the values in edge_index are node indices of all of the graphs in graph_list and so we need to offset the indices by the number of nodes in the previous graphs.,0
"columns are the edge index, values are the node index",0
graph_index indicates which nodes belong to which graph,0
Batch user defined attributes,0
Convert edge_index to adjacency list,0
Breadth-first search,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Dimension of atom feature vector,0
len(choices) +1 and len(ATOM_FEATURES_HYBRIDIZATION) +1 to include room for unknown set,0
+ 2 at end for is_in_aromatic and mass,0
dictionary of available feature generators,0
for H2,0
"not all features are equally long, so used methane as dummy molecule to determine length",0
Fix nans in features,0
add edge list considering a directed graph,0
get atom features,0
get edge(bond) features,0
get edge index,0
get global features,0
0 represents a masked bond,0
atoms,0
bonds,0
"Graph connectivity in COO format with shape [2, num_edges]",0
"Edge feature matrix with shape [num_edges, num_edge_features]",0
Always treat the bond as directed.,0
add mapping between bond b1 and atom a2 (destination atom),0
add mapping between bond id and atom id (a1),0
add mapping between bond id and atom a1 (source atom),0
update index on bond and reverse bond mappings,0
generate SMILES for fragments,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
Copied from https://github.com/samoturk/mol2vec/blob/850d944d5f48a58e26ed0264332b5741f72555aa/mol2vec/features.py#L129-L168,0
"merge identifiers alternating radius to sentence: atom 0 radius0, atom 0 radius 1, etc.",0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
"row, col = edge_index",0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
get atom features,0
get edge index,0
user has not specified a descriptor list,0
creates normalized functions dictionary if normalized features are required,0
get cdf(feature) for that descriptor,0
get sequence of descriptor names and normalization parameters from DescriptorsNormalizationParameters class,0
get required distribution_ from `scipy.stats` module.,0
cdf => cumulative density functions,0
make the cdf with the parameters.,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
similar to SNAP featurizer. both taken from Open Graph Benchmark (OGB) github.com/snap-stanford/ogb,0
"The difference between this and the SNAP features is the lack of masking tokens, possible_implicit_valence_list, possible_bond_dirs",0
"and the prescence of possible_bond_stereo_list,  possible_is_conjugated_list, possible_is_in_ring_list,",0
FIXME Add support for multiple conformers (wip),1
"def __init__(self, num_conformers: int = 1, rmsd_cutoff: float = 2):",0
"""""""",0
Initialize the RDKitConformerFeaturizer with the given parameters.,0
Parameters,0
----------,0
"num_conformers : int, optional, default=1",0
The number of conformers to generate for each molecule.,0
"rmsd_cutoff : float, optional, default=2",0
The root-mean-square deviation (RMSD) cutoff value. Conformers with an RMSD,0
greater than this value will be discarded.,0
"""""""",0
self.num_conformers = num_conformers,0
self.rmsd_cutoff = rmsd_cutoff,0
Derived from https://github.com/HannesStark/3DInfomax/blob/5cd32629c690e119bcae8726acedefdb0aa037fc/datasets/qm9_dataset_rdkit_conformers.py#L377,0
add hydrogen bonds to molecule because they are not in the smiles representation,0
FIXME Add support for multiple conformers (wip),1
"AllChem.EmbedMultipleConfs(mol, self.num_conformers)",0
AllChem.MMFFOptimizeMolecule(mol),0
rmsd_list = [],0
"rdMolAlign.AlignMolConformers(mol, RMSlist=rmsd_list)",0
# insert 0 RMSD for first conformer,0
"rmsd_list.insert(0, 0)",0
conformers = [,0
mol.GetConformer(i),0
for i in range(self.num_conformers),0
if rmsd_list[i] < self.rmsd_cutoff,0
],0
"# if conformer list is less than num_conformers, pad by repeating conformers",0
conf_idx = 0,0
while len(conformers) < self.num_conformers:,0
conformers.append(conformers[conf_idx]),0
conf_idx += 1,0
coordinates = [conf.GetPositions() for conf in conformers],0
add edges in both directions,0
"Graph connectivity in COO format with shape [2, num_edges]",0
FIXME Add support for multiple conformers (wip),1
graph_list = [],0
for i in range(self.num_conformers):,0
graph_list.append(,0
"GraphData(node_pos_features=np.array(coordinates[i]),",0
"node_features=np.array(atom_features_list),",0
"edge_features=np.array(edge_features_list),",0
edge_index=np.array(edges_list).T)),0
return graph_list,0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
"sort first by frequency, then alphabetically",0
"sort first by frequency, then alphabetically",0
sorting the atoms neighbors,0
concatenating the sorted neighbors,0
"sort first by frequency, then alphabetically",0
"sort first by frequency, then alphabetically",0
flake8: noqa,0
superclass accepts a DeepChem dataset while huggingface vocabulary builders,0
reads data from file,0
test with max size,0
test build from csv,0
test with max size,0
load the vocabulary by passing filename,0
test tokenization of a single point,0
load the vocabulary by passing the filename,0
test tokenization of a single point,0
Build vocabulary by wrapping in huggingface vocabulary builder,0
Load vocabulary and do a basic sanity check on the vocabulary,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
number of indices where feature count is more than 1,0
no normalized feature value should be greater than 1.0,0
"151 = 133 + 18 (133 -> one hot encoding from _ATOM_FEATURES, 18 other features)",0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
NOTE: The test depends on the the pretrained vocabulary,0
(seyonec/PubChem10M_SMILES_BPE_60k). If the pretrained vocabulary is modified,0
"(which can be since it is an external resource), the test might fail.",0
construct edge (bond) index,0
add edge list considering a directed graph,0
test for 'MolGraphConvFeaturizer' class,0
"for ""C1=CC=CN=C1"" original bond index is not equal to canonical bond index",0
"Requirements - transformers, tokenizers",0
no normalized feature value should be greater than 1.0,0
these are the properties used in grover,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
Test featurizer with atom 3-D coordinates as kwargs,0
load sample dataset,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"number of indices, where feature count is more than 1, should be 0",0
number of indices where feature count is more than 1,0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
both reactant and product are null,0
reactant is null,0
product is null,0
valid reaction: [CH2:1]=[CH:2][CH:3]=[CH:4][CH2:5][H:6]>> [H:6][CH2:1][CH:2]=[CH:3][CH:4]=[CH2:5],0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
z is kwargs,0
check convert function,0
z is kwargs,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Set up tests.,0
Set up testing parameters.,0
the atom order for 'C' is same in case of canonical and original ordering,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
"bond and its reverse bond, therefore num_bonds * 2 edges",0
9 atom features,0
"Graph connectivity in COO format with shape [2, num_edges]",0
3 bond features,0
3 xyz coordinates for each atom in the conformer,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
Calculate frequency,0
flake8: noqa,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Return identity if no tuple to split to,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Invalid because valence for atom 5 N is greater than permitted (4),0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
NOTE The below comment is from original source code,0
dist_loss = av_dist_loss + bv_dist_loss + fg_dist_loss,0
return av_loss + fg_loss + dist_coff * dist_loss,0
"return overall_loss, av_loss, bv_loss, fg_loss, av_dist_loss, bv_dist_loss, fg_dist_loss",0
We just return overall_loss since TorchModel can handle only a single loss,0
loss for nodes,0
converting the binary classification to multiclass classification,0
positive context prediction is the dot product of substructure representation and true context representation,0
negative context prediction is the dot product of substructure representation and negative (random) context representation.,0
positive substructure prediction is the dot product of expanded substructure representation and true overlapped node representation.,0
shift indices of substructures to create negative examples,0
negative substructure prediction is the dot product of shifted expanded substructure representation and true overlapped node representation.,0
Compute the loss for positive and negative context representations,0
The final loss is the sum of positive and negative context losses,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################  # noqa: E266,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################  # noqa: E266,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Dependency Models,0
scikit-learn model,0
PyTorch models,0
Pytorch models with torch-geometric dependency,0
TODO We should clean up DMPNN and remove torch_geometric dependency during import,1
Pytorch-lightning modules import,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
"Create an identical model, do a single step of fitting with restore=True and make sure it got restored correctly.",0
check that the first layer is still the same between the two models,0
check that the predictions are different because of the fine tuning,0
check that the first layer is different between the two models,0
Conv2d and Linear layers test(CNN classification),0
Fit trained model,0
Eval model on train,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
testing batch size > 1,0
testing true values,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
https://github.com/diffqc/dqc/blob/742eb2576418464609f942def4fb7c3bbdc0cd82/dqc/test/test_xc.py#L15,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
.8 to save resources for a difficult task,0
.2 to save resources for a difficult task,0
first iteration loss is around 50,0
The first pass of the transformation should be 0,0
Test sampling method,0
Test log_prob method (this method is used when inverse pass),0
Output must be a Nth zero array since nothing is being learned yet,0
Featurize to assert for tests,0
Assert errors for sample method,0
Assert errors for log_prob method,0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec]",0
atom features,0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec]",0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Assigning tensorflow equivalent weights to torch layer,0
"Outputs should be [A, P]",0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = Metric(,0
"roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
xgboost test,0
fit trained model,0
"If ES rounds are more than total epochs, it will never trigger",0
Find the number of boosting rounds in the model,0
"If rounds boosted are less than total estimators, it means ES was triggered",0
prepare dataset,0
lightgbm test,0
fit trained model,0
"If ES rounds are more than total epochs, it will never trigger",0
Find the number of boosting rounds in the model,0
"If rounds ran are less than estimators, it means ES was triggered",0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Testing graphnet for a single graph,0
Testing for consistency,0
Testing with a batch of Graphs,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
TODO The test is skipped as FakeGraphGenerator has to be updated,1
to generate regression labels,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
"Linear layers for making query, key, value",0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Set up tests.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Finetune model weights should not match before loading from pretrained model,0
Finetune model weights should match after loading from pretrained model,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Testing whether error throws up when spin is wrong,0
Testing the spin values,0
Testing ionic initialization,0
Test for the evaluate_hf_solution function of FerminetModel class,0
"The solution should be of the shape (number of electrons, number of electrons)",0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
The highest recorded score should match get_best_score().,0
Reload the save model and confirm that it matches the best logged score.,0
Make sure get_best_score() still works when save_dir is not specified,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
"n_atoms = 4  # In CCC and C, there are 4 atoms",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
TODO(rbharath): What is the shape of outputs supposed to be?,1
"I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
"By setting the `box_size` to effectively zero, the result should only contain `nan`.",0
Check that layer has three trainable parameters.,0
Check when `box_size` is of wrong dimensionality.,0
Check when `inputs` is of wrong length.,0
Create random local node representations and global graph representations,0
Compute similarity scores using the discriminator,0
Check if the output has the correct shape and dtype,0
total_n_atoms = 4,0
n_atom_feat = 4,0
"atom_feat = np.random.rand(total_n_atoms, n_atom_feat)",0
Embeddings and results from Tensorflow implementation,0
Weights and Embeddings from Tensorflow implementation,0
init parameters,0
generate features for testing,0
index of pair features,0
atom features,0
pair features,0
tensors for torch layer,0
assigning tensorflow layer weights to torch layer,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Dataset of SMILES strings for testing SeqToSeq models.,0
Train the model on random sequences. We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Initialize the model,0
Fit the Model,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
Note: Following are some changes,0
compared to the TensorFlow unit test:,0
1. Changed nb_epoch to 300.,0
2. Increased the learning_rate to 0.0003.,0
Note: This needs to be inspected in future to understand low score as compared to a score of 0.9 in tensorflow unit test.,0
Note: Following are some changes,0
compared to the TensorFlow unit test:,0
1. Changed nb_epoch to 400.,0
2. Reduced the number of data points to 2.,0
3. Increased batch_size to 20.,0
4. Increased the learning_rate to 0.0003.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Note: This needs to be inspected in future to understand low score.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Note: Compared to the tensorflow unit test increased the nb_epoch to 600.,0
Eval model on train,0
Note: This needs to be inspected in future to understand low score as compared to a score of 0.8 in tensorflow unit test.,0
Create input tensor with values within full_atom_feature_dims,0
Create input tensor with values within full_bond_feature_dims,0
Compute the global graph representation,0
Compute positive and negative scores,0
Check if the loss is a scalar and has the correct dtype,0
Check if the loss is a scalar and non-negative,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
Get Data,0
Check Shape,0
Check number of parameters,0
Eval model on train,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
atom features,0
Gaussian histograms expands into 11 Gaussian buckets.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
For training,0
For sample generation,0
Define the dense layers,0
"Ignoring type. For TorchModel, loss is a required argument but HuggingFace computes",0
"loss during the forward iteration, removing the need for a loss function.",0
FIXME Transformers library has an api like AutoModel.from_pretrained. It allows to,1
initialise and create a model instance directly without requiring a class instance initialisation step.,0
"To use `load_from_pretrained` in DeepChem, we need to follow a two step process",0
of initialising class instance and then loading weights via `load_from_pretrained`.,0
y is None during predict,0
Main training loop.,0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
copy the input graph to avoid in-place operations,0
"FIXME For pretraining task, both model2d and model3d but the super class",1
"can't handle two models for contrastive learning, hence we pass only model2d",0
torch's one-hot encoding works with integer data types.,0
"We convert labels to integer, one-hot encode and convert it back to float",0
for making it suitable to loss function,0
graphs = [[,0
graph_data.to_dgl_graph().to(self.device) for graph_data in row,0
] for row in inputs],0
convert the GraphData objects to DGL graphs,0
"TODO Ideally, we should use a lr schedule but we need to update lr_scheduler.step() method",1
in ModularTorchModel.fit_generator to accept a metric.,0
"self._lr_schedule = torch.optim.lr_scheduler.ReduceLROnPlateau(self._pytorch_optimizer,",0
mode='min'),0
Initialize buffers,0
Accumulate statistics for Fisher matrices,0
Initialize buffers,0
p_grad_mat is of output_dim * input_dim,0
inv((ss')) p_grad_mat inv(aa') = [ Q_g (1/R_g) Q_g^T ] @ p_grad_mat @ [Q_a (1/R_a) Q_a^T],0
we always put gradient w.r.t weight in [0],0
and w.r.t bias in [1],0
do kl clip,0
TODO Explain in detail what the four outcompes are,1
The bond and rev bond have even and odd ids respectively.,0
FIXME This layer is similar to DMPNNEncoderLayer and they,1
must be unified.,0
Shared weight matrix across depths (default),0
Except reverse bond its-self(w) ! \sum_{k\in N(u) \ w},0
"FIXME When input_layer is none, for the first iteration of message passing, we should ideally",1
be using different weight matrix since message will be of shape num_bonds x f_bonds_dim,0
"in the first iteration and in the subsequent iterations, it will be num_bonds x hidden_size",0
FIXME We assume that we are using a hidden layer to transform the initial atom message,1
and bond messages to hidden dimension size.,0
self.atom_messages is False,0
Note: Elementwise affine has to be consistent with the pre-training phase,0
multi-headed attention,0
support no residual connection in MTBlock.,0
atom input to atom output,0
bond to atom,0
atom input to bond output,0
bond input to bond output,0
Inputs,0
Noise Input,0
Data Input,0
Data Inputs,0
Conditional Input,0
Conditional Inputs,0
Generators,0
Discriminators,0
Forward pass through generators,0
Forward pass through discriminators,0
Compute loss functions,0
Compute the weighted errors,0
Create learnable weights for the generators and discriminators.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
PyTorch layers require input and output channels as parameter,0
"if only one layer to make the model creating loop below work, multiply layer_filters wutg 2",0
"Python tuples use 0 based indexing, dims defines number of dimension for convolutional operation",0
initializing layer bias with nn.init gives mypy typecheck error,0
using the following workaround,1
residual blocks can only be used when successive layers have the same output shape,0
Used for converting edges back to their original shape,0
Compute mean edge features for each node by dst_index (each node,0
"receives information from edges which have that node as its destination,",0
hence the computation uses dst_index to aggregate information),0
holding bi-directional edges in case of undirected graphs,0
coonverting edge features to its original shape,0
Input,0
Shared weight matrix across depths (default):,0
For messages hidden states,0
For atom hidden states,0
num_atoms x hidden_size,0
num_molecules x hidden_size,0
concat global features,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
No other forget biases supported right now.,0
Sum the pairwise-interactions between atoms that are of `atom_type` and its neighbors for each atom type in `atom_types`.,0
Define the layers,0
Create the final layers,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set `pad_batches=True`,0
"z = torch.mm(h, self.U) + self.b",0
create a boolean mask for each partition,0
partition the input tensor using the masks,0
Case when >2 inputs are passed,0
Loop over the remaining convolution layers,0
Apply the current layer to the outputs from the previous layer,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
Construct internal trainable weights,0
Weight matrix and bias matrix required to compute new atom layer from the previous atom layer,0
Weight matrix and bias matrix required to compute new atom layer from the previous pair layer,0
Weight matrix and bias matrix required to compute new pair layer from the previous atom layer,0
Weight matrix and bias matrix required to compute new pair layer from the previous pair layer,0
flake8: noqa,0
Converting the input to torch tensors,0
"AA is a tensor with shape[total_num_atoms,n_hidden_AA]",0
"PA is a tensor with shape[total number of pairs,n_hidden_PA]",0
Split the PA tensor according to the 'pair_split' tensor,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"PP is a tensor with shape [total number of pairs,n_hidden_PP]",0
Integrate the Cross Layer Mapping inside the Global Message Passing,0
Message Passing operation,0
Update function f_u,0
Message Passing operation,0
Teacher forcing: Feed the target as the next input,0
Without teacher forcing: use its own predictions as the next input,0
Initializing the first layer (first layer has different dims than others),0
filling the weights with xavier uniform method for the linear weights and random assignment for the bias,0
Calculating one-electron feature's average,0
temporary lists containing each electron's embeddings which will be torch.stack on the end,0
Calculating two-electron feature's average,0
"initialized weights with torch.zeros, torch.eye and using xavier init.",0
temporary list to stack upon electrons axis at the end,0
Integrate the Cross Layer Mapping inside the Local Message Passing,0
Message Passing 1,0
Message Passing 2,0
Aggregation,0
Update function f_u,0
Output Module,0
import torch.nn as nn,0
creating one and two electron features,0
setting the fermient layer and fermient envelope layer batch size to be that of the current batch size of the model. This enables for vectorized calculations of hessians and jacobians.,0
using functorch to calcualte hessian and jacobian in one go,0
using index tensors to index out the hessian elemennts corresponding to the same variable (cross-variable derivatives are ignored),0
"doing all the calculation and detaching from graph to save memory, which allows larger batch size",0
cloning self.input which will serve as the new input for the vectorized functions.,0
lambda function for calculating the log of absolute value of the wave function.,0
using jacrev for the jacobian and jacrev twice for to calculate the hessian. The functorch's hessian function if directly used does not give stable results.,0
making the batch size temporarily as 1 for the vectorization of hessian and jacobian.,0
Initialization for ionic molecules,0
hook function below is an efficient way modifying the gradients on the go rather than looping,0
using non-local variables as a means of parameter passing,0
the move function calculates the energy of sampled electrons and samples new set of electrons (does not calculate loss),0
clipping local energies which are away 5 times the variance from the median,0
using the sampled electrons from the electron sampler for bacward pass and modifying gradients,0
going through each step of random walk and calculating the modified gradients with local energies,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
mypy check is ignored for global_features as it is not a default attribute,0
of GraphData. It is created during runtime using **kwargs.,0
mapping from bond index to the index of the atom (where the bond is coming from),0
"mapping from bond index to concat(in_atom, bond) features",0
mapping from atom index to list of indicies of incoming bonds,0
mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond (excluding the reverse bonds),0
zero padded at the end,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
padded with -1 at the end,0
mapping from bond index to the index of the atom (where the bond if going to),0
mapping from atom index to list of indicies of incoming bonds,0
get maximum number of incoming bonds,0
Make number of incoming bonds equal to maximum number of bonds.,0
This is done by appending -1 to fill remaining space at each atom indices.,0
mapping from bond index to the index of the reverse bond,0
get encoder,0
get input size for ffn,0
get output size for ffn,0
get ffn,0
Steps to get `molecules_unbatch_key`:,0
1. Get the tensor containing the indices of first atoms of each molecule,0
2. Get the tensor containing number of atoms of each molecule,0
by taking the difference between consecutive indices.,0
3. Convert the tensor to a list.,0
num_molecules x (enc_hidden + global_features_size),0
ffn_output (`self.n_tasks` or `self.n_tasks * self.n_classes`),0
"atom feature matrix with shape [number of atoms, number of features]",0
concatenated feature vector which contains concatenation of initial atom and bond features,0
mapping from atom index to list of indicies of incoming bonds,0
mapping that maps bond index to 'array of indices of the bonds',0
incoming at the initial atom of the bond (excluding the reverse bonds),0
array of global molecular features,0
maximum number of incoming bonds in the batch,0
generate concatenated feature vector and mappings,0
pad all mappings to maximum number of incoming bonds in the batch,0
the hidden size here is the output size of last layer in mol_atom_from_atom_ffn and mol_atom_from_bond_ffn components.,0
it is necessary that aforementioned components produces output tensor of same size.,0
"In training mode, we return atom level aggregated output and bond level aggregated output.",0
The training has an additional objective which ensures that atom and bond level aggregated outputs,0
are similar to each other apart from the objective of making the aggregated output closer to each,0
other.,0
"FIXME In the above step, we initialize modular torch model but",1
something is missing here. The attribute loss from TorchModel gets assigned `loss_func`,0
by super class initialization in ModularTorchModel but here we reinitialize it.,0
in eval mode.,0
"Also adding features, this is optional",0
FIXME I am rewriting restore because the restore method in parent class,1
does not restore layers which are not components. This restore method,0
can restore an full model.,0
may mess with loading pretrained weights,0
remove relu for the last layer,0
"reshapes node_representation to (num_nodes, num_layers * emb_dim)",0
"for supervised tasks, add prediction head",0
unsupervised tasks do not need a pred head,0
negative contexts are obtained by shifting the indicies of context embeddings,0
"sample x distinct nodes to be masked, based on mask rate. But",0
will sample at least 1 node,0
create mask node label by copying node feature of mask node,0
modify the original node feature of the masked node,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by the",0
the last feature token 119.,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/chem/util.py#L241,0
create mask edge labels by copying edge features of edges that are connected to,0
mask nodes,0
create mask edge labels by copying edge features of the edges connected to,0
the mask nodes,0
edge ordering is such that two directions of a single,0
"edge occur in pairs, so to get the unique undirected",0
"edge indices, we take every 2nd edge index from list",0
modify the original edge features of the edges connected to the mask nodes,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by the",0
the last feature token 4.,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/chem/util.py#L268,0
"sample x distinct edges to be masked, based on mask rate. But",0
will sample at least 1 edge,0
"during sampling, we only pick the 1st direction of a particular",0
edge pair,0
create ground truth edge features for the edges that correspond to,0
the masked indices,0
"created new masked edge_attr, where both directions of the masked",0
edges have masked edge type. For message passing in gcn,0
append the 2nd direction of the masked edges,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by 0s and",0
an additional mask feature,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/bio/util.py#L101,0
"Take the entire graph, but can be modified to take a subgraph of k-hops from the root node",0
Get node idx between root and the inner diameter l1,0
Get node idx between root and the outer diameter l2,0
takes a ring around the root node outside of l1 and inside of l2,0
"Get indices of overlapping nodes between substruct and context, WRT context ordering",0
Decide first number of GAT layers,0
set2set doubles the dimensionality of the embedding,0
n_tasks is Optional[int] while argument 2 of nn.Linear has to be of type int,0
original implementation also includes an option if not using a separate encoder:,0
loss = sup_loss + local_unsup_loss * self.learning_rate,0
Below functions were taken from DeepChem TextCNN tensorflow implementation,0
Transform SMILES sequence to integers,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
We convert deepchem.feat.GraphData to a PyG graph and then,0
batch it.,0
The default_generator method returns an array of dc.feat.GraphData objects,0
"nested inside a list. To access the nested array of graphs, we are",0
indexing by 0 here.,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
flake8:noqa,0
get DTNNEmbedding,0
get DTNNSteps,0
get DTNNGather,0
get Final Linear Layer,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
pretransformation,0
aggregation,0
post-transformation,0
The model predicts unnormalized probabilities for each class and task,0
"print (logits, proba)",0
FIXME self.loss_func is an incorrect argument for TorchModel.loss because,1
it performs more than computing loss,0
FIXME This line is not needed as loss is computed inside the call to loss_func,1
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Ensure weights for both models are built.,0
Rename and delete older files.,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
True will be assigned up successful training attempt,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
import torch.nn as nn,0
import torch.nn.functional as F,0
Testing Shapes,0
Testing values,0
Dense1 is a list of dense layers,0
Testing Values,0
Testing Shapes with TF Model Output,0
Testing Shapes,0
Testing Values,0
testing first convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
testing rest of the convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Loading input tensors,0
Testing output,0
Testing MultiConvolution Layer,0
Testing First Convolution Layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Testing rest of the Multi convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Testing Aggregation Layer,0
Loading input tensors,0
Testing output,0
9: number of atoms,0
6: number of bonds,0
3: number of molecules,0
logits for class 1,0
logits for class 2,0
since pretraining is a self-supervision task where labels are generated during,0
"preparing batch, we mock _prepare_batch_for_pretraining to set all labels to 0.",0
The test here is checking whether the model predict 0's after overfitting.,0
preparing for test by setting 0 labels,0
arranging test - preparing dataset,0
acting - tests,0
asserting,0
arranging for tests,0
checking weights don't match before restore,0
norm layers and cached zero vectors have constant weights,0
restoring model,0
checking matching of weights after restore,0
asserting that weights are not same before reloading,0
"notm and bias layers have constant weights, hence they are not checked",0
acting - loading pretrained weights,0
asserting that weight matches after loading,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"helper classes that depend on torch, they need to be in the try/catch block",0
Define the dense layers,0
Define the dense layers,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Create dummy data,0
Call forward,0
Asserts,0
Create dummy data,0
Call forward,0
"Since the penalty is a squared norm of the gradients minus 1, multiplied by a constant,",0
it should be non-negative,0
Create pretrained model,0
Create finetuning model,0
Load pretrained model,0
check weights match,0
all keys should match,0
keys should not match,0
"In a batched graph, atoms and bonds belonging to different graphs are differentiated",0
"via scopes. In the below scenario, we assume a batched mol graph of three molecules",0
"with 10 atoms, 20 bonds. On the 10 atoms, we consider the first 3 belonging to mol1,",0
next 3 belonging to mol2 and remaining 4 belonging to mol4.,0
"Hence, the atom scope is [(0, 3), (3, 3), (6, 4)]. Similarly, for bonds, we have first 5 bonds belonging to mol1, next 4 to mol2 and remaining 11 to bond3.",0
"TODO Write tests for undirected = True case, currently fails. for this case, we have",1
"to generate inputs (a2b, b2a, b2revb) for undirected graph.",0
The shapes should match the earlier shapes because message passing only updates node features.,0
The following variables are utility variables used during message passing to compute neighbors. Here we are asserting that MTBlock layer is not modifying these variables.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load dataset,0
Intiliaze torch TextCNN,0
Copy other layer weights,0
Run prediction,0
Pretraining in MLM mode,0
Pretraining in Multitask Regression Mode,0
test regression,0
test multitask regression,0
test classification,0
logit scores,0
check weights match,0
all keys values should match,0
new model's model attribute is an entirely new model initiated by AutoModel.load_from_pretrained,0
and hence it should have a different identifier,0
testing a simple scenario where each embedding corresponds to an unique graph,0
"here embeddings 0, 1 belong to a scope, 2, 3 to another scope and 4, 5 to another scope",0
"thus, we sill have 3 graphs",0
Porting the weights from TF to PyTorch,0
task 0 layer 0,0
task 0 layer 1,0
task 0 output layer,0
task 1 layer 0,0
task 1 layer 1,0
task 1 output layer,0
task 1 adapter 0,0
task 1 adapter 1,0
Generate dummy dataset,0
Generate dummy dataset,0
model is None when reloading a model,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
This will not work for ModularTorchModel as it is directly uses `loss_func` to compute loss.,0
flake8:noqa,0
flake8: noqa,0
"torch.nn.module prefix has no ending dot, while xt prefix has",0
neural network xc functional of GGA (receives the density and grad as inputs),0
"densinfo.value: (*BD, nr)",0
"densinfo.grad : (*BD, nr, 3)",0
"collect the total density (n), spin density (xi), and normalized gradients (s)",0
normalize the gradient,0
decide how to transform the density to be the input of nn,0
get the neural network output,0
QR decomposition's solution is not unique in a way that every column,0
can be multiplied by -1 and it still a solution,0
"So, to remove the non-uniqueness, we will make the sign of the sum",0
positive.,0
construct the rotation parameters,0
calculate the orthogonal orbital,0
"orb: (*, nao, norb)",0
the orbital becomes the coefficients while params is all zeros (no rotation),0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Read the zip file,0
Get the labels from filenames,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
hyperparam_list should either be an Iterable sequence or a random sampler with rvs method,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
Update best validation score so far,0
"if `hyp_str` not in `all_scores`, store it in `all_scores`",0
arbitrarily return last model trained,0
"If callable, sample it for a maximum n times",0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
"max_iter model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Select a device.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Open index file,0
create an empty list to store lines in files.,0
iterate through each line in the input file,0
If the number of lines iterated through is equal or less than the shard size:,0
append to list,0
else yield the list,0
set the line_number variable to the last line number (num) before 'yield' was called,0
yield list (shard/batch),0
Re-initialize list with the index line to begin a new shard.,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
Set self.return_quality_scores,0
Featurize sequences,0
"(X, y , w, ids)",0
Featurize sequences,0
"(X, y , w, ids)",0
Go through each sequence entity in the fastq_file: each sequence consists of 4 lines,0
First line : header description,0
second line : sequence,0
third line : more description usually the same as the first line,0
fourth line: quality scores of the sequence,0
Second line : add sequence to the sequence array,0
Fourth line,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
Sort image files,0
Sometimes zip files contain directories within. Traverse directories,0
Sort label image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
The line here assumes that y generated by shard_generator is a numpy array,0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Try specifying particular columns,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create directory of multiple image files,0
Zip directory of multiple image files,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
These are the known dimensions of a_image.tif,0
These are the known dimensions of a_image.tif,0
"Since the different files have different shapes, makes an object array",0
Test that the order of the contents of an unzipped file is preserved.,0
Load the zip file,0
Load multi_path directly,0
Check that the order of the files is the same,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Default file contains 4 sequences each of length 192 (excluding the end of line character '\n').,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"Expected shape is now (4, 192, 5)",0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
safe operations,0
occupation number gradients,0
get the length of the tensor output,0
other tensor ops,0
add the diagonal with a small eps to safeguard from nan,0
replace the diagonal with infinite (usually used for coulomb matrix),0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
data.shape and segment_ids.shape should be equal,0
"return V.set_(V.storage(), V.storage_offset(), V.size(), tuple(reversed(V.stride())))",0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
isotope-averaged atom masses in a.m.u.,0
from https://www.angelo.edu/faculty/kboudrea/periodic/structure_mass.htm,0
"JCP 41, 3199 (1964); DOI:10.1063/1.1725697",0
taken from PySCF:,0
https://github.com/pyscf/pyscf/blob/45582e915e91890722fcae2bc30fb04867d5c95f/pyscf/data/radii.py#L23,0
I don't know why H has 0.35 while in the reference it is 0.,0
"They are in angstrom, so we need to convert it to Bohr",0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
NOTE We have lot of type ignores here since grover mol-graph which is of type,0
"GraphData have kwargs which are not attributes of GraphData. Hence, in these",0
cases mypy raises GraphData does not have attributes `..`.,0
max with 1 to fix a crash in rare case of all single-heavy-atom mols,0
graph_index indicates which atom belongs to which molecule,0
padding,0
computing a2b,0
only needed if using atom messages,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
"For a node-prediction task, label is not added to edge features and other global features",0
because label here is a node-level attribute and not a graph-level attribute,0
"In this case, the 'y' attribute of GraphData will contain the",0
node-level labels.,0
not a self-loop,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
for each node (E[(X-E[X])^n])^{1/n},0
EPS is added to the absolute value of expectation before taking the nth root for stability,0
"each scaler is a function that takes as input X (B x N x Din), adj (B x N x N) and",0
avg_d (dictionary containing averages over training set) and returns X_scaled (B x N x Din) as output,0
Generate the raising operator matrix,0
Generate the lowering operator matrix,0
Generate the z-generator matrix,0
"Combine the matrices to form the x, z, and y generators",0
Stack the generators along the first dimension to create a tensor,0
The transformation matrix generated is used to change the basis of a vector of,0
real spherical harmonics with representation index 1 to complex spherical harmonics.,0
"Construct the transformation matrix Q for m in range(-k, 0)",0
Set the diagonal elements for m = 0,0
"Construct the transformation matrix Q for m in range(1, k + 1)",0
Apply the factor of (-1j)**k to make the Clebsch-Gordan coefficients real,0
Handle dtype and device options,0
Ensure the tensor is contiguous and on the specified device,0
Get the SU(2) generators for the given quantum angular momentum (spin) value.,0
Get the transformation matrix to change the basis from real to complex spherical harmonics.,0
Convert the SU(2) generators to the SO(3) basis using the transformation matrix Q.,0
"X represents the SU(2) generators, and Q is the transformation matrix from real to complex spherical harmonics.",0
The resulting X matrix will be the SO(3) generators in the complex basis.,0
Return the real part of the SO(3) generators to ensure they are purely real.,0
"Ensure that alpha, beta, and gamma have the same shape for broadcasting.",0
"Ensure the angles are within the range [0, 2*pi) using modulo.",0
Get the SO(3) generators for the given quantum angular momentum (spin) value 'k'.,0
Calculate the Wigner D matrix using the matrix exponential of the generators,0
"and the rotation angles alpha, beta, and gamma in the appropriate order.",0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
Warnings,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Calculation of Step Size and steps,0
Number of atoms per molecule is calculated by counting all the non zero elements(numbers) of every molecule.,0
"It loops over the molecules in the Coulomb matrix and takes the ""2.4"" root of the diagonal of ""2X"" of each molecule's representation.",0
Calculates the Gaussian Distance by passing distance by a gaussian function.,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
dtype=object allows for arrays(images here) of arbitrary size,0
Tasks are either in .sdf.csv file or in the .sdf file itself for QM9 dataset,0
Structures are stored in .sdf file,0
"Note: Here, the order of columns is based on the order in which the values",0
"are appended to `df_row`. Since pos_x, pos_y, pos_z are appended after appending",0
"tasks above, they occur after `tasks` here.",0
"FIXME Ideally, we should use something like a dictionary here to keep it independent",1
of column ordering.,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
"pattern to split the names, e.g. ""model.params[1]"" into [""model"", ""params"", ""[1]""]",0
"return: (nao, nao)",0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
get the unique parameters of A,0
separate the parameters for A and for M,0
"grad_x: (*BABEM, nr, ncols)",0
"x: (*BABEM, nr, ncols)",0
solve (A-biases*M)^T v = grad_x,0
this is the grad of B,0
calculate the grad of matrices parameters,0
calculate the biases gradient,0
calculate the gradient to the biases matrices,0
Hidden,0
"NOTE: currently only works for batched B (1 batch dim), but unbatched A",0
check the parameters,0
convert the numpy/scipy,0
NOTE: The line below is very inefficient for large na and ncols,0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
correct the residual calculation,0
check for the stopping condition,0
move to the next index,0
"x: (ncols, *, nr, 1)",0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
correct the residual calculation regularly,0
calculate the residual,0
save the best results,0
check for the stopping conditions,0
"x: (ncols, *, nr, 1)",0
"if B is all zeros, then return zeros",0
setup the preconditioning and the matrix problem,0
get the stopping matrix,0
prepare the initial guess (it's just all zeros),0
res = res * B_norm,0
save the best results,0
general helpers,0
get the linear operator (including the MXE part),0
"A: (*BA, nr, nr) linop",0
"B: (*BB, nr, ncols)",0
"E: (*BE, ncols)",0
"M: (*BM, nr, nr) linop",0
"x: (ncols, *BX, nr, 1)",0
"x: (ncols, *BX, nr, 1)",0
estimate if it's posdef with power iteration,0
set posdef to False to make the operator becomes AT * A so it is,0
hermitian,0
TODO: the posdef check by largest eival only works for Hermitian/symmetric,1
"matrix, but it doesn't always work for non-symmetric matrix.",0
"In non-symmetric case, one need to do Cholesky LDL decomposition",0
"if the largest eigenvalue is negative, then it's not posdef",0
"otherwise, calculate the lowest eigenvalue to check if it's positive",0
get the linear operation if it is not a posdef (A -> AT.A),0
cg and bicgstab helpers,0
rootfinder-based,0
using rootfinder algorithm,0
set up the function for the rootfinding,0
"xi: (*BX, nr*ncols)",0
setup the initial guess (the batch dimension must be the largest),0
check if xnorm is converging,0
Broadcast Utilities,0
check the hermitian,0
check which methods are implemented,0
@abstractmethod,0
@abstractmethod # (optional),0
@abstractmethod,0
@abstractmethod,0
implemented functions,0
use batched mv as mm,0
move the last dimension to the very first dimension to be broadcasted,0
apply batched mv and restore the initial shape,0
use batched mv as mm,0
move the last dimension to the very first dimension to be broadcasted,0
apply batched mv and restore the initial shape,0
special functions,0
properties,0
implementation,0
private functions,0
"xt: (*BY, p)",0
"xdummy: (*BY, q)",0
calculate y = Ax,0
calculate (dL/dx)^T = A^T (dL/dy)^T with (dL/dy)^T = xt,0
Helper Classes,0
"if it is a method from an object, unroll the parameters and add",0
the object's parameters as well,0
get the unique ids,0
search the id if it has been added to the list,0
debugging,0
check the method input,0
assert if the method preserve the float tensors of the object,0
now assert if all_params0 == all_params1,0
get all tensor parameters in the object,0
get the parameter tensors used in the operation and the tensors specified by the developer,0
check if the userparams contains non-tensor,0
"check if there are missing parameters (present in operating params, but not in the user params)",0
if oper_names[i] not in user_names:,0
"if there are missing parameters, give a warning (because the program",0
"can still run correctly, e.g. missing parameters are parameters that",0
are never set to require grad),0
"check if there are excessive parameters (present in the user params, but not in the operating params)",0
if user_names[i] not in oper_names:,0
"if there are excess parameters, give warnings",0
get all the tensors recursively,0
copy the tensors and require them to be differentiable,0
run the method and see which one has the gradients,0
return the original tensor,0
traversing functions,0
None is set as default arg to avoid expanding list for multiple,0
invokes of _get_tensors without exception_ids argument,0
add exception to avoid infinite loop if there is a mutual dependant on objects,0
get the tensors recursively towards torch.nn.Module,0
traverse down the object to collect the tensors,0
traverse down the object to collect the tensors,0
flake8: noqa,0
TODO: implement robust LOBPCG and put it here,1
get the unique parameters of A & M,0
adapted from scipy.sparse.linalg.svds,0
clamp the eigenvalues to a small positive values to avoid numerical,0
instability,0
separate the sets of parameters,0
options for calculating the backward (not for `solve`),0
save for the backward,0
"evals: (*BAM, neig)",0
"evecs: (*BAM, na, neig)",0
get the variables from ctx,0
set the default values of degen_*tol,0
check the degeneracy,0
"idx_degen: (*BAM, neig, neig)",0
the loss function where the gradient will be retrieved,0
"warnings: if not all params have the connection to the output of A,",0
it could cause an infinite loop because pytorch will keep looking,0
for the *params node and propagate further backward via the `evecs`,0
path. So make sure all the *params are all connected in the graph.,0
"if degenerate, check the conditions for finite derivative",0
"if the requirements are not satisfied, raises a warning",0
calculate the contributions from the eigenvalues,0
calculate the contributions from the eigenvectors,0
orthogonalize the grad_evecs with evecs,0
"Based on test cases, complex datatype is more likely to suffer from",0
"singularity error when doing the inverse. Therefore, I add a small",0
offset here to prevent that from happening,0
orthogonalize gevecs w.r.t. evecs,0
accummulate the gradient contributions,0
the contribution from the parallel elements,0
"evals: (*BAM, neig)",0
get the index of degeneracies,0
contracted using opt_einsum,0
"evals, evecs = torch.linalg.eigh(Amatrix, eigenvectors=True)  # (*BA, q), (*BA, q, q)",0
M decomposition to make A symmetric,0
it is done this way to make it numerically stable in avoiding,0
complex eigenvalues for (near-)degenerate case,0
calculate the eigenvalues and eigenvectors,0
(the eigvecs are normalized in M-space),0
"evals, evecs = torch.linalg.eigh(A2, eigenvectors=True)  # (*BAM, q, q)",0
temporary solution to https://github.com/pytorch/pytorch/issues/47599,1
remove the degenerate part,0
see https://arxiv.org/pdf/2011.04366.pdf,0
take the contribution from the eivec,0
calculate the contribution from the eival,0
symmetrize to reduce numerical instability,0
TODO: optimize for large linear operator and strict min_eps,1
Ideas:,0
(1) use better strategy to get the estimate on eigenvalues,0
(2) use restart strategy,0
get the shape of the transformation,0
set up the initial guess,0
Can be optimized by saving AV from the previous iteration and only,0
operate AV for the new V. This works because the old V has already,0
"been orthogonalized, so it will stay the same",0
"AV = A.mm(V) # (*BAM,na,nguess)",0
eigvals are sorted from the lowest,0
"eval: (*BAM, nguess), evec: (*BAM, nguess, nguess)",0
calculate the eigenvectors of A,0
calculate the residual,0
print information and check convergence,0
apply the preconditioner,0
orthogonalize t with the rest of the V,0
orthogonalize V,0
check idxs,0
make the function a functional (depends on all parameters in the object),0
params tensor is the LinearOperator's parameters,0
"if the object parameter is still the same, then use the pre-calculated values",0
"otherwise, reevaluate by replacing the parameters with the new tensor params",0
self.yfcn: (*nin),0
file mostly from SciPy:,0
https://github.com/scipy/scipy/blob/914523af3bc03fe7bf61f621363fca27e97ca1d6/scipy/optimize/nonlin.py#L221,0
and converted to PyTorch for GPU efficiency,0
jacobian parameters,0
stopping criteria,0
algorithm parameters,0
misc parameters,0
"solving complex rootfinder by concatenating real and imaginary part,",0
making the variable twice as long,0
represents x as a long real vector,0
pack a long real vector into the shape accepted by fcn,0
shorthand for the function,0
set up the jacobian,0
solver tolerance,0
save the best results,0
print out dx and df,0
adjust forcing parameters for inexact solve,0
jacobian parameters,0
stopping criteria,0
algorithm parameters,0
misc parameters,0
"No suitable step length found. Take the full Newton step,",0
and hope for the best.,0
"Otherwise, compute the minimizer of a quadratic interpolant:",0
"Otherwise, loop with cubic interpolation until we find an alpha which",0
"satisfies the first Wolfe condition (since we are backtracking, we will",0
assume that the value of alpha is not too small and satisfies the second,0
condition.,0
Failed to find a suitable step length,0
gd parameters,0
stopping conditions,0
misc parameters,0
update the step,0
check the stopping conditions,0
gd parameters,0
stopping conditions,0
misc parameters,0
update the step,0
check the stopping conditions,0
get the best values,0
usually user set maxiter == 0 just to wrap the minimizer backprop,0
taking most of the part from SciPy,0
setup the approximate inverse Jacobian,0
update Gm,0
keep the rank small,0
keep the rank small,0
raise RuntimeError,0
"u: (n, 1), s: (1,), vh: (1, n)",0
"equilibrium can use all rootfinder methods, but there are several methods developed specifically for",0
equilibrium (or fixed-point iterations). This dictionary gives the list of those special methods.,0
"minimization can use rootfinder algorithm, so check if it is actually",0
"using the optimization algorithm, not the rootfinder algorithm",0
the rootfinder algorithms are designed to move to the opposite direction,0
"of the output of the function, so the output of this function is just",0
the grad of z w.r.t. y,0
"if it is going to optimization method, then also returns the value",0
"if using the optimization algorithm, then the forward function is the one",0
that returns f and grad,0
"if it is just using the rootfinder algorithm, then the forward function",0
is the one that returns only the grad,0
set default options,0
split tensors and non-tensors params,0
merge the tensor and nontensor parameters,0
dL/df,0
get the grad for the params,0
anderson_acc parameters,0
stopping criteria,0
misc options,0
"x0: (..., *nfeats)",0
"reshape x to have a shape of (batch_size, feats_dim)",0
"x: (..., *nfeats)",0
"xn: (..., feats_tot)",0
"x: (..., feats_dim)",0
"torch.bmm(g, g.transpose(-2, -1))",0
"alpha: (batch_size, nsize)",0
check the stopping condition,0
update the xn,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
"6 atoms: CC -> 2, CCC -> 3",0
"7 bonds: CC -> 2, CCC -> 4 (bonds are considered as undirected",0
and a single bond contributes to 2 bonds),0
graph-level labels,0
node-level labels,0
graph.y contains node-labels and graph.node_features.shape[0],0
holds number of nodes in that graph,0
Get Data,0
Checks that all atoms exits in array,0
Checks shape of gaussian distance,0
Checks all molecule membership exist,0
Check Distance Membership shape,0
Prepare Data,0
Run,0
Prepare Data,0
Inputs property,0
Without reverse input,0
With revercse input,0
Prepare Data,0
Inputs property,0
TODO test more formats for ligand,0
Test if the output has the correct shape.,0
Test for the case of zero momentum (j=0).,0
Test for the case of momentum j=1 (spin-1).,0
"Expected J_x, J_z, J_y matrices for j=1",0
"Test for j = 0, which means we have a 1x1 transformation matrix",0
"Test for j = 2, which means we have a 5x5 transformation matrix",0
Test for device placement (CPU to CUDA),0
Test for dtype conversion (complex128 to complex64),0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
dummy function which can be passed as the parameter f to simultaneous_move and single_move,0
test for gauss_initialize_position,0
testing symmetric simultaneous_move,0
testing asymmetric simultaneous_move,0
testing symmetric single_move,0
testing asymmetric single_move,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(3)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
get the location and weights of the integration in its original,0
coordinate,0
get the coordinate in Cartesian,0
integration element,0
Grid Transformations,0
"xnew is from [xmin, xmax]",0
"r is approximately from [rmin, rmax]",0
type of the atom Z,0
input types,0
"if the basis has been normalized before, then do nothing",0
normalize to have individual gaussian integral to be 1 (if coeff is 1),0
normalize the coefficients in the basis (because some basis such as,0
def2-svp-jkfit is not normalized to have 1 in overlap),0
input basis type,0
QR decomposition's solution is not unique in a way that every column,0
can be multiplied by -1 and it still a solution,0
"So, to remove the non-uniqueness, we will make the sign of the sum",0
positive.,0
construct the rotation parameters,0
calculate the orthogonal orbital,0
"orb: (*, nao, norb)",0
the orbital becomes the coefficients while params is all zeros (no rotation),0
properties,0
setups,0
fock matrix components,0
interface to dm,0
energy of the Hamiltonian,0
free parameters for variational method,0
Editable module,0
1 / cell.vol == det(b) / (2 pi)^3,0
drop ls that has norm > rcut * 1.05,0
System Properties,0
all-time calculations,0
(i.e. meaning it does not have to be executed to run the functions below),0
"densinfo.value & lapl: (*BD, nr)",0
"densinfo.grad: (*BD, ndim, nr)",0
"return: (*BD, nr)",0
"densinfo.value & lapl: (*BD, nr)",0
"densinfo.grad: (*BD, ndim, nr)",0
return:,0
"potentialinfo.value & lapl: (*BD, nr)",0
"potentialinfo.grad: (*BD, ndim, nr)",0
mark the densinfo components as requiring grads,0
"mgga might only use one of either lapl or kin, so we need to change the deriv manually to 0s",0
"mgga might only use one of either lapl or kin, so we need to change the deriv manually to 0s",0
set the vars to require grad and returns the previous state of the vars,0
restore the state of requiring grad based on reqgrads list,0
all vars before this function requires grad,0
getting which parameters should require grad,0
set the params to require grad,0
special operations,0
properties,0
TODO: use regex!,0
convert the atomz to tensor,0
convert the atompos to tensor,0
"convert to dtype if atomzs is a floating point tensor, not an integer tensor",0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
Break the loop if max_records is set,0
Break the loop if max_records is set,0
Break the loop if max_records is set,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
biological sequence featurizers,0
tokenizers,0
support classes,0
dqc dependencies,0
get the density matrix from PySCF's CCSD calculation,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
condition if the original atom order is required,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
"np.max() method works only for a non-empty array, so size of the array should be non-zero",0
Adding shapes of kwargs,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
Create a mapping from the original node indices to the new node indices,0
Filter and reindex node features,0
Filter and reindex edge indices and edge features,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
number of nodes in each graph,0
cumulative number of nodes for each graph. This is necessary because the values in edge_index are node indices of all of the graphs in graph_list and so we need to offset the indices by the number of nodes in the previous graphs.,0
"columns are the edge index, values are the node index",0
graph_index indicates which nodes belong to which graph,0
Batch user defined attributes,0
Convert edge_index to adjacency list,0
Breadth-first search,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Dimension of atom feature vector,0
len(choices) +1 and len(ATOM_FEATURES_HYBRIDIZATION) +1 to include room for unknown set,0
+ 2 at end for is_in_aromatic and mass,0
dictionary of available feature generators,0
for H2,0
"not all features are equally long, so used methane as dummy molecule to determine length",0
Fix nans in features,0
add edge list considering a directed graph,0
get atom features,0
get edge(bond) features,0
get edge index,0
get global features,0
0 represents a masked bond,0
atoms,0
bonds,0
"Graph connectivity in COO format with shape [2, num_edges]",0
"Edge feature matrix with shape [num_edges, num_edge_features]",0
Always treat the bond as directed.,0
add mapping between bond b1 and atom a2 (destination atom),0
add mapping between bond id and atom id (a1),0
add mapping between bond id and atom a1 (source atom),0
update index on bond and reverse bond mappings,0
generate SMILES for fragments,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
Copied from https://github.com/samoturk/mol2vec/blob/850d944d5f48a58e26ed0264332b5741f72555aa/mol2vec/features.py#L129-L168,0
"merge identifiers alternating radius to sentence: atom 0 radius0, atom 0 radius 1, etc.",0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
"row, col = edge_index",0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
get atom features,0
get edge index,0
user has not specified a descriptor list,0
creates normalized functions dictionary if normalized features are required,0
get cdf(feature) for that descriptor,0
get sequence of descriptor names and normalization parameters from DescriptorsNormalizationParameters class,0
get required distribution_ from `scipy.stats` module.,0
cdf => cumulative density functions,0
make the cdf with the parameters.,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
similar to SNAP featurizer. both taken from Open Graph Benchmark (OGB) github.com/snap-stanford/ogb,0
"The difference between this and the SNAP features is the lack of masking tokens, possible_implicit_valence_list, possible_bond_dirs",0
"and the prescence of possible_bond_stereo_list,  possible_is_conjugated_list, possible_is_in_ring_list,",0
FIXME Add support for multiple conformers (wip),1
"def __init__(self, num_conformers: int = 1, rmsd_cutoff: float = 2):",0
"""""""",0
Initialize the RDKitConformerFeaturizer with the given parameters.,0
Parameters,0
----------,0
"num_conformers : int, optional, default=1",0
The number of conformers to generate for each molecule.,0
"rmsd_cutoff : float, optional, default=2",0
The root-mean-square deviation (RMSD) cutoff value. Conformers with an RMSD,0
greater than this value will be discarded.,0
"""""""",0
self.num_conformers = num_conformers,0
self.rmsd_cutoff = rmsd_cutoff,0
Derived from https://github.com/HannesStark/3DInfomax/blob/5cd32629c690e119bcae8726acedefdb0aa037fc/datasets/qm9_dataset_rdkit_conformers.py#L377,0
add hydrogen bonds to molecule because they are not in the smiles representation,0
FIXME Add support for multiple conformers (wip),1
"AllChem.EmbedMultipleConfs(mol, self.num_conformers)",0
AllChem.MMFFOptimizeMolecule(mol),0
rmsd_list = [],0
"rdMolAlign.AlignMolConformers(mol, RMSlist=rmsd_list)",0
# insert 0 RMSD for first conformer,0
"rmsd_list.insert(0, 0)",0
conformers = [,0
mol.GetConformer(i),0
for i in range(self.num_conformers),0
if rmsd_list[i] < self.rmsd_cutoff,0
],0
"# if conformer list is less than num_conformers, pad by repeating conformers",0
conf_idx = 0,0
while len(conformers) < self.num_conformers:,0
conformers.append(conformers[conf_idx]),0
conf_idx += 1,0
coordinates = [conf.GetPositions() for conf in conformers],0
add edges in both directions,0
"Graph connectivity in COO format with shape [2, num_edges]",0
FIXME Add support for multiple conformers (wip),1
graph_list = [],0
for i in range(self.num_conformers):,0
graph_list.append(,0
"GraphData(node_pos_features=np.array(coordinates[i]),",0
"node_features=np.array(atom_features_list),",0
"edge_features=np.array(edge_features_list),",0
edge_index=np.array(edges_list).T)),0
return graph_list,0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
"sort first by frequency, then alphabetically",0
"sort first by frequency, then alphabetically",0
sorting the atoms neighbors,0
concatenating the sorted neighbors,0
"sort first by frequency, then alphabetically",0
"sort first by frequency, then alphabetically",0
flake8: noqa,0
superclass accepts a DeepChem dataset while huggingface vocabulary builders,0
reads data from file,0
test with max size,0
test build from csv,0
test with max size,0
load the vocabulary by passing filename,0
test tokenization of a single point,0
load the vocabulary by passing the filename,0
test tokenization of a single point,0
Build vocabulary by wrapping in huggingface vocabulary builder,0
Load vocabulary and do a basic sanity check on the vocabulary,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
number of indices where feature count is more than 1,0
no normalized feature value should be greater than 1.0,0
"151 = 133 + 18 (133 -> one hot encoding from _ATOM_FEATURES, 18 other features)",0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
NOTE: The test depends on the the pretrained vocabulary,0
(seyonec/PubChem10M_SMILES_BPE_60k). If the pretrained vocabulary is modified,0
"(which can be since it is an external resource), the test might fail.",0
construct edge (bond) index,0
add edge list considering a directed graph,0
test for 'MolGraphConvFeaturizer' class,0
"for ""C1=CC=CN=C1"" original bond index is not equal to canonical bond index",0
"Requirements - transformers, tokenizers",0
no normalized feature value should be greater than 1.0,0
these are the properties used in grover,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
Test featurizer with atom 3-D coordinates as kwargs,0
load sample dataset,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"number of indices, where feature count is more than 1, should be 0",0
number of indices where feature count is more than 1,0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
both reactant and product are null,0
reactant is null,0
product is null,0
valid reaction: [CH2:1]=[CH:2][CH:3]=[CH:4][CH2:5][H:6]>> [H:6][CH2:1][CH:2]=[CH:3][CH:4]=[CH2:5],0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
z is kwargs,0
check convert function,0
z is kwargs,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Set up tests.,0
Set up testing parameters.,0
the atom order for 'C' is same in case of canonical and original ordering,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
"bond and its reverse bond, therefore num_bonds * 2 edges",0
9 atom features,0
"Graph connectivity in COO format with shape [2, num_edges]",0
3 bond features,0
3 xyz coordinates for each atom in the conformer,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
Calculate frequency,0
flake8: noqa,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Return identity if no tuple to split to,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Invalid because valence for atom 5 N is greater than permitted (4),0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
NOTE The below comment is from original source code,0
dist_loss = av_dist_loss + bv_dist_loss + fg_dist_loss,0
return av_loss + fg_loss + dist_coff * dist_loss,0
"return overall_loss, av_loss, bv_loss, fg_loss, av_dist_loss, bv_dist_loss, fg_dist_loss",0
We just return overall_loss since TorchModel can handle only a single loss,0
loss for nodes,0
converting the binary classification to multiclass classification,0
positive context prediction is the dot product of substructure representation and true context representation,0
negative context prediction is the dot product of substructure representation and negative (random) context representation.,0
positive substructure prediction is the dot product of expanded substructure representation and true overlapped node representation.,0
shift indices of substructures to create negative examples,0
negative substructure prediction is the dot product of shifted expanded substructure representation and true overlapped node representation.,0
Compute the loss for positive and negative context representations,0
The final loss is the sum of positive and negative context losses,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################  # noqa: E266,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################  # noqa: E266,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Dependency Models,0
scikit-learn model,0
PyTorch models,0
Pytorch models with torch-geometric dependency,0
TODO We should clean up DMPNN and remove torch_geometric dependency during import,1
Pytorch-lightning modules import,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
"Create an identical model, do a single step of fitting with restore=True and make sure it got restored correctly.",0
check that the first layer is still the same between the two models,0
check that the predictions are different because of the fine tuning,0
check that the first layer is different between the two models,0
Conv2d and Linear layers test(CNN classification),0
Fit trained model,0
Eval model on train,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
testing batch size > 1,0
testing true values,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
https://github.com/diffqc/dqc/blob/742eb2576418464609f942def4fb7c3bbdc0cd82/dqc/test/test_xc.py#L15,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
.8 to save resources for a difficult task,0
.2 to save resources for a difficult task,0
first iteration loss is around 50,0
The first pass of the transformation should be 0,0
Test sampling method,0
Test log_prob method (this method is used when inverse pass),0
Output must be a Nth zero array since nothing is being learned yet,0
Featurize to assert for tests,0
Assert errors for sample method,0
Assert errors for log_prob method,0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec]",0
atom features,0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec]",0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Assigning tensorflow equivalent weights to torch layer,0
"Outputs should be [A, P]",0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = Metric(,0
"roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
xgboost test,0
fit trained model,0
"If ES rounds are more than total epochs, it will never trigger",0
Find the number of boosting rounds in the model,0
"If rounds boosted are less than total estimators, it means ES was triggered",0
prepare dataset,0
lightgbm test,0
fit trained model,0
"If ES rounds are more than total epochs, it will never trigger",0
Find the number of boosting rounds in the model,0
"If rounds ran are less than estimators, it means ES was triggered",0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Testing graphnet for a single graph,0
Testing for consistency,0
Testing with a batch of Graphs,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
TODO The test is skipped as FakeGraphGenerator has to be updated,1
to generate regression labels,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
"Linear layers for making query, key, value",0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Set up tests.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Finetune model weights should not match before loading from pretrained model,0
Finetune model weights should match after loading from pretrained model,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Testing whether error throws up when spin is wrong,0
Testing the spin values,0
Testing ionic initialization,0
Test for the evaluate_hf_solution function of FerminetModel class,0
"The solution should be of the shape (number of electrons, number of electrons)",0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Test for the init function of FerminetModel class,0
Testing ionic initialization,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
The highest recorded score should match get_best_score().,0
Reload the save model and confirm that it matches the best logged score.,0
Make sure get_best_score() still works when save_dir is not specified,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
"n_atoms = 4  # In CCC and C, there are 4 atoms",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
TODO(rbharath): What is the shape of outputs supposed to be?,1
"I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
"By setting the `box_size` to effectively zero, the result should only contain `nan`.",0
Check that layer has three trainable parameters.,0
Check when `box_size` is of wrong dimensionality.,0
Check when `inputs` is of wrong length.,0
Create random local node representations and global graph representations,0
Compute similarity scores using the discriminator,0
Check if the output has the correct shape and dtype,0
total_n_atoms = 4,0
n_atom_feat = 4,0
"atom_feat = np.random.rand(total_n_atoms, n_atom_feat)",0
Embeddings and results from Tensorflow implementation,0
Weights and Embeddings from Tensorflow implementation,0
init parameters,0
generate features for testing,0
index of pair features,0
atom features,0
pair features,0
tensors for torch layer,0
assigning tensorflow layer weights to torch layer,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Dataset of SMILES strings for testing SeqToSeq models.,0
Train the model on random sequences. We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Initialize the model,0
Fit the Model,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
Note: Following are some changes,0
compared to the TensorFlow unit test:,0
1. Changed nb_epoch to 300.,0
2. Increased the learning_rate to 0.0003.,0
Note: This needs to be inspected in future to understand low score as compared to a score of 0.9 in tensorflow unit test.,0
Note: Following are some changes,0
compared to the TensorFlow unit test:,0
1. Changed nb_epoch to 400.,0
2. Reduced the number of data points to 2.,0
3. Increased batch_size to 20.,0
4. Increased the learning_rate to 0.0003.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Note: This needs to be inspected in future to understand low score.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Note: Compared to the tensorflow unit test increased the nb_epoch to 600.,0
Eval model on train,0
Note: This needs to be inspected in future to understand low score as compared to a score of 0.8 in tensorflow unit test.,0
Create input tensor with values within full_atom_feature_dims,0
Create input tensor with values within full_bond_feature_dims,0
Compute the global graph representation,0
Compute positive and negative scores,0
Check if the loss is a scalar and has the correct dtype,0
Check if the loss is a scalar and non-negative,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
Get Data,0
Check Shape,0
Check number of parameters,0
Eval model on train,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
atom features,0
Gaussian histograms expands into 11 Gaussian buckets.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
For training,0
For sample generation,0
Define the dense layers,0
"Ignoring type. For TorchModel, loss is a required argument but HuggingFace computes",0
"loss during the forward iteration, removing the need for a loss function.",0
FIXME Transformers library has an api like AutoModel.from_pretrained. It allows to,1
initialise and create a model instance directly without requiring a class instance initialisation step.,0
"To use `load_from_pretrained` in DeepChem, we need to follow a two step process",0
of initialising class instance and then loading weights via `load_from_pretrained`.,0
y is None during predict,0
Main training loop.,0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
copy the input graph to avoid in-place operations,0
"FIXME For pretraining task, both model2d and model3d but the super class",1
"can't handle two models for contrastive learning, hence we pass only model2d",0
torch's one-hot encoding works with integer data types.,0
"We convert labels to integer, one-hot encode and convert it back to float",0
for making it suitable to loss function,0
graphs = [[,0
graph_data.to_dgl_graph().to(self.device) for graph_data in row,0
] for row in inputs],0
convert the GraphData objects to DGL graphs,0
"TODO Ideally, we should use a lr schedule but we need to update lr_scheduler.step() method",1
in ModularTorchModel.fit_generator to accept a metric.,0
"self._lr_schedule = torch.optim.lr_scheduler.ReduceLROnPlateau(self._pytorch_optimizer,",0
mode='min'),0
Initialize buffers,0
Accumulate statistics for Fisher matrices,0
Initialize buffers,0
p_grad_mat is of output_dim * input_dim,0
inv((ss')) p_grad_mat inv(aa') = [ Q_g (1/R_g) Q_g^T ] @ p_grad_mat @ [Q_a (1/R_a) Q_a^T],0
we always put gradient w.r.t weight in [0],0
and w.r.t bias in [1],0
do kl clip,0
TODO Explain in detail what the four outcompes are,1
The bond and rev bond have even and odd ids respectively.,0
FIXME This layer is similar to DMPNNEncoderLayer and they,1
must be unified.,0
Shared weight matrix across depths (default),0
Except reverse bond its-self(w) ! \sum_{k\in N(u) \ w},0
"FIXME When input_layer is none, for the first iteration of message passing, we should ideally",1
be using different weight matrix since message will be of shape num_bonds x f_bonds_dim,0
"in the first iteration and in the subsequent iterations, it will be num_bonds x hidden_size",0
FIXME We assume that we are using a hidden layer to transform the initial atom message,1
and bond messages to hidden dimension size.,0
self.atom_messages is False,0
Note: Elementwise affine has to be consistent with the pre-training phase,0
multi-headed attention,0
support no residual connection in MTBlock.,0
atom input to atom output,0
bond to atom,0
atom input to bond output,0
bond input to bond output,0
Inputs,0
Noise Input,0
Data Input,0
Data Inputs,0
Conditional Input,0
Conditional Inputs,0
Generators,0
Discriminators,0
Forward pass through generators,0
Forward pass through discriminators,0
Compute loss functions,0
Compute the weighted errors,0
Create learnable weights for the generators and discriminators.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
PyTorch layers require input and output channels as parameter,0
"if only one layer to make the model creating loop below work, multiply layer_filters wutg 2",0
"Python tuples use 0 based indexing, dims defines number of dimension for convolutional operation",0
initializing layer bias with nn.init gives mypy typecheck error,0
using the following workaround,1
residual blocks can only be used when successive layers have the same output shape,0
Used for converting edges back to their original shape,0
Compute mean edge features for each node by dst_index (each node,0
"receives information from edges which have that node as its destination,",0
hence the computation uses dst_index to aggregate information),0
holding bi-directional edges in case of undirected graphs,0
coonverting edge features to its original shape,0
Input,0
Shared weight matrix across depths (default):,0
For messages hidden states,0
For atom hidden states,0
num_atoms x hidden_size,0
num_molecules x hidden_size,0
concat global features,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
No other forget biases supported right now.,0
Sum the pairwise-interactions between atoms that are of `atom_type` and its neighbors for each atom type in `atom_types`.,0
Define the layers,0
Create the final layers,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set `pad_batches=True`,0
"z = torch.mm(h, self.U) + self.b",0
create a boolean mask for each partition,0
partition the input tensor using the masks,0
Case when >2 inputs are passed,0
Loop over the remaining convolution layers,0
Apply the current layer to the outputs from the previous layer,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
Construct internal trainable weights,0
Weight matrix and bias matrix required to compute new atom layer from the previous atom layer,0
Weight matrix and bias matrix required to compute new atom layer from the previous pair layer,0
Weight matrix and bias matrix required to compute new pair layer from the previous atom layer,0
Weight matrix and bias matrix required to compute new pair layer from the previous pair layer,0
flake8: noqa,0
Converting the input to torch tensors,0
"AA is a tensor with shape[total_num_atoms,n_hidden_AA]",0
"PA is a tensor with shape[total number of pairs,n_hidden_PA]",0
Split the PA tensor according to the 'pair_split' tensor,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"PP is a tensor with shape [total number of pairs,n_hidden_PP]",0
Integrate the Cross Layer Mapping inside the Global Message Passing,0
Message Passing operation,0
Update function f_u,0
Message Passing operation,0
Teacher forcing: Feed the target as the next input,0
Without teacher forcing: use its own predictions as the next input,0
Initializing the first layer (first layer has different dims than others),0
filling the weights with xavier uniform method for the linear weights and random assignment for the bias,0
Calculating one-electron feature's average,0
temporary lists containing each electron's embeddings which will be torch.stack on the end,0
Calculating two-electron feature's average,0
"initialized weights with torch.zeros, torch.eye and using xavier init.",0
temporary list to stack upon electrons axis at the end,0
Integrate the Cross Layer Mapping inside the Local Message Passing,0
Message Passing 1,0
Message Passing 2,0
Aggregation,0
Update function f_u,0
Output Module,0
import torch.nn as nn,0
creating one and two electron features,0
setting the fermient layer and fermient envelope layer batch size to be that of the current batch size of the model. This enables for vectorized calculations of hessians and jacobians.,0
using functorch to calcualte hessian and jacobian in one go,0
using index tensors to index out the hessian elemennts corresponding to the same variable (cross-variable derivatives are ignored),0
"doing all the calculation and detaching from graph to save memory, which allows larger batch size",0
cloning self.input which will serve as the new input for the vectorized functions.,0
lambda function for calculating the log of absolute value of the wave function.,0
using jacrev for the jacobian and jacrev twice for to calculate the hessian. The functorch's hessian function if directly used does not give stable results.,0
making the batch size temporarily as 1 for the vectorization of hessian and jacobian.,0
Initialization for ionic molecules,0
hook function below is an efficient way modifying the gradients on the go rather than looping,0
using non-local variables as a means of parameter passing,0
the move function calculates the energy of sampled electrons and samples new set of electrons (does not calculate loss),0
clipping local energies which are away 5 times the variance from the median,0
using the sampled electrons from the electron sampler for bacward pass and modifying gradients,0
going through each step of random walk and calculating the modified gradients with local energies,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
mypy check is ignored for global_features as it is not a default attribute,0
of GraphData. It is created during runtime using **kwargs.,0
mapping from bond index to the index of the atom (where the bond is coming from),0
"mapping from bond index to concat(in_atom, bond) features",0
mapping from atom index to list of indicies of incoming bonds,0
mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond (excluding the reverse bonds),0
zero padded at the end,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
padded with -1 at the end,0
mapping from bond index to the index of the atom (where the bond if going to),0
mapping from atom index to list of indicies of incoming bonds,0
get maximum number of incoming bonds,0
Make number of incoming bonds equal to maximum number of bonds.,0
This is done by appending -1 to fill remaining space at each atom indices.,0
mapping from bond index to the index of the reverse bond,0
get encoder,0
get input size for ffn,0
get output size for ffn,0
get ffn,0
Steps to get `molecules_unbatch_key`:,0
1. Get the tensor containing the indices of first atoms of each molecule,0
2. Get the tensor containing number of atoms of each molecule,0
by taking the difference between consecutive indices.,0
3. Convert the tensor to a list.,0
num_molecules x (enc_hidden + global_features_size),0
ffn_output (`self.n_tasks` or `self.n_tasks * self.n_classes`),0
"atom feature matrix with shape [number of atoms, number of features]",0
concatenated feature vector which contains concatenation of initial atom and bond features,0
mapping from atom index to list of indicies of incoming bonds,0
mapping that maps bond index to 'array of indices of the bonds',0
incoming at the initial atom of the bond (excluding the reverse bonds),0
array of global molecular features,0
maximum number of incoming bonds in the batch,0
generate concatenated feature vector and mappings,0
pad all mappings to maximum number of incoming bonds in the batch,0
the hidden size here is the output size of last layer in mol_atom_from_atom_ffn and mol_atom_from_bond_ffn components.,0
it is necessary that aforementioned components produces output tensor of same size.,0
"In training mode, we return atom level aggregated output and bond level aggregated output.",0
The training has an additional objective which ensures that atom and bond level aggregated outputs,0
are similar to each other apart from the objective of making the aggregated output closer to each,0
other.,0
"FIXME In the above step, we initialize modular torch model but",1
something is missing here. The attribute loss from TorchModel gets assigned `loss_func`,0
by super class initialization in ModularTorchModel but here we reinitialize it.,0
in eval mode.,0
"Also adding features, this is optional",0
FIXME I am rewriting restore because the restore method in parent class,1
does not restore layers which are not components. This restore method,0
can restore an full model.,0
may mess with loading pretrained weights,0
remove relu for the last layer,0
"reshapes node_representation to (num_nodes, num_layers * emb_dim)",0
"for supervised tasks, add prediction head",0
unsupervised tasks do not need a pred head,0
negative contexts are obtained by shifting the indicies of context embeddings,0
"sample x distinct nodes to be masked, based on mask rate. But",0
will sample at least 1 node,0
create mask node label by copying node feature of mask node,0
modify the original node feature of the masked node,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by the",0
the last feature token 119.,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/chem/util.py#L241,0
create mask edge labels by copying edge features of edges that are connected to,0
mask nodes,0
create mask edge labels by copying edge features of the edges connected to,0
the mask nodes,0
edge ordering is such that two directions of a single,0
"edge occur in pairs, so to get the unique undirected",0
"edge indices, we take every 2nd edge index from list",0
modify the original edge features of the edges connected to the mask nodes,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by the",0
the last feature token 4.,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/chem/util.py#L268,0
"sample x distinct edges to be masked, based on mask rate. But",0
will sample at least 1 edge,0
"during sampling, we only pick the 1st direction of a particular",0
edge pair,0
create ground truth edge features for the edges that correspond to,0
the masked indices,0
"created new masked edge_attr, where both directions of the masked",0
edges have masked edge type. For message passing in gcn,0
append the 2nd direction of the masked edges,0
zeros are meant to represent the masked features. This is distinct from the,0
"original implementation, where the masked features are represented by 0s and",0
an additional mask feature,0
link to source: https://github.com/snap-stanford/pretrain-gnns/blob/08f126ac13623e551a396dd5e511d766f9d4f8ff/bio/util.py#L101,0
"Take the entire graph, but can be modified to take a subgraph of k-hops from the root node",0
Get node idx between root and the inner diameter l1,0
Get node idx between root and the outer diameter l2,0
takes a ring around the root node outside of l1 and inside of l2,0
"Get indices of overlapping nodes between substruct and context, WRT context ordering",0
Decide first number of GAT layers,0
set2set doubles the dimensionality of the embedding,0
n_tasks is Optional[int] while argument 2 of nn.Linear has to be of type int,0
original implementation also includes an option if not using a separate encoder:,0
loss = sup_loss + local_unsup_loss * self.learning_rate,0
Below functions were taken from DeepChem TextCNN tensorflow implementation,0
Transform SMILES sequence to integers,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
We convert deepchem.feat.GraphData to a PyG graph and then,0
batch it.,0
The default_generator method returns an array of dc.feat.GraphData objects,0
"nested inside a list. To access the nested array of graphs, we are",0
indexing by 0 here.,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
flake8:noqa,0
get DTNNEmbedding,0
get DTNNSteps,0
get DTNNGather,0
get Final Linear Layer,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
pretransformation,0
aggregation,0
post-transformation,0
The model predicts unnormalized probabilities for each class and task,0
"print (logits, proba)",0
FIXME self.loss_func is an incorrect argument for TorchModel.loss because,1
it performs more than computing loss,0
FIXME This line is not needed as loss is computed inside the call to loss_func,1
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Ensure weights for both models are built.,0
Rename and delete older files.,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
True will be assigned up successful training attempt,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
import torch.nn as nn,0
import torch.nn.functional as F,0
Testing Shapes,0
Testing values,0
Dense1 is a list of dense layers,0
Testing Values,0
Testing Shapes with TF Model Output,0
Testing Shapes,0
Testing Values,0
testing first convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
testing rest of the convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Loading input tensors,0
Testing output,0
Testing MultiConvolution Layer,0
Testing First Convolution Layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Testing rest of the Multi convolution layer,0
dense1 layer - list of dense layers,0
dense2 layer - single dense layer,0
Testing Aggregation Layer,0
Loading input tensors,0
Testing output,0
9: number of atoms,0
6: number of bonds,0
3: number of molecules,0
logits for class 1,0
logits for class 2,0
since pretraining is a self-supervision task where labels are generated during,0
"preparing batch, we mock _prepare_batch_for_pretraining to set all labels to 0.",0
The test here is checking whether the model predict 0's after overfitting.,0
preparing for test by setting 0 labels,0
arranging test - preparing dataset,0
acting - tests,0
asserting,0
arranging for tests,0
checking weights don't match before restore,0
norm layers and cached zero vectors have constant weights,0
restoring model,0
checking matching of weights after restore,0
asserting that weights are not same before reloading,0
"notm and bias layers have constant weights, hence they are not checked",0
acting - loading pretrained weights,0
asserting that weight matches after loading,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"helper classes that depend on torch, they need to be in the try/catch block",0
Define the dense layers,0
Define the dense layers,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Create dummy data,0
Call forward,0
Asserts,0
Create dummy data,0
Call forward,0
"Since the penalty is a squared norm of the gradients minus 1, multiplied by a constant,",0
it should be non-negative,0
Create pretrained model,0
Create finetuning model,0
Load pretrained model,0
check weights match,0
all keys should match,0
keys should not match,0
"In a batched graph, atoms and bonds belonging to different graphs are differentiated",0
"via scopes. In the below scenario, we assume a batched mol graph of three molecules",0
"with 10 atoms, 20 bonds. On the 10 atoms, we consider the first 3 belonging to mol1,",0
next 3 belonging to mol2 and remaining 4 belonging to mol4.,0
"Hence, the atom scope is [(0, 3), (3, 3), (6, 4)]. Similarly, for bonds, we have first 5 bonds belonging to mol1, next 4 to mol2 and remaining 11 to bond3.",0
"TODO Write tests for undirected = True case, currently fails. for this case, we have",1
"to generate inputs (a2b, b2a, b2revb) for undirected graph.",0
The shapes should match the earlier shapes because message passing only updates node features.,0
The following variables are utility variables used during message passing to compute neighbors. Here we are asserting that MTBlock layer is not modifying these variables.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load dataset,0
Intiliaze torch TextCNN,0
Copy other layer weights,0
Run prediction,0
Pretraining in MLM mode,0
Pretraining in Multitask Regression Mode,0
test regression,0
test multitask regression,0
test classification,0
logit scores,0
check weights match,0
all keys values should match,0
new model's model attribute is an entirely new model initiated by AutoModel.load_from_pretrained,0
and hence it should have a different identifier,0
testing a simple scenario where each embedding corresponds to an unique graph,0
"here embeddings 0, 1 belong to a scope, 2, 3 to another scope and 4, 5 to another scope",0
"thus, we sill have 3 graphs",0
Porting the weights from TF to PyTorch,0
task 0 layer 0,0
task 0 layer 1,0
task 0 output layer,0
task 1 layer 0,0
task 1 layer 1,0
task 1 output layer,0
task 1 adapter 0,0
task 1 adapter 1,0
Generate dummy dataset,0
Generate dummy dataset,0
model is None when reloading a model,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
This will not work for ModularTorchModel as it is directly uses `loss_func` to compute loss.,0
flake8:noqa,0
flake8: noqa,0
"torch.nn.module prefix has no ending dot, while xt prefix has",0
neural network xc functional of GGA (receives the density and grad as inputs),0
"densinfo.value: (*BD, nr)",0
"densinfo.grad : (*BD, nr, 3)",0
"collect the total density (n), spin density (xi), and normalized gradients (s)",0
normalize the gradient,0
decide how to transform the density to be the input of nn,0
get the neural network output,0
QR decomposition's solution is not unique in a way that every column,0
can be multiplied by -1 and it still a solution,0
"So, to remove the non-uniqueness, we will make the sign of the sum",0
positive.,0
construct the rotation parameters,0
calculate the orthogonal orbital,0
"orb: (*, nao, norb)",0
the orbital becomes the coefficients while params is all zeros (no rotation),0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Read the zip file,0
Get the labels from filenames,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
hyperparam_list should either be an Iterable sequence or a random sampler with rvs method,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
Update best validation score so far,0
"if `hyp_str` not in `all_scores`, store it in `all_scores`",0
arbitrarily return last model trained,0
"If callable, sample it for a maximum n times",0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
"max_iter model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Open index file,0
create an empty list to store lines in files.,0
iterate through each line in the input file,0
If the number of lines iterated through is equal or less than the shard size:,0
append to list,0
else yield the list,0
set the line_number variable to the last line number (num) before 'yield' was called,0
yield list (shard/batch),0
Re-initialize list with the index line to begin a new shard.,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
Set self.return_quality_scores,0
Featurize sequences,0
"(X, y , w, ids)",0
Featurize sequences,0
"(X, y , w, ids)",0
Go through each sequence entity in the fastq_file: each sequence consists of 4 lines,0
First line : header description,0
second line : sequence,0
third line : more description usually the same as the first line,0
fourth line: quality scores of the sequence,0
Second line : add sequence to the sequence array,0
Fourth line,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
The line here assumes that y generated by shard_generator is a numpy array,0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Try specifying particular columns,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Default file contains 4 sequences each of length 192 (excluding the end of line character '\n').,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"Expected shape is now (4, 192, 5)",0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
"For a node-prediction task, label is not added to edge features and other global features",0
because label here is a node-level attribute and not a graph-level attribute,0
"In this case, the 'y' attribute of GraphData will contain the",0
node-level labels.,0
not a self-loop,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself for QM9 dataset,0
Structures are stored in .sdf file,0
"Note: Here, the order of columns is based on the order in which the values",0
"are appended to `df_row`. Since pos_x, pos_y, pos_z are appended after appending",0
"tasks above, they occur after `tasks` here.",0
"FIXME Ideally, we should use something like a dictionary here to keep it independent",1
of column ordering.,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
graph-level labels,0
node-level labels,0
graph.y contains node-labels and graph.node_features.shape[0],0
holds number of nodes in that graph,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
dummy function which can be passed as the parameter f to simultaneous_move and single_move,0
test for gauss_initialize_position,0
testing symmetric simultaneous_move,0
testing asymmetric simultaneous_move,0
testing symmetric single_move,0
testing asymmetric single_move,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(3)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
tokenizers,0
support classes,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
condition if the original atom order is required,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
"np.max() method works only for a non-empty array, so size of the array should be non-zero",0
Adding shapes of kwargs,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Dimension of atom feature vector,0
len(choices) +1 and len(ATOM_FEATURES_HYBRIDIZATION) +1 to include room for unknown set,0
+ 2 at end for is_in_aromatic and mass,0
dictionary of available feature generators,0
number of atoms,0
number of bonds,0
"mapping from bond index to concat(in_atom, bond) features | initial input is a zero padding",0
mapping from atom index to list of indices of incoming bonds,0
mapping from bond index to the index of the atom the bond is coming from,0
mapping from bond index to the index of the reverse bond,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
get bond features,0
for H2,0
"not all features are equally long, so used methane as dummy molecule to determine length",0
Fix nans in features,0
add edge list considering a directed graph,0
get atom features,0
get edge(bond) features,0
get edge index,0
get global features,0
generate SMILES for fragments,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
Copied from https://github.com/samoturk/mol2vec/blob/850d944d5f48a58e26ed0264332b5741f72555aa/mol2vec/features.py#L129-L168,0
"merge identifiers alternating radius to sentence: atom 0 radius0, atom 0 radius 1, etc.",0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
initialize,0
check initialization,0
creates normalized functions dictionary if normalized features are required,0
get sequence of descriptor names and normalization parameters from DescriptorsNormalizationParameters class,0
get required distribution_ from `scipy.stats` module.,0
cdf => cumulative density functions,0
make the cdf with the parameters.,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
number of indices where feature count is more than 1,0
no normalized feature value should be greater than 1.0,0
get atom features,0
mapping from atom index to atom features | initial input is a zero padding,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
construct edge (bond) index,0
add edge list considering a directed graph,0
test for 'MolGraphConvFeaturizer' class,0
"for ""C1=CC=CN=C1"" original bond index is not equal to canonical bond index",0
"Requirements - transformers, tokenizers",0
no normalized feature value should be greater than 1.0,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
Test featurizer with atom 3-D coordinates as kwargs,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"number of indices, where feature count is more than 1, should be 0",0
number of indices where feature count is more than 1,0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
both reactant and product are null,0
reactant is null,0
product is null,0
valid reaction: [CH2:1]=[CH:2][CH:3]=[CH:4][CH2:5][H:6]>> [H:6][CH2:1][CH:2]=[CH:3][CH:4]=[CH2:5],0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
@pytest.mark.linux_only,0
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
z is kwargs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Set up tests.,0
Set up testing parameters.,0
the atom order for 'C' is same in case of canonical and original ordering,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
Calculate frequency,0
flake8: noqa,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Return identity if no tuple to split to,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Dependency Models,0
scikit-learn model,0
PyTorch models,0
Pytorch models with torch-geometric dependency,0
TODO We should clean up DMPNN and remove torch_geometric dependency during import,1
Pytorch-lightning modules import,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Conv2d and Linear layers test(CNN classification),0
Fit trained model,0
Eval model on train,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
The first pass of the transformation should be 0,0
Test sampling method,0
Test log_prob method (this method is used when inverse pass),0
Output must be a Nth zero array since nothing is being learned yet,0
Featurize to assert for tests,0
Assert errors for sample method,0
Assert errors for log_prob method,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Testing graphnet for a single graph,0
Testing for consistency,0
Testing with a batch of Graphs,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
TODO The test is skipped as FakeGraphGenerator has to be updated,1
to generate regression labels,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Set up tests.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
test for the prepare_input_stream function of Ferminet class,0
ionic charge initialization test,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
The highest recorded score should match get_best_score().,0
Reload the save model and confirm that it matches the best logged score.,0
Make sure get_best_score() still works when save_dir is not specified,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
"By setting the `box_size` to effectively zero, the result should only contain `nan`.",0
Check that layer has three trainable parameters.,0
Check when `box_size` is of wrong dimensionality.,0
Check when `inputs` is of wrong length.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Initialize buffers,0
Accumulate statistics for Fisher matrices,0
Initialize buffers,0
p_grad_mat is of output_dim * input_dim,0
inv((ss')) p_grad_mat inv(aa') = [ Q_g (1/R_g) Q_g^T ] @ p_grad_mat @ [Q_a (1/R_a) Q_a^T],0
we always put gradient w.r.t weight in [0],0
and w.r.t bias in [1],0
do kl clip,0
PyTorch layers require input and output channels as parameter,0
"if only one layer to make the model creating loop below work, multiply layer_filters wutg 2",0
"Python tuples use 0 based indexing, dims defines number of dimension for convolutional operation",0
initializing layer bias with nn.init gives mypy typecheck error,0
using the following workaround,1
residual blocks can only be used when successive layers have the same output shape,0
Used for converting edges back to their original shape,0
Compute mean edge features for each node by dst_index (each node,0
"receives information from edges which have that node as its destination,",0
hence the computation uses dst_index to aggregate information),0
holding bi-directional edges in case of undirected graphs,0
coonverting edge features to its original shape,0
Input,0
Shared weight matrix across depths (default):,0
For messages hidden states,0
For atom hidden states,0
num_atoms x hidden_size,0
num_molecules x hidden_size,0
concat global features,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
No other forget biases supported right now.,0
Sum the pairwise-interactions between atoms that are of `atom_type` and its neighbors for each atom type in `atom_types`.,0
import torch.nn as nn,0
from deepchem.models.torch_models import TorchModel,0
import deepchem.models.optimizers as optim,0
TODO look for the loss function(Hamiltonian),1
dummy function which can be passed as the parameter f. f gives the log probability,0
TODO replace this function with forward pass of the model in future,1
"super(Ferminet, self).__init__()",0
Initialization for ionic molecules,0
concatenating distance and vectors arrays,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
mypy check is ignored for global_features as it is not a default attribute,0
of GraphData. It is created during runtime using **kwargs.,0
mapping from bond index to the index of the atom (where the bond is coming from),0
"mapping from bond index to concat(in_atom, bond) features",0
mapping from atom index to list of indicies of incoming bonds,0
mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond (excluding the reverse bonds),0
zero padded at the end,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
padded with -1 at the end,0
mapping from bond index to the index of the atom (where the bond if going to),0
mapping from atom index to list of indicies of incoming bonds,0
get maximum number of incoming bonds,0
Make number of incoming bonds equal to maximum number of bonds.,0
This is done by appending -1 to fill remaining space at each atom indices.,0
mapping from bond index to the index of the reverse bond,0
get encoder,0
get input size for ffn,0
get output size for ffn,0
get ffn,0
Steps to get `molecules_unbatch_key`:,0
1. Get the tensor containing the indices of first atoms of each molecule,0
2. Get the tensor containing number of atoms of each molecule,0
by taking the difference between consecutive indices.,0
3. Convert the tensor to a list.,0
num_molecules x (enc_hidden + global_features_size),0
ffn_output (`self.n_tasks` or `self.n_tasks * self.n_classes`),0
"atom feature matrix with shape [number of atoms, number of features]",0
concatenated feature vector which contains concatenation of initial atom and bond features,0
mapping from atom index to list of indicies of incoming bonds,0
mapping that maps bond index to 'array of indices of the bonds',0
incoming at the initial atom of the bond (excluding the reverse bonds),0
array of global molecular features,0
maximum number of incoming bonds in the batch,0
generate concatenated feature vector and mappings,0
pad all mappings to maximum number of incoming bonds in the batch,0
Decide first number of GAT layers,0
We convert deepchem.feat.GraphData to a PyG graph and then,0
batch it.,0
The default_generator method returns an array of dc.feat.GraphData objects,0
"nested inside a list. To access the nested array of graphs, we are",0
indexing by 0 here.,0
flake8:noqa,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
model is None when reloading a model,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
flake8:noqa,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
hyperparam_list should either be an Iterable sequence or a random sampler with rvs method,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
Update best validation score so far,0
"if `hyp_str` not in `all_scores`, store it in `all_scores`",0
arbitrarily return last model trained,0
"If callable, sample it for a maximum n times",0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
"max_iter model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Open index file,0
create an empty list to store lines in files.,0
iterate through each line in the input file,0
If the number of lines iterated through is equal or less than the shard size:,0
append to list,0
else yield the list,0
set the line_number variable to the last line number (num) before 'yield' was called,0
yield list (shard/batch),0
Re-initialize list with the index line to begin a new shard.,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
Set self.return_quality_scores,0
Featurize sequences,0
"(X, y , w, ids)",0
Featurize sequences,0
"(X, y , w, ids)",0
Go through each sequence entity in the fastq_file: each sequence consists of 4 lines,0
First line : header description,0
second line : sequence,0
third line : more description usually the same as the first line,0
fourth line: quality scores of the sequence,0
Second line : add sequence to the sequence array,0
Fourth line,0
Handle empty sequence,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
The line here assumes that y generated by shard_generator is a numpy array,0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Try specifying particular columns,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Default file contains 4 sequences each of length 192 (excluding the end of line character '\n').,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"Expected shape is now (4, 192, 5)",0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
"For a node-prediction task, label is not added to edge features and other global features",0
because label here is a node-level attribute and not a graph-level attribute,0
"In this case, the 'y' attribute of GraphData will contain the",0
node-level labels.,0
not a self-loop,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself for QM9 dataset,0
Structures are stored in .sdf file,0
"Note: Here, the order of columns is based on the order in which the values",0
"are appended to `df_row`. Since pos_x, pos_y, pos_z are appended after appending",0
"tasks above, they occur after `tasks` here.",0
"FIXME Ideally, we should use something like a dictionary here to keep it independent",1
of column ordering.,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
graph-level labels,0
node-level labels,0
graph.y contains node-labels and graph.node_features.shape[0],0
holds number of nodes in that graph,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
dummy function which can be passed as the parameter f to simultaneous_move and single_move,0
test for gauss_initialize_position,0
testing symmetric simultaneous_move,0
testing asymmetric simultaneous_move,0
testing symmetric single_move,0
testing asymmetric single_move,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(3)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
tokenizers,0
support classes,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
condition if the original atom order is required,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
"np.max() method works only for a non-empty array, so size of the array should be non-zero",0
Adding shapes of kwargs,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Dimension of atom feature vector,0
len(choices) +1 and len(ATOM_FEATURES_HYBRIDIZATION) +1 to include room for unknown set,0
+ 2 at end for is_in_aromatic and mass,0
dictionary of available feature generators,0
number of atoms,0
number of bonds,0
"mapping from bond index to concat(in_atom, bond) features | initial input is a zero padding",0
mapping from atom index to list of indices of incoming bonds,0
mapping from bond index to the index of the atom the bond is coming from,0
mapping from bond index to the index of the reverse bond,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
get bond features,0
for H2,0
"not all features are equally long, so used methane as dummy molecule to determine length",0
Fix nans in features,0
add edge list considering a directed graph,0
get atom features,0
get edge(bond) features,0
get edge index,0
get global features,0
generate SMILES for fragments,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
Copied from https://github.com/samoturk/mol2vec/blob/850d944d5f48a58e26ed0264332b5741f72555aa/mol2vec/features.py#L129-L168,0
"merge identifiers alternating radius to sentence: atom 0 radius0, atom 0 radius 1, etc.",0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
load_sdf_files returns pos as strings but user can also specify,0
numpy arrays for atom coordinates,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
initialize,0
check initialization,0
creates normalized functions dictionary if normalized features are required,0
get sequence of descriptor names and normalization parameters from DescriptorsNormalizationParameters class,0
get required distribution_ from `scipy.stats` module.,0
cdf => cumulative density functions,0
make the cdf with the parameters.,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
number of indices where feature count is more than 1,0
no normalized feature value should be greater than 1.0,0
get atom features,0
mapping from atom index to atom features | initial input is a zero padding,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
construct edge (bond) index,0
add edge list considering a directed graph,0
test for 'MolGraphConvFeaturizer' class,0
"for ""C1=CC=CN=C1"" original bond index is not equal to canonical bond index",0
"Requirements - transformers, tokenizers",0
no normalized feature value should be greater than 1.0,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
Test featurizer with atom 3-D coordinates as kwargs,0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"number of indices, where feature count is more than 1, should be 0",0
number of indices where feature count is more than 1,0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
both reactant and product are null,0
reactant is null,0
product is null,0
valid reaction: [CH2:1]=[CH:2][CH:3]=[CH:4][CH2:5][H:6]>> [H:6][CH2:1][CH:2]=[CH:3][CH:4]=[CH2:5],0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
@pytest.mark.linux_only,0
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
z is kwargs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Set up tests.,0
Set up testing parameters.,0
the atom order for 'C' is same in case of canonical and original ordering,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
Calculate frequency,0
flake8: noqa,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Return identity if no tuple to split to,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Dependency Models,0
scikit-learn model,0
PyTorch models,0
Pytorch models with torch-geometric dependency,0
TODO We should clean up DMPNN and remove torch_geometric dependency during import,1
Pytorch-lightning modules import,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Conv2d and Linear layers test(CNN classification),0
Fit trained model,0
Eval model on train,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
The first pass of the transformation should be 0,0
Test sampling method,0
Test log_prob method (this method is used when inverse pass),0
Output must be a Nth zero array since nothing is being learned yet,0
Featurize to assert for tests,0
Assert errors for sample method,0
Assert errors for log_prob method,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
get data,0
prepare batch (size 1),0
initialize the model,0
get output,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
overfit test,0
load sample dataset,0
initialize the model,0
fit the model,0
reload the model,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Testing graphnet for a single graph,0
Testing for consistency,0
Testing with a batch of Graphs,0
"When pytest runs without pytorch in the environment (ex: as in tensorflow workflow),",0
the above import raises a ModuleNotFoundError. It is safe to ignore it,0
since the below tests only run in an environment with pytorch installed.,0
TODO The test is skipped as FakeGraphGenerator has to be updated,1
to generate regression labels,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Set up tests.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
test for the prepare_input_stream function of Ferminet class,0
ionic charge initialization test,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
The highest recorded score should match get_best_score().,0
Reload the save model and confirm that it matches the best logged score.,0
Make sure get_best_score() still works when save_dir is not specified,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
"By setting the `box_size` to effectively zero, the result should only contain `nan`.",0
Check that layer has three trainable parameters.,0
Check when `box_size` is of wrong dimensionality.,0
Check when `inputs` is of wrong length.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Initialize buffers,0
Accumulate statistics for Fisher matrices,0
Initialize buffers,0
p_grad_mat is of output_dim * input_dim,0
inv((ss')) p_grad_mat inv(aa') = [ Q_g (1/R_g) Q_g^T ] @ p_grad_mat @ [Q_a (1/R_a) Q_a^T],0
we always put gradient w.r.t weight in [0],0
and w.r.t bias in [1],0
do kl clip,0
PyTorch layers require input and output channels as parameter,0
"if only one layer to make the model creating loop below work, multiply layer_filters wutg 2",0
"Python tuples use 0 based indexing, dims defines number of dimension for convolutional operation",0
initializing layer bias with nn.init gives mypy typecheck error,0
using the following workaround,1
residual blocks can only be used when successive layers have the same output shape,0
Used for converting edges back to their original shape,0
Compute mean edge features for each node by dst_index (each node,0
"receives information from edges which have that node as its destination,",0
hence the computation uses dst_index to aggregate information),0
holding bi-directional edges in case of undirected graphs,0
coonverting edge features to its original shape,0
Input,0
Shared weight matrix across depths (default):,0
For messages hidden states,0
For atom hidden states,0
num_atoms x hidden_size,0
num_molecules x hidden_size,0
concat global features,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
No other forget biases supported right now.,0
Sum the pairwise-interactions between atoms that are of `atom_type` and its neighbors for each atom type in `atom_types`.,0
import torch.nn as nn,0
from deepchem.models.torch_models import TorchModel,0
import deepchem.models.optimizers as optim,0
TODO look for the loss function(Hamiltonian),1
dummy function which can be passed as the parameter f. f gives the log probability,0
TODO replace this function with forward pass of the model in future,1
"super(Ferminet, self).__init__()",0
Initialization for ionic molecules,0
concatenating distance and vectors arrays,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
mypy check is ignored for global_features as it is not a default attribute,0
of GraphData. It is created during runtime using **kwargs.,0
mapping from bond index to the index of the atom (where the bond is coming from),0
"mapping from bond index to concat(in_atom, bond) features",0
mapping from atom index to list of indicies of incoming bonds,0
mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond (excluding the reverse bonds),0
zero padded at the end,0
get mapping which maps bond index to 'array of indices of the bonds' incoming at the initial atom of the bond,0
padded with -1 at the end,0
mapping from bond index to the index of the atom (where the bond if going to),0
mapping from atom index to list of indicies of incoming bonds,0
get maximum number of incoming bonds,0
Make number of incoming bonds equal to maximum number of bonds.,0
This is done by appending -1 to fill remaining space at each atom indices.,0
mapping from bond index to the index of the reverse bond,0
get encoder,0
get input size for ffn,0
get output size for ffn,0
get ffn,0
Steps to get `molecules_unbatch_key`:,0
1. Get the tensor containing the indices of first atoms of each molecule,0
2. Get the tensor containing number of atoms of each molecule,0
by taking the difference between consecutive indices.,0
3. Convert the tensor to a list.,0
num_molecules x (enc_hidden + global_features_size),0
ffn_output (`self.n_tasks` or `self.n_tasks * self.n_classes`),0
"atom feature matrix with shape [number of atoms, number of features]",0
concatenated feature vector which contains concatenation of initial atom and bond features,0
mapping from atom index to list of indicies of incoming bonds,0
mapping that maps bond index to 'array of indices of the bonds',0
incoming at the initial atom of the bond (excluding the reverse bonds),0
array of global molecular features,0
maximum number of incoming bonds in the batch,0
generate concatenated feature vector and mappings,0
pad all mappings to maximum number of incoming bonds in the batch,0
Decide first number of GAT layers,0
We convert deepchem.feat.GraphData to a PyG graph and then,0
batch it.,0
The default_generator method returns an array of dc.feat.GraphData objects,0
"nested inside a list. To access the nested array of graphs, we are",0
indexing by 0 here.,0
flake8:noqa,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
model is None when reloading a model,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
flake8:noqa,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
hyperparam_list should either be an Iterable sequence or a random sampler with rvs method,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
Update best validation score so far,0
"if `hyp_str` not in `all_scores`, store it in `all_scores`",0
arbitrarily return last model trained,0
"If callable, sample it for a maximum n times",0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
"max_iter model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
TODO log attempts to add empty sequences every shard,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
take into account special tokens in max length,0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
tokenizers,0
support classes,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
generate SMILES for fragments,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
initialize,0
check initialization,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
"Requirements - transformers, tokenizers",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
@pytest.mark.linux_only,0
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Add the input features.,0
Add the convolutional layers,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Depedency Models,0
scikit-learn model,0
PyTorch models,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
Reload the save model and confirm that it matches the best logged score.,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
Decide first number of GAT layers,0
flake8:noqa,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
Environment-specific dependencies.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
TODO The below line should be fixes,1
See: https://github.com/deepchem/deepchem/issues/2373,0
model.save(),0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of output files,0
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Process legacy toggle,0
Set attributes,0
Handle special featurizer cases,0
Set self.featurizer,0
"(X, y, w, ids)",0
TODO don't convert all sequences into np array (allow shards),1
Check if line is a header,0
Handle empty sequence,0
TODO log attempts to add empty sequences every shard,0
Annotate start/stop of sequence,0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
determine the shard sizes of the datasets to merge,0
"otherwise the entire dataset is the ""shard size""",0
we must reshard the dataset to have a uniform size,0
choose the smallest shard size,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Test merging of numpy datasets,0
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
"Due to FASTALoader redesign, expected shape is now (3, 58, 5)",0
TODO: test with full uniprot file once sharding support is added.,1
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
class ANITransformer(Transformer):,0
"""""""Performs transform from 3D coordinates to ANI symmetry functions",0
Note,0
----,0
This class requires TensorFlow to be installed.,0
"""""""",0
"def __init__(self,",0
"max_atoms=23,",0
"radial_cutoff=4.6,",0
"angular_cutoff=3.1,",0
"radial_length=32,",0
"angular_length=8,",0
"atom_cases=[1, 6, 7, 8, 16],",0
"atomic_number_differentiated=True,",0
coordinates_in_bohr=True):,0
"""""""",0
Only X can be transformed,0
"""""""",0
import tensorflow as tf,0
self.max_atoms = max_atoms,0
self.radial_cutoff = radial_cutoff,0
self.angular_cutoff = angular_cutoff,0
self.radial_length = radial_length,0
self.angular_length = angular_length,0
self.atom_cases = atom_cases,0
self.atomic_number_differentiated = atomic_number_differentiated,0
self.coordinates_in_bohr = coordinates_in_bohr,0
self.compute_graph = self.build(),0
self.sess = tf.Session(graph=self.compute_graph),0
self.transform_batch_size = 32,0
"super(ANITransformer, self).__init__(transform_X=True)",0
"def transform_array(self, X, y, w):",0
if self.transform_X:,0
X_out = [],0
num_transformed = 0,0
start = 0,0
batch_size = self.transform_batch_size,0
while True:,0
"end = min((start + 1) * batch_size, X.shape[0])",0
X_batch = X[(start * batch_size):end],0
output = self.sess.run(,0
"[self.outputs], feed_dict={self.inputs: X_batch})[0]",0
X_out.append(output),0
num_transformed = num_transformed + X_batch.shape[0],0
logger.info('%i samples transformed' % num_transformed),0
start += 1,0
if end >= len(X):,0
break,0
"X_new = np.concatenate(X_out, axis=0)",0
assert X_new.shape[0] == X.shape[0],0
"return (X_new, y, w)",0
"def untransform(self, z):",0
raise NotImplementedError(,0
"""Cannot untransform datasets with ANITransformer."")",0
def build(self):,0
""""""" tensorflow computation graph for transform """"""",0
import tensorflow as tf,0
graph = tf.Graph(),0
with graph.as_default():,0
self.inputs = tf.keras.Input(,0
"dtype=tf.float32, shape=(None, self.max_atoms, 4))",0
"atom_numbers = tf.cast(self.inputs[:, :, 0], tf.int32)",0
flags = tf.sign(atom_numbers),0
flags = tf.cast(,0
"tf.expand_dims(flags, 1) * tf.expand_dims(flags, 2), tf.float32)",0
"coordinates = self.inputs[:, :, 1:]",0
if self.coordinates_in_bohr:,0
coordinates = coordinates * 0.52917721092,0
"d = self.distance_matrix(coordinates, flags)",0
"d_radial_cutoff = self.distance_cutoff(d, self.radial_cutoff, flags)",0
"d_angular_cutoff = self.distance_cutoff(d, self.angular_cutoff, flags)",0
"radial_sym = self.radial_symmetry(d_radial_cutoff, d, atom_numbers)",0
"angular_sym = self.angular_symmetry(d_angular_cutoff, d, atom_numbers,",0
coordinates),0
self.outputs = tf.concat(,0
[,0
"tf.cast(tf.expand_dims(atom_numbers, 2), tf.float32), radial_sym,",0
angular_sym,0
"],",0
axis=2),0
return graph,0
"def distance_matrix(self, coordinates, flags):",0
""""""" Generate distance matrix """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
"tensor1 = tf.stack([coordinates] * max_atoms, axis=1)",0
"tensor2 = tf.stack([coordinates] * max_atoms, axis=2)",0
# Calculate pairwise distance,0
"d = tf.sqrt(tf.reduce_sum(tf.square(tensor1 - tensor2), axis=3))",0
# Masking for valid atom index,0
d = d * flags,0
return d,0
"def distance_cutoff(self, d, cutoff, flags):",0
""""""" Generate distance matrix with trainable cutoff """"""",0
import tensorflow as tf,0
# Cutoff with threshold Rc,0
d_flag = flags * tf.sign(cutoff - d),0
d_flag = tf.nn.relu(d_flag),0
d_flag = d_flag * tf.expand_dims(,0
"tf.expand_dims((1 - tf.eye(self.max_atoms)), 0), -1)",0
d = 0.5 * (tf.cos(np.pi * d / cutoff) + 1),0
return d * d_flag,0
"def radial_symmetry(self, d_cutoff, d, atom_numbers):",0
""""""" Radial Symmetry Function """"""",0
import tensorflow as tf,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.radial_cutoff, self.radial_length)",0
ita = np.ones_like(Rs) * 3 / (Rs[1] - Rs[0])**2,0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, -1)), tf.float32)",0
length = ita.get_shape().as_list()[-1],0
"d_cutoff = tf.stack([d_cutoff] * length, axis=3)",0
"d = tf.stack([d] * length, axis=3)",0
out = tf.exp(-ita * tf.square(d - Rs)) * d_cutoff,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
for atom_type in self.atom_cases:,0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(atom_numbers_embedded[:, :, atom_type], axis=1),",0
axis=3),0
"out_tensors.append(tf.reduce_sum(out * selected_atoms, axis=2))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out, axis=2)",0
"def angular_symmetry(self, d_cutoff, d, atom_numbers, coordinates):",0
""""""" Angular Symmetry Function """"""",0
import tensorflow as tf,0
max_atoms = self.max_atoms,0
embedding = tf.eye(np.max(self.atom_cases) + 1),0
"atom_numbers_embedded = tf.nn.embedding_lookup(embedding, atom_numbers)",0
"Rs = np.linspace(0., self.angular_cutoff, self.angular_length)",0
ita = 3 / (Rs[1] - Rs[0])**2,0
"thetas = np.linspace(0., np.pi, self.angular_length)",0
zeta = float(self.angular_length**2),0
"ita, zeta, Rs, thetas = np.meshgrid(ita, zeta, Rs, thetas)",0
"zeta = tf.cast(np.reshape(zeta, (1, 1, 1, 1, -1)), tf.float32)",0
"ita = tf.cast(np.reshape(ita, (1, 1, 1, 1, -1)), tf.float32)",0
"Rs = tf.cast(np.reshape(Rs, (1, 1, 1, 1, -1)), tf.float32)",0
"thetas = tf.cast(np.reshape(thetas, (1, 1, 1, 1, -1)), tf.float32)",0
length = zeta.get_shape().as_list()[-1],0
"vector_distances = tf.stack([coordinates] * max_atoms, 1) - tf.stack(",0
"[coordinates] * max_atoms, 2)",0
"R_ij = tf.stack([d] * max_atoms, axis=3)",0
"R_ik = tf.stack([d] * max_atoms, axis=2)",0
"f_R_ij = tf.stack([d_cutoff] * max_atoms, axis=3)",0
"f_R_ik = tf.stack([d_cutoff] * max_atoms, axis=2)",0
# Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
"vector_mul = tf.reduce_sum(tf.stack([vector_distances] * max_atoms, axis=3) * \",0
"tf.stack([vector_distances] * max_atoms, axis=2), axis=4)",0
vector_mul = vector_mul * tf.sign(f_R_ij) * tf.sign(f_R_ik),0
"theta = tf.acos(tf.math.divide(vector_mul, R_ij * R_ik + 1e-5))",0
"R_ij = tf.stack([R_ij] * length, axis=4)",0
"R_ik = tf.stack([R_ik] * length, axis=4)",0
"f_R_ij = tf.stack([f_R_ij] * length, axis=4)",0
"f_R_ik = tf.stack([f_R_ik] * length, axis=4)",0
"theta = tf.stack([theta] * length, axis=4)",0
"out_tensor = tf.pow((1. + tf.cos(theta - thetas)) / 2., zeta) * \",0
tf.exp(-ita * tf.square((R_ij + R_ik) / 2. - Rs)) * f_R_ij * f_R_ik * 2,0
if self.atomic_number_differentiated:,0
out_tensors = [],0
"for id_j, atom_type_j in enumerate(self.atom_cases):",0
for atom_type_k in self.atom_cases[id_j:]:,0
"selected_atoms = tf.stack([atom_numbers_embedded[:, :, atom_type_j]] * max_atoms, axis=2) * \",0
"tf.stack([atom_numbers_embedded[:, :, atom_type_k]] * max_atoms, axis=1)",0
selected_atoms = tf.expand_dims(,0
"tf.expand_dims(selected_atoms, axis=1), axis=4)",0
out_tensors.append(,0
"tf.reduce_sum(out_tensor * selected_atoms, axis=(2, 3)))",0
"return tf.concat(out_tensors, axis=2)",0
else:,0
"return tf.reduce_sum(out_tensor, axis=(2, 3))",0
def get_num_feats(self):,0
n_feat = self.outputs.get_shape().as_list()[-1],0
return n_feat,0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
TODO: Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,1
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a layer: either a function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
take into account special tokens in max length,0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
the encoding is natively a dictionary with keys 'input_ids' and 'attention_mask',0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
"the encoding is natively a dictionary with keys 'input_ids', 'token_type_ids', and 'attention_mask'",0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
tokenizers,0
support classes,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Turn atomic coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Set the atom positions in image to different atomic properties in channels,0
With fixed res and img_size some molecules (e.g. long chains) may not fit.,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
generate SMILES for fragments,0
Extend shorter strings with padding,0
Padding before and after,0
Featurize data using featurize() in parent class,0
Featurize str data,0
Featurize mol data,0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
The 1.0 float value represents True Boolean,0
This will return a boolean vector with all entries False,0
To get the shortest paths between two nodes.,0
To get info if two nodes belong to the same ring.,0
Featurizer,0
initialize,0
check initialization,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
decode the source in the mixed and separated cases,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
"Requirements - transformers, tokenizers",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
@pytest.mark.linux_only,0
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untransform,0
untranform,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Add the input features.,0
Add the convolutional layers,0
edges logits used during training,0
nodes logits used during training,0
edges logits,0
nodes logits,0
training of the model,0
generating compounds,0
nodes logits used during compound generation,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B flag support (DEPRECATED),0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Define the PyTorch Module that implements the model.,0
Define the PyTorch Module that implements the model.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
set wandb init arguments,0
Dataset ids are used to differentiate datasets seen by the logger,0
log data,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Log data to Wandb,0
flake8: noqa,0
Tensorflow Depedency Models,0
scikit-learn model,0
PyTorch models,0
Jax models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
"this is equivalent to einsum('...c,cd->...d', inputs, weights)",0
but turns out to be slightly faster,0
JAX depend,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"def predict_uncertainty(self, dataset: Dataset, masks: int = 50",0
") -> OneOrMany[Tuple[np.ndarray, np.ndarray]]:",0
"""""""",0
"Predict the model's outputs, along with the uncertainty in each one.",0
The uncertainty is computed as described in https://arxiv.org/abs/1703.04977.,0
It involves repeating the prediction many times with different dropout masks.,0
The prediction is computed as the average over all the predictions.  The,0
uncertainty includes both the variation among the predicted values (epistemic,0
uncertainty) and the model's own estimates for how well it fits the data,0
(aleatoric uncertainty).  Not all models support uncertainty prediction.,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset to make prediction on,0
masks: int,0
the number of dropout masks to average over,0
Returns,0
-------,0
"for each output, a tuple (y_pred, y_std) where y_pred is the predicted",0
"value of the output, and each element of y_std estimates the standard",0
deviation of the corresponding element of y_pred,0
"""""""",0
sum_pred: List[np.ndarray] = [],0
sum_sq_pred: List[np.ndarray] = [],0
sum_var: List[np.ndarray] = [],0
for i in range(masks):,0
generator = self.default_generator(,0
"dataset, mode='uncertainty', pad_batches=False)",0
"results = self._predict(generator, [], True, None)",0
if len(sum_pred) == 0:,0
"for p, v in results:",0
sum_pred.append(p),0
sum_sq_pred.append(p * p),0
sum_var.append(v),0
else:,0
"for j, (p, v) in enumerate(results):",0
sum_pred[j] += p,0
sum_sq_pred[j] += p * p,0
sum_var[j] += v,0
output = [],0
std = [],0
for i in range(len(sum_pred)):,0
p = sum_pred[i] / masks,0
output.append(p),0
std.append(np.sqrt(sum_sq_pred[i] / masks - p * p + sum_var[i] / masks)),0
if len(output) == 1:,0
"return (output[0], std[0])",0
else:,0
"return list(zip(output, std))",0
JAX dependencies,0
Main training loop,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
flake8:noqa,0
The PINNModel requires you to create two functions,0
`create_eval`_fn for letting the model know how to compute the model in inference and,0
`gradient_fn` for letting model know how to compute the gradient and different regulariser,0
equation loss depending on the differential equation,0
defining the Haiku model,0
"giving an initial boundary condition at 5 points between [-pi, pi] which will be used in l2 loss",0
"defining our training data. We feed 100 points between [-pi, pi] without the labels,",0
which will be used as the differential loss(regulariser),0
The expected solution must be as close to cos(x),0
Initialize the weights with random values,0
Forward function which takes the params,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initialization,0
Loss Function,0
JaxModel Working,0
sample network,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Model Initilisation,0
Loss Function,0
JaxModel Working,0
Each epoch is a single step for this model,0
@pytest.mark.jax,0
@pytest.mark.slow,0
def test_uncertainty():,0
"""""""Test estimating uncertainty a TorchModel.""""""",0
n_samples = 30,0
n_features = 1,0
noise = 0.1,0
"X = np.random.rand(n_samples, n_features)",0
"y = (10 * X + np.random.normal(scale=noise, size=(n_samples, n_features)))",0
"dataset = dc.data.NumpyDataset(X, y)",0
class Net(hk.Module):,0
"def __init__(self, output_size: int = 1):",0
super().__init__(),0
"self._network1 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
"self._network2 = hk.Sequential([hk.Linear(200), jax.nn.relu])",0
self.output = hk.Linear(output_size),0
self.log_var = hk.Linear(output_size),0
"def __call__(self, x):",0
x = self._network1(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
x = self._network2(x),0
"x = hk.dropout(hk.next_rng_key(), 0.1, x)",0
output = self.output(x),0
log_var = self.log_var(x),0
var = jnp.exp(log_var),0
"return output, var, output, log_var",0
def f(x):,0
net = Net(1),0
return net(x),0
"def loss(outputs, labels, weights):",0
diff = labels[0] - outputs[0],0
log_var = outputs[1],0
var = jnp.exp(log_var),0
return jnp.mean(diff * diff / var + log_var),0
class UncertaintyModel(JaxModel):,0
"def default_generator(self,",0
"dataset,",0
"epochs=1,",0
"mode='fit',",0
"deterministic=True,",0
pad_batches=True):,0
for epoch in range(epochs):,0
"for (X_b, y_b, w_b, ids_b) in dataset.iterbatches(",0
"batch_size=self.batch_size,",0
"deterministic=deterministic,",0
pad_batches=pad_batches):,0
"yield ([X_b], [y_b], [w_b])",0
jm_model = hk.transform(f),0
rng = jax.random.PRNGKey(500),0
"inputs, _, _, _ = next(iter(dataset.iterbatches(batch_size=100)))",0
modified_inputs = jnp.array(,0
[x.astype(np.float32) if x.dtype == np.float64 else x for x in inputs]),0
"params = jm_model.init(rng, modified_inputs)",0
model = UncertaintyModel(,0
"jm_model.apply,",0
"params,",0
"loss,",0
"output_types=['prediction', 'variance', 'loss', 'loss'],",0
learning_rate=0.003),0
"model.fit(dataset, nb_epochs=2500)",0
"pred, std = model.predict_uncertainty(dataset)",0
assert np.mean(np.abs(y - pred)) < 2.0,0
assert noise < np.mean(std) < 1.0,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
test if adjacency matrix input is correctly set,0
test if nodes features matrix input is correctly set,0
check discriminator shape,0
check training edges logits shape,0
check training nodes logits shapes,0
True will be assigned up successful training attempt,0
force clear tensor flow backend,0
create new model,0
to avoid flake8 E125/yapf incompatibility,0
generate input,0
train model,0
generate sample,0
check how many valid molecules were created and add to list,0
finally test if there was at least one valid training session,0
as the model structure improves this should become more and more strict,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Check predictions match on random sample,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
load datasets,0
initialize model,0
overfit test,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Most weights should be close to zero.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
Reload the save model and confirm that it matches the best logged score.,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Load dataset and Models,0
call model.fit again to test multiple fit() calls,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
Decide first number of GAT layers,0
flake8:noqa,0
Select a device.,0
W&B logging,0
"If `wandb=True` and no logger is provided, initialize default logger",0
Setup and initialize W&B logging,0
Update config with KerasModel params,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"TODO For this dataset and model, the R2-scores are less than 0.3.",1
This has to be improved.,0
See: https://github.com/deepchem/deepchem/issues/2776,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
TIMING,0
TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
TIMING,0
TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
TIMING,0
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
We have already evaluated the model for these hyperparameters.,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
flake8: noqa,0
"2 model variants, 1 results.txt file",0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
check filetypes,0
Define locations of log and output files,0
Write GNINA conf file,0
Run GNINA,0
read output and log,0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare ligand,0
Write Vina conf file,0
Define locations of log and output files,0
"I'm not sure why specifying the args as a list fails on other platforms,",1
but for some reason it only works if I pass it as a string.,0
FIXME: Incompatible types in assignment,1
FIXME: We should use `subprocess.run` instead of `call`,1
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
"(X, y, w, ids)",0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,0
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
These functions have moved to deepchem.utils_docking_utils,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a Keras layer: either a TensorFlow function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
"A NumPy array, or an object that can be converted to one.  Once we move to",0
"requiring NumPy 1.20, we should replace this with numpy.typing.ArrayLike.",0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
"|-|\+|\\|\/|:|~|@|\?|>>?|\*|\$|\%[0-9]{2}|[0-9])""""""",0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
take into account special tokens in max length,0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
create temporary valid ids serving to filter out failed featurizations from every sublist,0
"of features (i.e. every molecules' frags list), and also totally failed sublists.",0
This makes output digestable by Loaders,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
TODO (VIGS25): Complete the description,1
Handle loading failures which return None,0
Fit atomic conv model,0
Add the Atomic Convolution layers to fetches,0
Extract the atomic convolution features,0
"SMILES is unique, so set a canonical order of atoms",0
Add hydrogens and generate a conformation.,0
Record properties of the molecules.,0
Create the output object.,0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
support classes,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Find a successful featurization,0
Replace failed featurizations with appropriate array,0
Special case handling of single molecule,0
Convert iterables to list,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Turn atomic coordinates into image positions,0
Set the atom positions in image to different atomic properties in channels,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
generate SMILES for fragments,0
Extend shorter strings with padding,0
Padding before and after,0
validation,0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
initialize,0
check initialization,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
bond labels,0
atom labels,0
create bond encoders and decoders,0
create atom encoders and decoders,0
Special case handling of single molecule,0
Convert iterables to list,0
Set up site environment matcher,0
Graphical option,0
tolerance for grouping nodes,0
determine minimum distance between sitetypes.,0
This is used to determine the existence of an edge,0
Sort by bond,0
You want to maximize this in order to make sure every node gets an edge,0
construct graph,0
matcher options,0
construct graph,0
Add nodes,0
Add edge. distance is edge attribute,0
construct graph,0
Gets the isomorphic mapping. Also the most time consuming part of the code,0
reconstruct graph after alinging point order,0
RMSD,0
Construct one hot encoding,0
get mapping between all site index to active site index,0
Get Neighbors,0
Read Data,0
get map between two environment,0
align input to the primitive cell (reference),0
apply permutations,0
remove spectators,0
map it to active sites,0
Extract the right number of sites by distance,0
if PBC condition is fulfilled..,0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
pad outputs,0
Deprecation warnings for old atomic conv featurizer name #,0
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
"Requirements - transformers, tokenizers",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
check for separate count and SMILES entries for each fragment,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"Coords are padded, neighbor list and Z are not",0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
@pytest.mark.linux_only,0
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignored if sanitize=False,0
test flattened voxel features,0
test voxel features,0
test flat features,0
test rotations,0
not support array style inputs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
test featurization,0
test defeaturization,0
sanity check; see if something weird does not happen with rdkit,0
check if original smiles match defeaturized smiles,0
sanity check; see if something weird does not happen with rdkit,0
test featurization,0
test defeaturization,0
check if original smiles match defeaturized smiles,0
untranform,0
untranform,0
untranform,0
Check the SDF file.,0
Check the PDB file.,0
Check the SMILES string.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Add the input features.,0
Add the convolutional layers,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
means that this is second loop of convolution,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B logging,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Add the input features.,0
Add the dense layers,0
Add the input features.,0
Add the dense layers,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
"layer_sizes=[32, 32, 16],",0
Add the dense layers,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
flake8: noqa,0
scikit-learn model,0
PyTorch models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Predict the output and uncertainty.,0
predict datset with no y (ensured by tasks = []),0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
check predict shape,0
check overfit,0
needs change,0
check predict shape,0
check overfit,0
reload,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rate=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
Reload the save model and confirm that it matches the best logged score.,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
Decide first number of GAT layers,0
flake8:noqa,0
Select a device.,0
W&B logging,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ######,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ###########,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
######### TIMING ################,0
Most reaction dataset ML tasks train the prediction of products from,0
"ractants. Both of these are contained in the rxn object that is output,",0
"so there is no ""tasks"" field.",0
Download USPTO dataset,0
Unzip,0
Unzipped file is a tap seperated values file (despite the .txt),0
The first element in the row is the reaction smarts,0
"Sometimes smarts have extraneous information at end of form """,0
"|f:0"" that causes parsing to fail. Not sure what this information",0
"is, but just ignoring for now.",0
Make up dummy labels since DiskDataset.from_numpy doesn't allow,0
creation from just features for now.,0
TODO: This dataset isn't saved to disk so reload doesn't happen.,1
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
def test_qm9_loader():,0
current_dir = os.path.dirname(os.path.abspath(__file__)),0
"tasks, datasets, transformers = load_qm9(",0
"reload=False,",0
"data_dir=current_dir,",0
"featurizer='ECFP',",0
splitter_kwargs={,0
"'seed': 42,",0
"'frac_train': 0.6,",0
"'frac_valid': 0.2,",0
'frac_test': 0.2,0
}),0
,0
assert len(tasks) == 12,0
assert tasks[0] == 'mu',0
"assert datasets[0].X.shape == (8, 1024)",0
def test_zinc15_loader():,0
current_dir = os.path.dirname(os.path.abspath(__file__)),0
,0
"tasks, datasets, transformers = load_zinc15(",0
"reload=False,",0
"data_dir=current_dir,",0
splitter_kwargs={,0
"'seed': 42,",0
"'frac_train': 0.6,",0
"'frac_valid': 0.2,",0
'frac_test': 0.2,0
}),0
,0
test_vec = np.array([,0
"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,",0
"0.0, -1.224744871391589, 0.0, 0.0, 0.0, 0.0, 2.0, -0.5, 0.0, 0.0, 0.0,",0
"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0",0
]),0
,0
"train, val, test = datasets",0
"assert tasks == ['mwt', 'logp', 'reactive']",0
"assert train.X.shape == (3, 100, 35)",0
"assert np.allclose(train.X[0][0], test_vec, atol=0.01)",0
,0
"if os.path.exists(os.path.join(current_dir, 'zinc15_250K_2D.csv')):",0
"os.remove(os.path.join(current_dir, 'zinc15_250K_2D.csv'))",0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
Add it on to the information needed for the constructor,0
Not all models have nb_epoch,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
Demarcating internal function for readability,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
"mypy test throws error, so ignoring it in try",0
Not all models have nb_epoch,0
Some models autosave,0
arbitrarily return last model,0
flake8: noqa,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Define nb_epoch in hyperparam_search function call,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
"action is to walk away.  (To keep the test fast, we allow that to be either of the two",0
top actions).,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
Build a nightly package by default.,0
get the version from deepchem/__init__.py,0
nightly version : .devYearMonthDayHourMinute,0
Force to add `.dev` if `--release` option isn't passed when building,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
This example shows how to use Pandas to load data directly,0
without using a CSVLoader object. This may be useful if you,0
want the flexibility of processing your data with Pandas,0
directly.,0
Now let's convert from a dataset back to a pandas dataframe,0
"This example shows how to load data from a SDF file into DeepChem. The data in this SDF file is stored in field ""LogP(RRCK)""",0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Get Metric,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Load delaney dataset,0
Fit models,0
Load delaney dataset,0
Fit models,0
Fit models,0
Load delaney dataset,0
Fit models,0
TODO: Once improved splitting API is merged in swap to simpler API,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
TODO once improved splitting API is merged in swap out for simpler,1
API,0
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
TODO: This should be swapped for simpler splitter API once that's merged in.,1
The return values are dc.data.Dataset objects so we need to extract,0
the ids,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Configuration file for the Sphinx documentation builder.,0
,0
This file only contains a selection of the most common options. For a full,0
list see the documentation:,0
https://www.sphinx-doc.org/en/master/usage/configuration.html,0
-- Path setup --------------------------------------------------------------,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
,0
-- Project information -----------------------------------------------------,0
"The full version, including alpha/beta/rc tags",0
-- General configuration ---------------------------------------------------,0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
Options for autodoc directives,0
How to represents typehints.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix of source filenames.,0
The master toctree document.,0
autosectionlabel setting,0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
This pattern also affects html_static_path and html_extra_path.,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
-- Options for HTML output -------------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
Customize the sphinx theme,0
-- Source code links ---------------------------------------------------,0
Resolve function for the linkcode extension.,0
"try to find the file and line number, based on code from numpy:",0
https://github.com/numpy/numpy/blob/master/doc/source/conf.py#L286,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
"If you push the tag, please remove `.dev`",0
Record inputs.,0
Create the output directory if necessary.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
flake8: noqa,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
We know use_pose_generator_scores == False in this case,0
check whether self.featurizer is instance of ComplexFeaturizer or not,0
TODO: How to handle the failure here?,1
TODO(rbharath): The autodock vina source computes surface distances,1
which take into account the van der Waals radius of each atom type.,0
"Shape (N, M)",0
"Shape (N, M)",0
Parse complex,0
Prepare protein,0
Get protein centroid and range,0
TODO(rbharath: Does vina divide box dimensions by 2?,1
Prepare protein,0
Write Vina conf file,0
Define locations of log and output files,0
"I'm not sure why specifying the args as a list fails on other platforms,",1
but for some reason it only works if I pass it as a string.,0
FIXME: Incompatible types in assignment,1
FIXME: We should use `subprocess.run` instead of `call`,1
flake8: noqa,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
We provide no scoring model so the docker won't score,0
Check only one output since num_modes==1,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
Let's turn on logging since this test will run for a while,0
Check returned files exist,0
"Where d is greater than zero, the repulsion is just zeros",0
"When d is 0, this should just be 1",0
"When d == 0, the hbond interaction is 0",0
The exponential returns 1 when input 0.,0
This exponential returns 1 when input 3,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Let's turn on logging since this test will run for a while,0
Note this may download autodock Vina...,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
Test that every atom in pocket maps exists,0
scalar case,0
per-example case,0
This is a little arcane but it repeats w across tasks.,0
"If w.shape == (n_samples, 1) handle it as 1D",0
"w.shape == (n_samples, n_tasks)",0
scalar case,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Insert a task dimension (we know n_tasks=1 from above0,0
"If 3D and last dimension isn't 1, assume this is one-hot encoded and return as-is.",0
Handle classification. We need to convert labels into one-hot representation.,0
check whether n_classes is int or not,0
Handle n_classes/n_task shape ambiguity,0
Add in task dimension,0
Make everything 2D so easy to handle,0
Handle each task separately.,0
Handle continuous class probabilites of positive class for binary,0
Fill in class 0 probabilities,0
Add a task dimension to concatenate on,0
Handle binary labels,0
"make y_hot of shape (N, n_classes)",0
Add a task dimension to concatenate on,0
Insert a task dimension,0
"Now of shape (N,)",0
"Now of shape (N, 1)",0
"Returns shape (N, n_tasks)",0
"Now of shape (N,)",0
"Now of shape (N, n_classes)",0
"Now of shape (N, 1, n_classes)",0
"Returns shape (N, n_tasks, n_classes)",0
These are some smart defaults,0
These are some smart defaults corresponding to sklearn's required,0
behavior,0
Attempt some limited shape imputation to find n_tasks,0
check whether n_tasks is int or not,0
This is because `normalize_weight_shape` require int value.,0
FIXME: Incompatible types in assignment,1
DEPRECATED. WILL BE REMOVED IN NEXT DEEPCHEM VERSION,0
DEPRECATED. WILL BE REMOVED IN NEXT DEEPCHEM VERSION,0
Attempt to convert both into the same type,0
if len(y_true.shape) != 2 or len(y_pred.shape) != 2 or y_true.shape != y_pred.shape:,0
"raise ValueError(""For classification metrics, y_true and y_pred must both be of shape (N, n_classes)"")",0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, num_tasks)",0
check whether wild_type_predictions is np.ndarray or not,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
check whether wild_type_predictions is np.ndarray or not,0
kappa_score is an alias for `sklearn.metrics.cohen_kappa_score`,0
validation,0
flake8: noqa,0
metric class,0
metrics utils,0
sklearn & scipy score function,0
original score function,0
Get a random prediction matrix,0
"Of shape (N, n_classes)",0
"Of shape (N, 1, n_classes)",0
This has w for each task.,0
Best score case,0
Worst score case,0
best case,0
duplicate prediction value,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
Special case handling of single input,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
Featurize task results if they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it",0
makes no sense to have y values or weights.,0
The field in which dc.utils.save.load_sdf_files stores RDKit mol objects,0
The field in which load_sdf_files return value stores smiles,0
"(X, y, w, ids)",0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Sort image files,0
"FIXME: Signature of ""_featurize_shard"" incompatible with supertype ""DataLoader""",1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Ensure that every worker will pick the same random order for each epoch.,0
Ensure that every worker will pick the same random order for each epoch.,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset.,0
Find the X values.,0
Find the y values.,0
Find the w values.,0
Find the ids.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
Create temp directory to store resharded version,0
Get correct shapes for y/w,0
Write data in new shards,0
Handle shapes,0
Note that this means that DiskDataset resharding currently doesn't,0
work for datasets that aren't regression/classification.,0
Handle spillover from last shard,0
Should have updated to non-legacy metadata,0
Note that this resets the cache internally,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
mp.dummy aliases ThreadPool to Pool,0
(ytz): this skips everything except possibly the last shard,0
"To unify shape handling so from_numpy behaves like NumpyDataset, we just",0
make a NumpyDataset under the hood,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
Reset cache,0
See if we have a cached copy of this shard.,0
"We don't, so load it from disk.",0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Try to cache this shard for later use.  Since the normal usage pattern is,0
"a series of passes through the whole dataset, there's no point doing",0
anything fancy.  It never makes sense to evict another shard from the,0
"cache to make room for this one, because we'll probably want that other",0
shard again before the next time we want this one.  So just cache as many,0
as we can and then stop.,0
"When outputting a NumpyDataset, we have 1 in-memory shard",0
Handle edge case with empty indices,0
We use two loops here. The outer while loop walks over selection shards,0
(the chunks of the indices to select that should go into separate,0
"output shards), while the inner for loop walks over the shards in the",0
source datasets to select out the shard indices from that  source shard,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle empty case where no data from this shard needed,0
Handle the case of datasets with y/w missing,0
Break if all indices have been used up already,0
Note these will be in the sorted order,0
We need to recover the original ordering. We can do this by using,0
np.where to find the locatios of the original indices in the sorted,0
indices.,0
We know there's only one match for np.where since this is a,0
"permutation, so the [0][0] pulls out the exact match location.",0
If shape metadata is available use it to directly compute shape from,0
metadata,0
"In absense of shape metadata, fall back to loading data from disk to",0
find shape.,0
Case n_samples should be 1,0
flake8: noqa,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Generate data,0
legacy_dataset_reshard is a shared dataset in the legacy format kept,0
around for testing resharding.,0
Set cache to 0 size to avoid cache hiding errors,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
This is necessary since from_numpy adds in shape information,0
Generate data,0
Generate data,0
Generate data,0
Should now have 10 shards,0
This is the shape of legacy_data,0
legacy_dataset is a dataset in the legacy format kept around for testing,0
purposes.,0
This is the shape of legacy_data_reshard,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing,0
Should now have 10 shards,0
legacy_dataset is a dataset in the legacy format kept around for testing purposes.,0
Test constructor reload works for legacy format,0
legacy_dataset_reshard is a sharded dataset in the legacy format kept,0
around for testing resharding.,0
Reshard copy,0
Check metadata has been updated,0
First try using images for X.,0
Now try using images for y.,0
Transform it,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Test iterating in order.,0
Test iterating out of order.,0
Test iterating in batches.,0
Test iterating with multiple workers.,0
A round trip from Dataset to DataFrame to Dataset should produce identical arrays.,0
Try specifying particular columns.,0
Test id shrinkage,0
Test task shrinkage,0
Test max print size,0
Create image file,0
Create zip of image file,0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
featurization,0
train/valid split.,0
singletask load,0
comparison,0
Only for debug!,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
multitask load,0
Do train/valid split.,0
singletask load,0
comparison,0
Get the labels/weights,0
Normalize shapes,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight.,0
this works because y is 1D,0
This is the right ratio since int(N/num_c) * num_c \approx N,0
for all classes,0
Flattening is safe because of shape check above,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
Some transformation must happen,0
Add this case in to handle non-DiskDataset that should be written to disk,0
Note that transformers have to be undone in reversed order,0
Handle division by zero,0
Handle division by zero,0
Control for pathological case with no variance.,0
Handle case with 1 task correctly,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Handle 1-D case,0
Remove labels with zero weights,0
Note that we may have 0 elements of a given class since we remove those,0
labels with zero weight. This typically happens in multitask datasets,0
where some datapoints only have labels for some tasks.,0
this works because task_y is 1D,0
This is the right ratio since N_task/num_c * num_c = N_task,0
for all classes,0
Set to the class weight computed previously,0
Need this for transform_y,0
Handle 1D case,0
THis reshape is safe because of guard above.,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
flake8: noqa,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Load mini log-solubility dataset.,0
The transformer generates n DAGs for a molecule with n,0
"atoms. These are denoted the ""parents""",0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check Blurring,0
Check center crop,0
Check crop,0
Check convert2gray,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
Check median filter,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Note that nothing should change in this dataset since weights balance!,0
Check that still we have length 6,0
Check shapes,0
Check that we have 2 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check that we have length 8 now with duplication,0
Check shapes,0
Check that we have 4 positives and 4 negatives,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
6-1 imbalance in favor of class 0,0
Check that we have length 30 now with duplication,0
Check shapes,0
Check that we have 6 of each class,0
Check that sum of all class weights is equal by comparing to 0 weight,0
Note class imbalance. This will round to 2x duplication for 1,0
Check that we have length 13 now with duplication,0
Check shapes,0
Check that we have 6 positives and 7 negatives,0
################################################################,0
save.py is out of date. You should not import any functions from here.,0
################################################################,0
flake8: noqa,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""__iter__"" (not iterable)",1
Walk through the original file and extract ATOM/HETATM lines and,0
add PDBQT charge annotations.,0
Remove rotatable bonds from this molecule,0
Get the connected components now that the rotatable bonds have,0
been removed.,0
The root is the largest connected component.,0
Write the root component,0
"We've looked at the root, so take note of that",0
Compute partial charges on molecule if RDKit Mol,0
indices to atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
TODO: This is duplicated! Clean up,1
Updates charges in place,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
False here specifies that water is to be removed,0
Updates charges in place,0
TODO: This is wrong. Should return all molecules,1
Ideally we should catch AtomValenceException but Travis seems to choke on it for some reason.,0
This updates in place,0
indices of atoms to keep,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
####################################################,0
Compute partial charges on molecule if rdkit,0
####################################################,0
Number of voxels per one edge of box to voxelize.,0
"FIXME: Argument 1 of ""__eq__"" is incompatible with supertype ""object""",1
If interval1 < interval2 entirely,0
If interval2 < interval1 entirely,0
Each triangle in the simplices is a set of 3 atoms from,0
coordinates which forms the vertices of an exterior triangle on,0
the convex hull of the macromolecule.,0
Points is the set of atom coordinates that make up this,0
triangular face on the convex hull,0
Let's extract x/y/z coords for this face,0
Let's compute min/max points,0
"Nitrogen has atomic number 7, and oxygen 8.",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
If atom is a hydrogen,0
"O-H distance is 0.96 A, N-H is 1.01 A. See http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember mol1-mol2 pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
find interacting rings from mol1 and cations from mol2,0
find interacting cations from mol1 and rings from mol2,0
merge counters,0
Make sure input is a list,0
FIXME: Incompatible types in assignment,1
"FIXME: Argument 1 to ""enumerate"" has incompatible type",1
Ensure that metric is wrapped in a list.,0
This case checks if input is a function then wraps a,0
dc.metrics.Metric object around it,0
Process input metrics,0
Compute multitask metrics,0
We use y/w to aggregate labels/weights across generator.,0
This is a KerasModel.,0
Some datasets have weights,0
Process predictions and populate y/w lists,0
Combine labels/weights,0
Undo data transformations.,0
Compute multitask metrics,0
the line has format,0
REMARK VINA RESULT: score ...,0
There is only 1 such line per model so we can append it,0
"FIXME: Item ""None"" of ""Optional[List[str]]"" has no attribute ""append""",1
Apply common fixes to PDB files,0
Optimize ligand,0
flake8: noqa,0
The number of elements to print for dataset ids/tasks,0
"If a dataset contains more than this number of elements, it won't",0
print any dataset ids,0
An activation function for a Keras layer: either a TensorFlow function or the name of a standard activation,0
"A loss function for use with KerasModel or TorchModel: f(outputs, labels, weights)",0
"A single value of some type, or multiple values of that type",0
The shape of a NumPy array,0
type of RDKit object,0
type of Pymatgen object,0
Generate a random temporary file name,0
Ensure the file is created,0
Open the file in the given mode,0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
Reset aggregator,0
Handle final leftovers for this file,0
First line of user-specified CSV *must* be header.,0
"If gzipped, need to compute extension again",0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
init an one-hot vector,0
"If include_unknown_set is True, set the last index is 1.",0
################################################################,0
atom (node) featurization,0
################################################################,0
################################################################,0
bond (edge) featurization,0
################################################################,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
Loosening atol to see if tests stop failing sporadically,0
string set,0
integer set,0
include_unknown_set is False,0
include_unknown_set is True,0
check unknown atoms,0
check original set,0
"Generally, =O behaves as an electron acceptor",0
we must compute partial charges before using `get_atom_partial_charge`,0
The C-N bond is a single bond,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
self.ligand_file is for 3ws9_ligand.sdf,0
simple flat ring,0
self.cycle4.Compute2DCoords(),0
load and sanitize two real molecules,0
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
def test_compute_cation_pi(self):,0
"# TODO(rbharath): find better example, currently dicts are empty",1
"dicts1 = compute_cation_pi(self.prot, self.lig)",0
"dicts2 = compute_cation_pi(self.lig, self.prot)",0
"TODO find better example, currently dicts are empty",1
TODO test more formats for ligand,0
Test on RDKit,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
TODO test more formats for ligand,0
Construct a random class probability matrix,0
Construct a random class probability matrix,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
"Note that since no name as provided, metrics are index by order",0
given.,0
TODO: Fix this case with correct thresholding,1
TODO: Fix this case with correct thresholding,1
There are 4 faces to the shape created by coords,0
flake8: noqa,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Combine the features, then sort them by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Create a map from the original atom indices within each molecule to the,0
indices in the combined object.,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any specific molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Determine the membership (atom i belongs to molecule membership[i]),0
Initialize the new degree separated adjacency lists,0
Update the old adjacency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
"Requriments - transformers, tokenizers",0
"Right now, the Smiles Tokenizer uses an exiesting vocab file from rxnfp that is fairly comprehensive and from the USPTO dataset.",0
The vocab may be expanded in the near future,0
"|-|\+|\\|\/|:|~|@|\?|>>?|\*|\$|\%[0-9]{2}|[0-9])""""""",0
add vocab_file dict,0
"unk_token=""[UNK]"",",0
"sep_token=""[SEP]"",",0
"pad_token=""[PAD]"",",0
"cls_token=""[CLS]"",",0
"mask_token=""[MASK]"",",0
take into account special tokens in max length,0
flake8: noqa,0
Initalize with 1,0
Replace the hybridization,0
global possible_hybridization_list,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
"Handle edge case of self-pairs (i, i)",0
Increment by 1 since we don't want 0-indexing,0
"This creates a matrix of shape (2, num_pairs)",0
Get mapping,0
first `bt_len` features are bond features(if applicable),0
For ring pairs outside max pairs distance continue,0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
distance is a matrix of 1-hot encoded distances for all atoms,0
For ring pairs outside max pairs distance continue,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
TODO (VIGS25): Complete the description,1
Handle loading failures which return None,0
Fit atomic conv model,0
Add the Atomic Convolution layers to fetches,0
Extract the atomic convolution features,0
flake8: noqa,0
base classes for featurizers,0
molecule featurizers,0
complex featurizers,0
material featurizers,0
for str,0
for list,0
validation,0
skip list,0
skip path string,0
main logic,0
Special case handling of single molecule,0
Convert iterables to list,0
"mol must be a RDKit Mol object, so parse a SMILES",0
"SMILES is unique, so set a canonical order of atoms",0
"FIXME: Signature of ""featurize"" incompatible with supertype ""Featurizer""",1
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
validate params,0
This assumes that the edge features for self loops are full-zero tensors,0
In the future we may want to support featurization for self loops,0
stack features,0
"before stacking edge_features or node_pos_features,",0
we should check whether these are None or not,0
create new edge index,0
graph_index indicates which nodes belong to which graph,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Turn atomic coordinates into image positions,0
Set the atom positions in image to different atomic properties in channels,0
Check whether num_confs >=1 or not,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
generate SMILES for fragments,0
Extend shorter strings with padding,0
Padding before and after,0
validation,0
load pretrained models,0
convert errors to zero,0
flake8: noqa,0
If partial charges were not computed,0
construct atom (node) feature,0
construct edge (bond) index,0
add edge list considering a directed graph,0
construct edge (bond) feature,0
initialize,0
check initialization,0
"`(1, max_atoms, max_atoms)` -> `(max_atoms, max_atoms)`",0
Check whether num_confs >=1 or not,0
Convert AtomPositions from Angstrom to bohr (atomic units),0
"`(1, max_atoms)` -> `(max_atoms,)`",0
Get full N x N SCM,0
flake8: noqa,0
load atom_init.json,0
check whether the atom feature exists or not,0
construct bi-directed graph,0
Increase dimension of distance tensor and apply filter,0
We compute pairwise contact fingerprints,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"distances = compute_pairwise_distances(frag1[0], frag2[0])",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 2) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"centroid = compute_contact_centroid(fragments, cutoff=self.cutoff)",0
We compute pairwise contact fingerprints,0
"frag1_xyz = subtract_centroid(frag1[0], centroid)",0
"frag2_xyz = subtract_centroid(frag2[0], centroid)",0
"xyzs = [frag1_xyz, frag2_xyz]",0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
We compute pairwise contact fingerprints,0
"rdks = [frag1[1], frag2[1]]",0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
flake8: noqa,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
TODO(rbharath): Is this squeeze OK?,1
flake8: noqa,0
"contacts is of form (x_coords, y_coords), a tuple of 2 lists",0
"contacts[0] is the x_coords, that is the frag1 atoms that have",0
nonzero contact.,0
"contacts[1] is the y_coords, the frag2 atoms with nonzero contacts",0
We compute pairwise contact fingerprints,0
Get coordinates,0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge,",0
"voxels_per_edge, num_feat) so we should concatenate on the last",0
axis.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
We compute pairwise contact fingerprints,0
Get coordinates,0
"distances = compute_pairwise_distances(prot_xyz, lig_xyz)",0
We compute pairwise contact fingerprints,0
"Features are of shape (voxels_per_edge, voxels_per_edge, voxels_per_edge, 1) so we should concatenate on the last axis.",0
TODO test more formats for ligand,0
TODO test more formats for ligand,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
with one conformer,0
with multiple conformers,0
include explicit hydrogens,0
"Requirements - transformers, tokenizers",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
"assert ""C1=CC=CN=C1""",0
"assert ""O=C(NCc1cc(OC)c(O)cc1)CCCC/C=C/C(C)C""",0
check for separate count and SMILES entries for each fragment,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_counter():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
featurizer = dc.feat.HydrogenBondCounter(cutoff=cutoff),0
"features, failures = featurizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
,0
,0
"# TODO: This is failing, something about the hydrogen bond counting?",1
def test_hydrogen_bond_voxelizer():,0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(current_dir, 'data',",0
'3ws9_protein_fixer_rdkit.pdb'),0
"ligand_file = os.path.join(current_dir, 'data', '3ws9_ligand.sdf')",0
,0
cutoff = 4.5,0
box_width = 16,0
voxel_width = 1.0,0
voxelizer = dc.feat.HydrogenBondVoxelizer(,0
"cutoff=cutoff, box_width=box_width, voxel_width=voxel_width)",0
"features, failures = voxelizer.featurize([ligand_file], [protein_file])",0
# TODO: Add shape test,1
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
not support array style inputs,0
check convert function,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
untranform,0
untranform,0
untranform,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
TODO(rbharath): This test will be uncommented in the next PR up on the docket.,1
def test_full_complex_featurization(self):,0
"""""""Unit test for ComplexNeighborListFragmentAtomicCoordinates.""""""",0
dir_path = os.path.dirname(os.path.realpath(__file__)),0
"ligand_file = os.path.join(dir_path, ""data/3zso_ligand_hyd.pdb"")",0
"protein_file = os.path.join(dir_path, ""data/3zso_protein.pdb"")",0
"# Pulled from PDB files. For larger datasets with more PDBs, would use",0
# max num atoms instead of exact.,0
frag1_num_atoms = 44  # for ligand atoms,0
frag2_num_atoms = 2336  # for protein atoms,0
complex_num_atoms = 2380  # in total,0
max_num_neighbors = 4,0
# Cutoff in angstroms,0
neighbor_cutoff = 4,0
complex_featurizer = ComplexNeighborListFragmentAtomicCoordinates(,0
"frag1_num_atoms, frag2_num_atoms, complex_num_atoms, max_num_neighbors,",0
neighbor_cutoff),0
"(frag1_coords, frag1_neighbor_list, frag1_z, frag2_coords,",0
"frag2_neighbor_list, frag2_z, complex_coords,",0
"complex_neighbor_list, complex_z) = complex_featurizer._featurize_complex(",0
"ligand_file, protein_file)",0
,0
"assert frag1_coords.shape == (frag1_num_atoms, 3)",0
self.assertEqual(,0
"sorted(list(frag1_neighbor_list.keys())), list(range(frag1_num_atoms)))",0
"self.assertEqual(frag1_z.shape, (frag1_num_atoms,))",0
,0
"self.assertEqual(frag2_coords.shape, (frag2_num_atoms, 3))",0
self.assertEqual(,0
"sorted(list(frag2_neighbor_list.keys())), list(range(frag2_num_atoms)))",0
"self.assertEqual(frag2_z.shape, (frag2_num_atoms,))",0
,0
"self.assertEqual(complex_coords.shape, (complex_num_atoms, 3))",0
self.assertEqual(,0
"sorted(list(complex_neighbor_list.keys())),",0
list(range(complex_num_atoms))),0
"self.assertEqual(complex_z.shape, (complex_num_atoms,))",0
Carbon,0
Test distance 1,0
Test distance 2,0
Test alkane,0
Test distance 1,0
3 self connections and 2 bonds which are both counted twice because of,0
symmetry for 7 total,0
Test distance 2,0
Everything is connected at this distance,0
Test alkane,0
Test distance infinity,0
Everything is connected at this distance,0
Test pentane,0
Test distance infinity,0
Everything is connected at this distance,0
Only one carbon,0
Test feature sizes,0
"No bonds, so only 1 pair feature (for the self interaction)",0
Only 4 atoms,0
Test feature sizes for chirality,0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
mol_list = featurizer.featurize(mols),0
mol = mol_list[0],0
3 carbonds in alkane,0
Test feature sizes,0
Should be a 7x14 interaction grid since there are 7 pairs within graph,0
distance 1 (3 self interactions plus 2 bonds counted twice because of,0
symmetry),0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
import rdkit.Chem,0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
5 atoms in compound,0
Test feature sizes,0
Should be a 3x3 interaction grid,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
First example molecule,0
Artificial feature array.,0
Second example molecule,0
Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
calculate coordinates,0
not zero values,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
"FIXME: Incompatible types in assignment (expression has type ""Dataset"", variable has type ""DiskDataset"")",1
validation,0
skip list,0
skip path string,0
main logic,0
for str,0
for list,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
Figure out how many positive samples we want for each task in each dataset.,0
Assign the positive samples to datasets.  Since a sample may be positive,0
"on more than one task, we need to keep track of the effect of each added",0
"sample on each task.  To try to keep everything balanced, we cycle through",0
"tasks, assigning one positive sample for each one.",0
We have a sample that hasn't been assigned yet.  Assign it to,0
whichever set currently has the lowest fraction of its target for,0
this task.,0
The remaining samples are negative for all tasks.  Add them to fill out,0
each set to the correct total number.,0
"FIXME: Signature of ""k_fold_split"" incompatible with supertype ""Splitter""",1
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
################################################################,0
Splitter for molecule datasets,0
################################################################,0
Sort by increasing MW,0
calcaulate scaffold sets,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
Compute fingerprints for all molecules.,0
Split into two groups: test training set and everything else.,0
Split the second group into validation and test sets.,0
Begin by assigning the first molecule to the first group.,0
Decide which group to assign a molecule to.,0
Identify the unassigned molecule that is least similar to everything in,0
the other group.,0
Add it to the group.,0
Update the data on unassigned molecules.,0
Sort from largest to smallest scaffold sets,0
################################################################,0
Not well supported splitters,0
################################################################,0
All datasets share features and identifiers by assumption.,0
flake8: noqa,0
basic splitter,0
molecule splitter,0
other splitter,0
################################################################,0
Removed API,0
################################################################,0
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
"task_type = ""regression""",0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition the positives for each task roughly in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
The amount of datapoints has to be the same,0
The number of scaffolds generated by the splitter,0
has to be smaller or equal than number of total molecules,0
Add the input features.,0
Add the convolutional layers,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Chain of flows is also a normalizing flow,0
An instance of tfd.TransformedDistribution,0
TODO: Incompability between TF and TFP means that TF doesn't track,1
trainable variables in the flow; must override `_create_gradient_fn`,0
self._variables = self.flow.trainable_variables,0
"Convert (batch_size, tasks, classes) to (batch_size, classes, tasks)",0
"CrossEntropyLoss only supports (batch_size, classes, tasks)",0
This is for API consistency,0
extended one of probabilites to binary distribution,0
extended one of probabilites to binary distribution,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
"There are no neighbors of this degree, so just create an empty tensor directly.",0
Expand dims,0
always deg-1 for deg_adj_lists,0
Extract graph topology,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
Note that AP_ij and AP_ji share the same self.AP_bn batch,0
normalization,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
Final atom-layer convolution. Note this differs slightly from the paper,0
since we use a tanh activation as default. This seems necessary for numerical,0
stability.,0
Now fully connected layers,0
Should this allow for training?,0
"pair_edges is of shape (2, N)",0
number of atoms in each molecule,0
index of pair features,0
Get starting pair atoms,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
W&B logging,0
Backwards compatibility,0
The optimizer creates internal variables the first time apply_gradients(),0
is called for a new set of variables.  If that happens inside a function,0
"annotated with tf.function it throws an exception, so call it once here.",0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to,0
0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Use a GradientTape to compute gradients.,0
Ensure weights for both models are built.,0
Add the input features.,0
Add the dense layers,0
Add the input features.,0
Add the dense layers,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
TODO: Turning off queue for now. Safe to re-activate?,1
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
flake8: noqa,0
scikit-learn model,0
PyTorch models,0
####################################################################################,0
Compatibility imports for renamed XGBoost models. Remove below with DeepChem 3.0.,0
####################################################################################,0
#######################################################################################,0
Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0.,0
#######################################################################################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
The DAG models have high error with dropout,0
"Despite a lot of effort tweaking it , there appears to be",0
a limit to how low the error can go with dropout.,0
assert mean_error < 0.5 * mean_value,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
load datasets,0
disable transformer,0
check train,0
check predict shape,0
check overfit,0
reload,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reloaded Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
3D Multivariate Gaussian base distribution,0
Check that reloaded model can sample from the distribution,0
Check that density estimation is same for reloaded model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Check predictions match on random sample,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Eval model on train,0
Check predictions match on random sample,0
Fit trained model,0
Eval model on train,0
Reload trained model,0
Check predictions match on random sample,0
Eval model on train,0
Reload trained Model,0
Check predictions match on random sample,0
Eval model on train,0
Reload Trained Model,0
Check predictions match on random sample,0
TODO: This test is a little awkward. The Smiles2Vec model awkwardly depends on a dataset_file being available on disk. This needs to be cleaned up to match the standard model handling API.,1
Reload Trained Model,0
Check predictions match on original dataset,0
TODO: We need a cleaner usage example for this,1
Fit trained model,0
Eval model on train,0
Check predictions match on random sample,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
There are 4 atoms each of which have 75 atom features,0
There are 10 pairs with infinity distance and 14 pair features,0
4 atoms in total,0
10 pairs in total,0
10 pairs in total each with start/finish,0
There are 4 atoms each of which have 75 atom features,0
"There are 8 pairs with distance 1 and 14 pair features. (To see why 8,",0
"there's the self pair for ""C"". For ""CCC"" there are 7 pairs including self",0
connections and accounting for symmetry.),0
4 atoms in total,0
10 pairs in total,0
The center atom is self connected and to both neighbors so it appears,0
thrice. The canonical ranking used in MolecularFeaturizer means this,0
central atom is ranked last in ordering.,0
10 pairs in total each with start/finish,0
def test_weave_fit_simple_infinity_distance():,0
featurizer = dc.feat.WeaveFeaturizer(max_pair_distance=None),0
"X = featurizer([""C"", ""CCC""])",0
"y = np.array([0, 1.])",0
"dataset = dc.data.NumpyDataset(X, y)",0
batch_size = 20,0
model = WeaveModel(,0
"1,",0
"batch_size=batch_size,",0
"mode='classification',",0
"fully_connected_layer_sizes=[2000, 1000],",0
"batch_normalize=True,",0
batch_normalize_kwargs={,0
"""fused"": False,",0
"""trainable"": True,",0
"""renorm"": True",0
"},",0
learning_rage=0.0005),0
"model.fit(dataset, nb_epoch=200)",0
transformers = [],0
metric = dc.metrics.Metric(,0
"dc.metrics.roc_auc_score, np.mean, mode=""classification"")",0
"scores = model.evaluate(dataset, [metric], transformers)",0
assert scores['mean-roc_auc_score'] >= 0.9,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Predict the output and uncertainty.,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
eval model on test,0
prepare dataset,0
global setting,0
xgboost test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
prepare dataset,0
global setting,0
lightgbm test,0
fit trained model,0
reload,0
check predictions match on test dataset,0
eval model on test,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"frag2_z = np.random.rand(N_atoms, 3)",0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
No training has been done after reload,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Check that predicting internal layers works.,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
Reload the save model and confirm that it matches the best logged score.,0
3D Multivariate Gaussian base distribution,0
Must be float32 for RealNVP,0
Tests a simple flow of one RealNVP layer.,0
log likelihoods should be negative,0
# Fit model,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
x and y are the same tensor (equivalent at every element),0
the pairwise inner product of the rows in x and y will always be 1,0
"the output tensor will be of shape (5,5)",0
each row in x1 is orthogonal to each row in x2,0
the pairwise inner product of the rows in x and y will always be 0,0
"the output tensor will be of shape (256,256)",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
"Outputs should be [A, P]",0
atom features,0
Try without compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
Try with compression,0
"Outputs should be [mol1_vec, mol2_vec)",0
atom features,0
"per_mol_features = tf.math.segment_sum(inputs[0], inputs[1])",0
Gaussian histograms expands into 11 Gaussian buckets.,0
"assert np.array(outputs[1]).shape == (11 * 75,)",0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Recall that the DAG layer expects a MultiConvMol as input,",0
"so the ""batch"" is a pooled set of atoms from all the",0
"molecules in the batch, just as it is for the graph conv.",0
This means that n_atoms is the batch-size,0
dropout_switch = False,0
dropout_switch,0
# TODO(rbharath): What is the shape of outputs supposed to be?,1
"# I'm getting (7, 30) here. Where does 7 come from??",0
TODO(rbharath): We need more documentation about why,1
these numbers work.,0
Create a dataset and an input function for processing it.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Each epoch is a single step for this model,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
overfit test,0
test on a small MoleculeNet dataset,0
load datasets,0
initialize models,0
embedding node features,0
convolutional layer,0
pooling,0
for n_tasks == 1 case,0
Decide first number of GAT layers,0
flake8:noqa,0
Select a device.,0
W&B logging,0
Main training loop.,0
"Execute the loss function, accumulating the gradients.",0
Report progress and write checkpoints.,0
Capture the last avg_loss in case of return since we're resetting to 0 now,0
Report final results.,0
Invoke the model.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
Compute the gradients.,0
Save the checkpoint to a file.,0
Rename and delete older files.,0
Ensure weights for both models are built.,0
Some scikit-learn models don't use weights.,0
flake8: ignore,0
GDBT doesn't support multi-output(task),0
Find optimal n_estimators based on original learning_rate and early_stopping_rounds,0
retrain model to whole data using best n_estimators * 1.25,0
GDBT doesn't support multi-output(task),0
########################################,0
Deprecation warnings for XGBoostModel,0
########################################,0
flake8: noqa,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ######,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Build the path to the dataset on disk.,0
Try to reload cached datasets.,0
Create the dataset,0
Split and transform the dataset.,0
. clinical trial toxicity (or absence of toxicity),0
. FDA approval status.,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ###########,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
######### TIMING ################,0
Most reaction dataset ML tasks train the prediction of products from,0
"ractants. Both of these are contained in the rxn object that is output,",0
"so there is no ""tasks"" field.",0
Download USPTO dataset,0
Unzip,0
Unzipped file is a tap seperated values file (despite the .txt),0
The first element in the row is the reaction smarts,0
"Sometimes smarts have extraneous information at end of form """,0
"|f:0"" that causes parsing to fail. Not sure what this information",0
"is, but just ignoring for now.",0
Make up dummy labels since DiskDataset.from_numpy doesn't allow,0
creation from just features for now.,0
TODO: This dataset isn't saved to disk so reload doesn't happen.,1
dict of accepted featurizers for this dataset,0
modify the returned dicts for your dataset,0
Names of supported featurizers,0
dict of accepted transformers,0
dict of accepted splitters,0
names of supported splitters,0
Warning message about this template,0
Featurize mydataset,0
Get DeepChem data directory if needed,0
Check for str args to featurizer and splitter,0
Reload from disk,0
First type of supported featurizers,0
"If featurizer requires a non-CSV file format, load .tar.gz file",0
Changer loader to match featurizer and data file type,0
Featurize dataset,0
Initialize transformers,0
"get pdb and sdf filenames, labels and pdbids",0
load and featurize each complex,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
"def load_pcba_146(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_146.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
"def load_pcba_2475(featurizer='ECFP',",0
"split='random',",0
"reload=True,",0
"data_dir=None,",0
"save_dir=None,",0
**kwargs):,0
return load_pcba_dataset(,0
"featurizer=featurizer,",0
"split=split,",0
"reload=reload,",0
"assay_file_name=""pcba_2475.csv.gz"",",0
"data_dir=data_dir,",0
"save_dir=save_dir,",0
**kwargs),0
def test_qm9_loader():,0
current_dir = os.path.dirname(os.path.abspath(__file__)),0
"tasks, datasets, transformers = load_qm9(",0
"reload=False,",0
"data_dir=current_dir,",0
"featurizer='ECFP',",0
splitter_kwargs={,0
"'seed': 42,",0
"'frac_train': 0.6,",0
"'frac_valid': 0.2,",0
'frac_test': 0.2,0
}),0
,0
assert len(tasks) == 12,0
assert tasks[0] == 'mu',0
"assert datasets[0].X.shape == (8, 1024)",0
def test_zinc15_loader():,0
current_dir = os.path.dirname(os.path.abspath(__file__)),0
,0
"tasks, datasets, transformers = load_zinc15(",0
"reload=False,",0
"data_dir=current_dir,",0
splitter_kwargs={,0
"'seed': 42,",0
"'frac_train': 0.6,",0
"'frac_valid': 0.2,",0
'frac_test': 0.2,0
}),0
,0
test_vec = np.array([,0
"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,",0
"0.0, -1.224744871391589, 0.0, 0.0, 0.0, 0.0, 2.0, -0.5, 0.0, 0.0, 0.0,",0
"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0",0
]),0
,0
"train, val, test = datasets",0
"assert tasks == ['mwt', 'logp', 'reactive']",0
"assert train.X.shape == (3, 100, 35)",0
"assert np.allclose(train.X[0][0], test_vec, atol=0.01)",0
,0
"if os.path.exists(os.path.join(current_dir, 'zinc15_250K_2D.csv')):",0
"os.remove(os.path.join(current_dir, 'zinc15_250K_2D.csv'))",0
Range of optimization,0
We know from guard above that this is an int/float,0
Specify logfile,0
Make logdir if it doesn't exist.,0
setup range,0
Stores all results,0
Store all model references so we don't have to reload,0
Stores all model locations,0
Demarcating internal function for readability,0
"param values are always float in BO, so this line converts float to int",0
see : https://github.com/josejimenezluna/pyGPGO/issues/10,0
Record hyperparameters,0
Add it on to the information needed for the constructor,0
Some models autosave,0
Record performances,0
Store all results,0
Store reference to model,0
GPGO maximize performance by default,0
set performance to its negative value for minimization,0
execute GPGO,0
FIXME: Incompatible types in assignment,1
Let's fetch the model with the best parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Return default hyperparameters,0
Construction dictionary mapping hyperparameter names to values,0
Some models autosave,0
arbitrarily return last model,0
flake8: noqa,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Generate dummy dataset,0
Generate dummy dataset,0
These are per-example multiplier,0
Test that 2 parameters were optimized,0
Recall that the key is a string of the form _batch_size_39_learning_rate_0.01 for example,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the inputs and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Training loop.,0
Do checkpointing.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the inputs and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A2C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
"default channels are ""conda-forge"" and ""omnia""",0
"default packages are ""rdkit"", ""openmm"" and ""pdbfixer""",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Batch size of models,0
Fit models,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating positives and negatives so each batch will have,0
equal numbers of both.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load SAMPL(FreeSolv) dataset,0
Define metric,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
plt.show(),0
"run_benchmark(FILE, DEEPCHEM_DIR)",0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Build the meta-learning model.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Create a Checkpoint for saving.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"If we train on the current task, the loss should go down.",0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
Best score case,0
Worst score case,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
"X = np.random.rand(10, 1, 4, 50)",0
"y = np.random.randint(0, 2, size=(10, 1))",0
"dataset = dc.data.NumpyDataset(X, y)",0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
"X = np.random.rand(10, 1, 4, 50)",0
"y = np.random.randint(0, 2, size=(10, 1))",0
"dataset = dc.data.NumpyDataset(X, y)",0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
"(X, y, w, ids)",0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset and have it create an Iterator.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
(ytz): this skips everything except possibly the last shard,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
First try using images for X.,0
Now try using images for y.,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Create image file,0
Create zip of image file,0
"self.zip_path = ""/home/rbharath/misc/cells.zip""",0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
extracting validation set of MNIST for testing the DataTransforms,0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Test on random example,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Test if dimensionality expansion is handled correctly by untransform,0
Check ids are unchanged before and after transformation,0
Check X is unchanged since transform_y is true,0
Check w is unchanged since transform_y is true,0
Check minimum and maximum values of transformed y are 0 and 1,0
Check untransform works correctly,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check Blurring,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
TODO: mol should be always sanitized when charges are calculated,1
can't change it now because it would break a lot of examples,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
This is a KerasModel.,0
This is a TensorGraph.,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
Extend shorter strings with padding,0
Padding before and after,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Setup image,0
Compute bond properties,0
Compute atom properties,0
Reshape done for proper broadcast,0
"Reshapes, and axes manipulations to facilitate vector processing.",0
Draw a line between the two atoms.,0
"The coordinates of this line, are indicated in line_coords",0
Turn the line coordinates into image positions,0
Set the bond line coordinates to the bond property used.,0
Turn atomic coordinates into image positions,0
Set the atom positions in image to different atomic properties in channels,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
TODO(rbharath): Is this squeeze OK?,1
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Results should be sorted by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
TODO (VIGS25): Complete the description,1
Handle loading failures which return None,0
Fit atomic conv model,0
Add the Atomic Convolution layers to fetches,0
Extract the atomic convolution features,0
Handle loading failures which return None,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other,1
splits (or potentially refactor those to match this).,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
calculate percent split for valid (out of test and valid),0
"split remaining data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
We pass an input to the Variable layer to work around a bug in TF 1.14.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create the Keras model.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
-*- coding: utf-8 -*-,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
So the Tensor has known dimensions,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Build the model.,0
Build the model.,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Build the model.,0
Build the model.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
"The model doesn't specify inputs, so guess the input shapes based on the",0
example batch.,0
The loss doesn't depend on any variables.,0
Main training loop.,0
"In eager mode we execute the loss function, accumulating the gradients.",0
In graph mode we execute the training op.,0
Report progress and write checkpoints.,0
Report final results.,0
In eager mode we invoke the model directly.,0
In graph mode we execute the output tensors.,0
Apply tranformers and record results.,0
Concatenate arrays to create the final results.,0
"If only one output, just return array",0
In eager mode we use a GradientTape to compute gradients.,0
In graph mode we use tf.gradients().,0
Adapted from https://github.com/tensorflow/tensorflow/issues/675#issuecomment-319891923.,0
self.session is used because restore was called in the same session,0
Add the input features.,0
Add the dense layers,0
Add the input features.,0
Add the dense layers,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
Build the model.,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
TODO: Turning off queue for now. Safe to re-activate?,1
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
Add the input features.,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
################### Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0. ####################,0
Last layer sequences not returned.,0
This is needed because ImageDataGenerator does infinite looping,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
This happens when building an estimator.,0
Calculate what the new shape will be.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
No other forget biases supported right now.,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
Number of grid cells,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
Add in features,0
Add in labels,0
Add in all layers,0
The last layer is the output of the model,0
TODO(rbharath): Add in support for additional,1
losses.,0
TODO(rbharath): The TensorGraph can't be built until,1
fit is called since the shapes of features/labels,0
not specified. Need to figure out a good restoration,0
method for this use case.,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
number of inputs each step,0
Arguments,0
Aliases.,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
In eager mode we want an optimizer and a function to compute the,0
gradient of the loss.,0
In graph mode we want a training operation.,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"TODO Once we drop Python 2 support, turn outputs into a proper keyword arg",1
instead of using the **kwargs hack.,1
Gather results for each output,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"If only one output, just return array",0
Adapted from https://github.com/tensorflow/tensorflow/issues/675#issuecomment-319891923.,0
"The next release of Tensorflow will add a proper jacobian() function, so",0
we can remove this then.,0
"Remove extra dimensions, because I couldn't figure out how to get the",0
jacobian() function to not produce them.,0
"In eager mode, we need to execute every layer once to ensure its variables",0
have been created.,0
"We can't execute Input layers in eager mode, since they would try",0
to create placeholders.  Instead create a tensor of the correct,0
size and type.,0
Build the layers.,0
Initialize variables.,0
In graph mode we need to create the computation graph.,0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Check the inputs.,0
Define a function that recursively creates tensors from layers.,0
Define the model function.,0
Define the inputs.,0
"Create the correct outputs, based on the mode.",0
Create the Estimator.,0
Add or remove dimensions of size 1 to match the shape of the layer.,0
Should we keep a separate global step count for each submodel?,0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Prepare Training Data,0
Train the model,0
Prepare the Testing data,0
predict,0
check output shape,0
new object of UNet to test if loading the model results in same predictions,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
"If we don't specify the initial state, it should default to zeros.",0
Explicitly specifying the zero state should give the same result.,0
Specifying a different initial state should produce a different result.,0
We should get the same result with either predict_on_batch() or __call__().,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Test for correct value return (normal mode),0
Test for shapes (normal mode),0
Test for correct value return (eager mode),0
Test for shape (eager mode),0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Layer is wrapper around embedding lookup, tested that then",0
Expected output,0
Create a dataset with three tasks.  The first two tasks each depend only,0
on half the features.  The third task depends on all of them.,0
Create an OntologyModel.  Two leaf nodes contain half the features.,0
Train the model on the datase.,0
It should have learned to predict all of the tasks accurately.,0
"In addition, it should be able to predict the first task based only on the",0
"first leaf node, and the second task based only on the second leaf node.",0
Create a dataset with three tasks.  The first two tasks each depend only,0
on half the features.  The third task depends on all of them.,0
Create an OntologyModel.  Two leaf nodes contain half the features.,0
Train the model on the datase.,0
It should have learned to predict all of the tasks accurately.,0
"In addition, it should be able to predict the first task based only on the",0
"first leaf node, and the second task based only on the second leaf node.",0
Here are mappings for just a few yeast genes.,0
"Build the ontology, then see if it looks correct.",0
Should be able to call fit twice without failure.,0
# TODO(rbharath): Transform these into useful weights.,0
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
# TODO(rbharath): Add a test with per-class weighting.,1
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
Prepare Training Data,0
Train the model,0
Prepare the Testing data,0
predict,0
check output shape,0
new object of ResNet to test if loading the model results in same predictions,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
def test_multi_task_classifier(self):,0
"""""""Test creating an Estimator from a MultitaskClassifier.""""""",0
n_samples = 10,0
n_features = 3,0
n_tasks = 2,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y, w)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"return {'x': x, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
"model = dc.models.MultitaskClassifier(n_tasks, n_features, dropouts=0)",0
,0
# Create an estimator from it.,0
,0
"x_col = tf.feature_column.numeric_column('x', shape=(n_features,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
,0
"def accuracy(labels, predictions, weights):",0
"return tf.metrics.accuracy(labels, tf.round(predictions), weights)",0
,0
metrics = {'accuracy': accuracy},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(100)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-4,0
assert results['accuracy'] > 0.9,0
,0
def test_multi_task_regressor(self):,0
"""""""Test creating an Estimator from a MultitaskRegressor.""""""",0
n_samples = 10,0
n_features = 3,0
n_tasks = 2,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y, w)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"return {'x': x, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
"model = dc.models.MultitaskRegressor(n_tasks, n_features, dropouts=0)",0
,0
# Create an estimator from it.,0
,0
"x_col = tf.feature_column.numeric_column('x', shape=(n_features,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
metrics = {'error': tf.metrics.mean_absolute_error},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(100)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-3,0
assert results['error'] < 0.1,0
,0
def test_robust_multi_task_classifier(self):,0
"""""""Test creating an Estimator from a MultitaskClassifier.""""""",0
n_samples = 10,0
n_features = 3,0
n_tasks = 2,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y, w)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"return {'x': x, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
model = dc.models.RobustMultitaskClassifier(,0
"n_tasks,",0
"n_features,",0
"layer_sizes=[50],",0
"bypass_layer_sizes=[10],",0
"dropouts=0,",0
"bypass_dropouts=0,",0
learning_rate=0.003),0
,0
# Create an estimator from it.,0
,0
"x_col = tf.feature_column.numeric_column('x', shape=(n_features,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
,0
"def accuracy(labels, predictions, weights):",0
"return tf.metrics.accuracy(labels, tf.round(predictions), weights)",0
,0
metrics = {'accuracy': accuracy},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(500)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-2,0
assert results['accuracy'] > 0.9,0
,0
def test_robust_multi_task_regressor(self):,0
"""""""Test creating an Estimator from a MultitaskRegressor.""""""",0
n_samples = 10,0
n_features = 3,0
n_tasks = 2,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y, w)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"return {'x': x, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
model = dc.models.RobustMultitaskRegressor(,0
"n_tasks,",0
"n_features,",0
"layer_sizes=[50],",0
"bypass_layer_sizes=[10],",0
"dropouts=0,",0
"bypass_dropouts=0,",0
learning_rate=0.003),0
,0
# Create an estimator from it.,0
,0
"x_col = tf.feature_column.numeric_column('x', shape=(n_features,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
metrics = {'error': tf.metrics.mean_absolute_error},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(500)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-2,0
assert results['error'] < 1e-2,0
Create a dataset and an input function for processing it.,0
Create the model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
def test_irv(self):,0
"""""""Test creating an Estimator from a IRVClassifier.""""""",0
n_samples = 50,0
n_features = 3,0
n_tasks = 2,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y, w)",0
"transformers = [dc.trans.IRVTransformer(10, n_tasks, dataset)]",0
,0
for transformer in transformers:,0
dataset = transformer.transform(dataset),0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"return {'x': x, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
model = dc.models.TensorflowMultitaskIRVClassifier(,0
"n_tasks, K=10, learning_rate=0.001, penalty=0.05, batch_size=50)",0
model.build(),0
# Create an estimator from it.,0
,0
"x_col = tf.feature_column.numeric_column('x', shape=(2 * 10 * n_tasks,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
,0
"def accuracy(labels, predictions, weights):",0
"return tf.metrics.accuracy(labels, tf.round(predictions[:, :, 1]),",0
weights),0
,0
metrics = {'accuracy': accuracy},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(100)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['accuracy'] > 0.9,0
,0
def test_textcnn_classification(self):,0
"""""""Test creating an Estimator from TextCNN for classification.""""""",0
n_tasks = 2,0
n_samples = 5,0
,0
# Create a TensorGraph model.,0
seq_length = 20,0
model = dc.models.TextCNNModel(,0
"n_tasks=n_tasks,",0
"char_dict=default_dict,",0
"seq_length=seq_length,",0
"kernel_sizes=[5, 5],",0
"num_filters=[20, 20])",0
,0
np.random.seed(123),0
"smile_ids = [""CCCCC"", ""CCC(=O)O"", ""CCC"", ""CC(=O)O"", ""O=C=O""]",0
X = smile_ids,0
"y = np.zeros((n_samples, n_tasks))",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = NumpyDataset(X, y, w, smile_ids)",0
,0
"def accuracy(labels, predictions, weights):",0
"return tf.metrics.accuracy(labels, tf.round(predictions), weights)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"smiles_seq = tf.py_func(model.smiles_to_seq_batch, inp=[x], Tout=tf.int32)",0
"return {'x': smiles_seq, 'weights': weights}, y",0
,0
# Create an estimator from it.,0
x_col = tf.feature_column.numeric_column(,0
"'x', shape=(seq_length,), dtype=tf.int32)",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
metrics = {'accuracy': accuracy},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
estimator.train(input_fn=lambda: input_fn(100)),0
,0
# Evaluate results,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-2,0
assert results['accuracy'] > 0.9,0
,0
def test_textcnn_regression(self):,0
"""""""Test creating an Estimator from TextCNN for regression.""""""",0
n_tasks = 2,0
n_samples = 10,0
,0
# Create a TensorGraph model.,0
seq_length = 20,0
model = dc.models.TextCNNModel(,0
"n_tasks=n_tasks,",0
"char_dict=default_dict,",0
"seq_length=seq_length,",0
"kernel_sizes=[5, 5],",0
"num_filters=[20, 20],",0
"mode=""regression"")",0
,0
np.random.seed(123),0
"smile_ids = [""CCCCC"", ""CCC(=O)O"", ""CCC"", ""CC(=O)O"", ""O=C=O""]",0
X = smile_ids,0
"y = np.zeros((n_samples, n_tasks, 1), dtype=np.float32)",0
"w = np.ones((n_samples, n_tasks))",0
"dataset = NumpyDataset(X, y, w, smile_ids)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"smiles_seq = tf.py_func(model.smiles_to_seq_batch, inp=[x], Tout=tf.int32)",0
"return {'x': smiles_seq, 'weights': weights}, y",0
,0
# Create an estimator from it.,0
x_col = tf.feature_column.numeric_column(,0
"'x', shape=(seq_length,), dtype=tf.int32)",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
metrics = {'error': tf.metrics.mean_absolute_error},0
estimator = model.make_estimator(,0
"feature_columns=[x_col], weight_column=weight_col, metrics=metrics)",0
,0
# Train the model.,0
estimator.train(input_fn=lambda: input_fn(100)),0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 1e-1,0
assert results['error'] < 0.1,0
,0
def test_scscore(self):,0
"""""""Test creating an Estimator from a ScScoreModel.""""""",0
n_samples = 10,0
n_features = 3,0
n_tasks = 1,0
,0
# Create a dataset and an input function for processing it.,0
,0
np.random.seed(123),0
"X = np.random.rand(n_samples, 2, n_features)",0
"y = np.zeros((n_samples, n_tasks))",0
"dataset = dc.data.NumpyDataset(X, y)",0
,0
def input_fn(epochs):,0
"x, y, weights = dataset.make_iterator(",0
"batch_size=n_samples, epochs=epochs).get_next()",0
"x1 = x[:, 0]",0
"x2 = x[:, 1]",0
"return {'x1': x1, 'x2': x2, 'weights': weights}, y",0
,0
# Create a TensorGraph model.,0
,0
"model = dc.models.ScScoreModel(n_features, dropouts=0)",0
del model.outputs[:],0
model.outputs.append(model.difference),0
,0
"def accuracy(labels, predictions, weights):",0
predictions = tf.nn.relu(tf.sign(predictions)),0
"return tf.metrics.accuracy(labels, predictions, weights)",0
,0
# Create an estimator from it.,0
,0
"x_col1 = tf.feature_column.numeric_column('x1', shape=(n_features,))",0
"x_col2 = tf.feature_column.numeric_column('x2', shape=(n_features,))",0
"weight_col = tf.feature_column.numeric_column('weights', shape=(1,))",0
,0
estimator = model.make_estimator(,0
"feature_columns=[x_col1, x_col2],",0
"metrics={'accuracy': accuracy},",0
weight_column=weight_col),0
,0
# Train the model.,0
,0
estimator.train(input_fn=lambda: input_fn(100)),0
,0
# Evaluate the model.,0
,0
results = estimator.evaluate(input_fn=lambda: input_fn(1)),0
assert results['loss'] < 0.5,0
assert results['accuracy'] > 0.6,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
@flaky,0
def test_dtnn_regression_model(self):,0
"""""""Test creating an estimator for DTNNGraphModel for regression""""""",0
current_dir = os.path.dirname(os.path.abspath(__file__)),0
"input_file = os.path.join(current_dir, ""example_DTNN.mat"")",0
dataset = loadmat(input_file),0
,0
num_vals_to_use = 20,0
,0
np.random.seed(123),0
X = dataset['X'][:num_vals_to_use],0
y = dataset['T'][:num_vals_to_use].astype(np.float32),0
w = np.ones_like(y),0
"dataset = dc.data.NumpyDataset(X, y, w, ids=None)",0
n_tasks = y.shape[1],0
n_samples = y.shape[0],0
,0
"dtypes = [tf.int32, tf.float32, tf.int32, tf.int32, tf.int32]",0
,0
model = dc.models.DTNNModel(,0
"n_tasks,",0
"n_embedding=20,",0
"n_distance=100,",0
"learning_rate=1.0,",0
"mode=""regression"")",0
,0
"def mean_relative_error(labels, predictions, weights):",0
"error = tf.abs(1 - tf.math.divide(labels, predictions))",0
"error_val, update_op = tf.metrics.mean(error)",0
"return error_val, update_op",0
,0
"def input_fn(batch_size, epochs):",0
"X, y, weights = dataset.make_iterator(",0
"batch_size=batch_size, epochs=epochs).get_next()",0
features = tf.py_func(,0
"model.compute_features_on_batch, inp=[X], Tout=dtypes)",0
,0
assert len(features) == 5,0
feature_dict = dict(),0
feature_dict['atom_num'] = features[0],0
feature_dict['distance'] = features[1],0
feature_dict['dist_mem_i'] = features[2],0
feature_dict['dist_mem_j'] = features[3],0
feature_dict['atom_mem'] = features[4],0
feature_dict['weights'] = weights,0
,0
"return feature_dict, y",0
,0
atom_number = tf.feature_column.numeric_column(,0
"'atom_num', shape=[], dtype=dtypes[0])",0
distance = tf.feature_column.numeric_column(,0
"'distance', shape=(model.n_distance,), dtype=dtypes[1])",0
atom_mem = tf.feature_column.numeric_column(,0
"'atom_mem', shape=[], dtype=dtypes[2])",0
dist_mem_i = tf.feature_column.numeric_column(,0
"'dist_mem_i', shape=[], dtype=dtypes[3])",0
dist_mem_j = tf.feature_column.numeric_column(,0
"'dist_mem_j', shape=[], dtype=dtypes[4])",0
,0
"weight_col = tf.feature_column.numeric_column('weights', shape=(n_tasks,))",0
metrics = {'error': mean_relative_error},0
,0
"feature_cols = [atom_number, distance, dist_mem_i, dist_mem_j, atom_mem]",0
estimator = model.make_estimator(,0
"feature_columns=feature_cols, weight_column=weight_col, metrics=metrics)",0
"estimator.train(input_fn=lambda: input_fn(100, 250))",0
,0
"results = estimator.evaluate(input_fn=lambda: input_fn(n_samples, 1))",0
assert results['error'] < 0.1,0
Construct layers for all nodes.,0
Create the loss function.,0
Create inputs for the features.,0
Create inputs for the children.,0
Concatenate all inputs together.,0
Create the output.,0
"If necessary, download the file defining the ontology.",0
Parse the ontology definition and create a list of terms.,0
Create OntologyNode objects for all the terms.,0
"Assign parent-child relationships between nodes, and identify root nodes.",0
Create a single root node that combines the three GO roots.,0
Assign features to nodes.,0
Count the number of features within each node.  Eliminate nodes with too few,0
features and set the number of outputs for each one.,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultitaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def MultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultitaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"frag2_z = np.random.rand(N_atoms, 3)",0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
Check that predicting internal layers works.,0
Create two models using the same model directory.,0
Check that they produce different results.,0
"Save a checkpoint from the first model and load it into the second one,",0
and make sure they now match.,0
Train a model to overfit the dataset.,0
"Create an identical model, do a single step of fitting with restore=True,",0
and make sure it got restored correctly.,0
Build a model that predicts uncertainty.,0
Fit the model and see if its predictions are correct.,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Train the model while logging the validation ROC AUC.,0
Parse the log to pull out the AUC scores.,0
The last reported score should match the current performance of the model.,0
Reload the save model and confirm that it matches the best logged score.,0
Create a dataset and an input function for processing it.,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
from deepchem.molnet.run_benchmark_low_data import run_benchmark_low_data,0
Featurize qm9 dataset,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ######,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
No tasks since no labels provided.,0
For now images are loaded directly by ImageLoader,0
Load Sweetlead dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Featurize HOPV dataset,0
Featurize PPB dataset,0
Load MUV dataset,0
Featurize MUV dataset,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize BBBC001 dataset,0
Featurize Images into NumpyArrays,0
Load text file with labels,0
Strip the first line which holds field labels,0
Format is: Image_name count1 count2,0
This is kludgy way to add y to dataset. Can be done better?,1
Featurize BBBC002 dataset,0
Featurize Images into NumpyArrays,0
Load text file with labels,0
Strip the first line which holds field labels,0
Format is: Image_name count1 count2,0
This is kludgy way to add y to dataset. Can be done better?,1
Featurize TOXCAST dataset,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ###########,0
Featurizer thermosol dataset,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
######### TIMING ################,0
Most reaction dataset ML tasks train the prediction of products from,0
"ractants. Both of these are contained in the rxn object that is output,",0
"so there is no ""tasks"" field.",0
Download USPTO dataset,0
Unzip,0
Unzipped file is a tap seperated values file (despite the .txt),0
The first element in the row is the reaction smarts,0
"Sometimes smarts have extraneous information at end of form """,0
"|f:0"" that causes parsing to fail. Not sure what this information",0
"is, but just ignoring for now.",0
Make up dummy labels since DiskDataset.from_numpy doesn't allow,0
creation from just features for now.,0
TODO: This dataset isn't saved to disk so reload doesn't happen.,1
Featurizer hppb dataset,0
Featurize hiv dataset,0
Extract locations of data,0
Extract labels,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
Featurize Data,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
Delete labels and ids for failing elements,0
No transformations of data,0
Split dataset,0
TODO(rbharath): This should be modified to contain a cluster split so,1
structures of the same protein aren't in both train/test,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Featurize Delaney dataset,0
Featurize PCBA dataset,0
Featurize Lipophilicity dataset,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Batch size of models,0
Fit models,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
graph_model = dc.nn.SequentialGraph(n_feat),0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating postives and negatives so each batch will have,0
equal numbers of both.,0
Create the model to train.  We use a simple fully connected network with,0
one hidden layer.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load SAMPL(FreeSolv) dataset,0
Define metric,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
Atom features with padding,0
A_tilda_k computation,0
Final feed_dict setup,0
"assert val.shape == (self.batch_size, self.max_nodes, self.max_nodes)",0
"assert atom_features.shape == (self.batch_size, self.max_nodes,",0
self.num_node_features),0
Fit models,0
Args,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Args,0
TODO (VIGS25): Account for the reload option,1
Downloading train files,0
Parsing training data,0
"Pick only sequences from humans, belong to specific MHC allele and having given seq_len",0
Test Files loading,0
One Hot Featurization,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
following lines added to run train_and_evaluate function of deepchem which is compatible for distributed training,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
inputs placeholder,0
data preprocessing and augmentation,0
first conv layer,0
downsample by max pooling,0
each module is a residual convolutional block,0
followed by a convolutional downsample layer,0
max pooling over the final outcome,0
fully connected layers,0
dropout for dense layers,0
"in_layer = Dropout(0.25, in_layers=[in_layer])",0
weight decay regularizer,0
"weighted_loss = WeightDecay(0.1, 'l2', in_layers=[weighted_loss])",0
sample cut ratio from a clipped gaussian,0
train/valid differences,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Define and build model,0
model.restore(),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
plt.show(),0
"run_benchmark(FILE, DEEPCHEM_DIR)",0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Create duplicate placeholders for meta-optimization.,0
Create the loss function for meta-optimization.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
"Shape (N_sequences, N_letters, sequence_length, 1, num_tasks)",0
"Shape (N_sequences, num_tasks)",0
"Shape (N_sequences, num_tasks, 1, 1, 1)",0
Mutates every position of the sequence to every letter,0
"Shape (N_letters * sequence_length, N_letters, sequence_length, 1)",0
Breakdown:,0
"Shape of sequence[np.newaxis] (1, N_letters, sequence_length, 1)",0
remove wild-type,0
len(arange) = N_letters * sequence_length,0
len(horizontal cycle) = N_letters * sequence_length,0
add mutant,0
make mutant predictions,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
Best score case,0
Worst score case,0
Encode motif,0
"sequences now has shape (3, 4, 5, 1)",0
"sequences now has shape (3, 4, 5, 1)",0
Construct and train SequenceDNN model,0
"X = np.random.rand(10, 1, 4, 50)",0
"y = np.random.randint(0, 2, size=(10, 1))",0
"dataset = dc.data.NumpyDataset(X, y)",0
Call in-silico mutagenesis,0
Construct and train SequenceDNN model,0
"X = np.random.rand(10, 1, 4, 50)",0
"y = np.random.randint(0, 2, size=(10, 1))",0
"dataset = dc.data.NumpyDataset(X, y)",0
Call in-silico mutagenesis,0
Check nonzero elements exist,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
"(X, y, w, ids)",0
Sometimes zip files contain directories within. Traverse directories,0
TODO(rbharath): Add support for more extensions,1
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset and have it create an Iterator.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
(ytz): this skips everything except possibly the last shard,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
First try using images for X.,0
Now try using images for y.,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Create image file,0
Create zip of image file,0
"self.zip_path = ""/home/rbharath/misc/cells.zip""",0
Create zip of multiple image files,0
"Create zip of multiple image files, multiple_types",0
Create image directory,0
These are the known dimensions of face.png,0
TODO(rbharath): Where are the color channels?,1
"Since the different files have different shapes, makes an object array",0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
extracting validation set of MNIST for testing the DataTransforms,0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check Blurring,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
Check shift,0
check gaussian noise,0
check salt and pepper noise,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are either in .sdf.csv file or in the .sdf file itself,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
TODO: mol should be always sanitized when charges are calculated,1
can't change it now because it would break a lot of examples,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
TODO(rbharath): Is this squeeze OK?,1
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
"Results should be sorted by (atom_degree, mol_index)",0
"Mergesort is a ""stable"" sort, so the array maintains it's secondary sort of mol_index",0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
Currently handles loading failures by returning None,0
TODO: Is there a better handling procedure?,1
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
TODO (VIGS25): Complete the description,1
Handle loading failures which return None,0
Fit atomic conv model,0
Add the Atomic Convolution layers to fetches,0
Extract the atomic convolution features,0
Handle loading failures which return None,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other,1
splits (or potentially refactor those to match this).,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
calculate percent split for valid (out of test and valid),0
"split remaining data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Test singletask case.,0
Should have made an 80/10/10 train/valid/test split of actives.,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
################### Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0. ####################,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
Calculate what the new shape will be.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
Generate the nb_affine weights and biases,0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, W_list,",0
b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
## Performs computations,0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
self.build(),0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
Create the variables.,0
Compute the distances and radial symmetry functions.,0
check that there isnt just one or zero inputs,0
create subspaces,0
create the alpha learnable parameters,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
We do not need the mask because every graph has self.num_vertices vertices now,0
So the Tensor has known dimensions,0
Add in features,0
Add in labels,0
Add in all layers,0
The last layer is the output of the model,0
TODO(rbharath): Add in support for additional,1
losses.,0
TODO(rbharath): The TensorGraph can't be built until,1
fit is called since the shapes of features/labels,0
not specified. Need to figure out a good restoration,0
method for this use case.,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Extract atom_features,0
Add trainable weights,0
Extract atom_features,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
Arguments,0
Aliases.,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
In eager mode we want an optimizer and a function to compute the,0
gradient of the loss.,0
In graph mode we want a training operation.,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"TODO Once we drop Python 2 support, turn outputs into a proper keyword arg",1
instead of using the **kwargs hack.,1
Gather results for each output,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"If only one output, just return array",0
Adapted from https://github.com/tensorflow/tensorflow/issues/675#issuecomment-319891923.,0
"The next release of Tensorflow will add a proper jacobian() function, so",0
we can remove this then.,0
"Remove extra dimensions, because I couldn't figure out how to get the",0
jacobian() function to not produce them.,0
"In eager mode, we need to execute every layer once to ensure its variables",0
have been created.,0
"We can't execute Input layers in eager mode, since they would try",0
to create placeholders.  Instead create a tensor of the correct,0
size and type.,0
Build the layers.,0
Initialize variables.,0
In graph mode we need to create the computation graph.,0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Check the inputs.,0
Define a function that recursively creates tensors from layers.,0
Define the model function.,0
Define the inputs.,0
"Create the correct outputs, based on the mode.",0
Create the Estimator.,0
Add or remove dimensions of size 1 to match the shape of the layer.,0
Should we keep a separate global step count for each submodel?,0
Add the input features.,0
Weight decay not activated,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
Prepare Training Data,0
Train the model,0
Prepare the Testing data,0
predict,0
check output shape,0
new object of UNet to test if loading the model results in same predictions,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
Create a dataset and an input function for processing it.,0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"frag2_z = np.random.rand(N_atoms, 3)",0
"For simplicity, let's assume both molecules have same number of",0
atoms.,0
Creates a set of dummy features that contain the coordinate and,0
neighbor-list features required by the AtomicConvModel.,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
arbitrary label,0
Run a fitting operation,0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
"If we don't specify the initial state, it should default to zeros.",0
Explicitly specifying the zero state should give the same result.,0
Specifying a different initial state should produce a different result.,0
We should get the same result with either predict_on_batch() or __call__().,0
Take a tiny step in the direction of s and see if the output changes by,0
the expected amount.,0
Test for correct value return (normal mode),0
Test for shapes (normal mode),0
Test for correct value return (eager mode),0
Test for shape (eager mode),0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Layer is wrapper around embedding lookup, tested that then",0
Expected output,0
Create a dataset with three tasks.  The first two tasks each depend only,0
on half the features.  The third task depends on all of them.,0
Create an OntologyModel.  Two leaf nodes contain half the features.,0
Train the model on the datase.,0
It should have learned to predict all of the tasks accurately.,0
"In addition, it should be able to predict the first task based only on the",0
"first leaf node, and the second task based only on the second leaf node.",0
Create a dataset with three tasks.  The first two tasks each depend only,0
on half the features.  The third task depends on all of them.,0
Create an OntologyModel.  Two leaf nodes contain half the features.,0
Train the model on the datase.,0
It should have learned to predict all of the tasks accurately.,0
"In addition, it should be able to predict the first task based only on the",0
"first leaf node, and the second task based only on the second leaf node.",0
Here are mappings for just a few yeast genes.,0
"Build the ontology, then see if it looks correct.",0
Should be able to call fit twice without failure.,0
# TODO(rbharath): Transform these into useful weights.,0
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
# TODO(rbharath): Add a test with per-class weighting.,1
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
Prepare Training Data,0
Train the model,0
Prepare the Testing data,0
predict,0
check output shape,0
new object of ResNet to test if loading the model results in same predictions,0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create the model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate results,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Construct layers for all nodes.,0
Create the loss function.,0
Create inputs for the features.,0
Create inputs for the children.,0
Concatenate all inputs together.,0
Create the output.,0
"If necessary, download the file defining the ontology.",0
Parse the ontology definition and create a list of terms.,0
Create OntologyNode objects for all the terms.,0
"Assign parent-child relationships between nodes, and identify root nodes.",0
Create a single root node that combines the three GO roots.,0
Assign features to nodes.,0
Count the number of features within each node.  Eliminate nodes with too few,0
features and set the number of outputs for each one.,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Make a copy of the discriminator that takes each generator's output as,0
its input.,0
Make a list of all layers in the generators and discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create submodels for training the generators and discriminators.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Returns:,0
Build placeholders,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultitaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def MultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultitaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
Transform SMILES sequence to integers,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
TODO: Turning off queue for now. Safe to re-activate?,1
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
from deepchem.molnet.run_benchmark_low_data import run_benchmark_low_data,0
Featurize qm9 dataset,0
TODO: Check for this,1
Download files if they don't exist,0
Featurize the KINASE dataset,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ######,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
No tasks since no labels provided.,0
For now images are loaded directly by ImageLoader,0
Load Sweetlead dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize BBBC001 dataset,0
Featurize Images into NumpyArrays,0
Load text file with labels,0
Strip the first line which holds field labels,0
Format is: Image_name count1 count2,0
This is kludgy way to add y to dataset. Can be done better?,1
Featurize BBBC002 dataset,0
Featurize Images into NumpyArrays,0
Load text file with labels,0
Strip the first line which holds field labels,0
Format is: Image_name count1 count2,0
This is kludgy way to add y to dataset. Can be done better?,1
Featurize TOXCAST dataset,0
Initialize transformers,0
Download files if they don't exist,0
Featurizing datasets,0
Missing entry removal,0
Shuffle the training data,0
Apply transformations,0
#### TIMING ###########,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
TODO: Check if anything needs to be added,1
Featurize the FACTORS dataset,0
Shuffle the training data,0
Apply transformations,0
######### TIMING ################,0
Most reaction dataset ML tasks train the prediction of products from,0
"ractants. Both of these are contained in the rxn object that is output,",0
"so there is no ""tasks"" field.",0
DeepChem currently has no transformers for reaction data,0
Download USPTO dataset,0
Unzip,0
Unzipped file is a tap seperated values file (despite the .txt),0
The first element in the row is the reaction smarts,0
"Sometimes smarts have extraneous information at end of form """,0
"|f:0"" that causes parsing to fail. Not sure what this information",0
"is, but just ignoring for now.",0
Make up dummy labels since DiskDataset.from_numpy doesn't allow,0
creation from just features for now.,0
TODO: This dataset isn't saved to disk so reload doesn't happen.,1
Featurize hiv dataset,0
Initialize transformers,0
Extract locations of data,0
Extract labels,0
Skip comment lines,0
Lines have format,0
"PDB code, resolution, release year, -logKd/Ki, Kd/Ki, reference, ligand name",0
"The base-10 logarithm, -log kd/pk",0
Featurize Data,0
"Pulled from PDB files. For larger datasets with more PDBs, would use",0
max num atoms instead of exact.,0
Cutoff in angstroms,0
Cutoff in angstroms,0
Delete labels for failing elements,0
No transformations of data,0
TODO(rbharath): This should be modified to contain a cluster split so,1
structures of the same protein aren't in both train/test,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load sider models now,0
Load sweetlead dataset now. Pass in dataset object and appropriate,0
transformers to predict functions,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load QM7 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Batch size of models,0
Fit models,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating postives and negatives so each batch will have,0
equal numbers of both.,0
Create the model to train.  We use a simple fully connected network with,0
one hidden layer.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load SAMPL(FreeSolv) dataset,0
Define metric,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
plt.show(),0
"run_benchmark(FILE, DEEPCHEM_DIR)",0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Create duplicate placeholders for meta-optimization.,0
Create the loss function for meta-optimization.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
"(X, y, w, ids)",0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset and have it create an Iterator.,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
(ytz): this skips everything except possibly the last shard,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 5 (ATCGN).,0
"There is one ""image channel"".",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
extracting validation set of MNIST for testing the DataTransforms,0
extract only the images (no need of the labels),0
reshaping the vector to image,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check Blurring,0
Check rotation,0
Some more test cases for flip,0
Check flip,0
Check Scales,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
The label encoder is given characters for ACGTN,0
Peak at the first sequence to get the length of the sequence.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
TODO: mol should be always sanitized when charges are calculated,1
can't change it now because it would break a lot of examples,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
One sequence has length longer than others. This should throw a,0
ValueError.,0
Test it's possible to load a sequence with an aribrary alphabet from a fasta file.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
define methods to calculate available flat features,0
all methods (flat and voxel) must have the same API:,0
"f(prot_xyz, prot_rdk, lig_xyz, lig_rdk, distances) -> list of np.ndarrays",0
define methods to calculate available voxel features,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
some users might try to read smiles with this function,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
################### Compatibility imports for renamed TensorGraph models. Remove below with DeepChem 3.0. ####################,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
Calculate what the new shape will be.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
Generate the nb_affine weights and biases,0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, W_list,",0
b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
## Performs computations,0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
self.build(),0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
check that there isnt just one or zero inputs,0
create subspaces,0
create the alpha learnable parameters,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
We do not need the mask because every graph has self.num_vertices vertices now,0
So the Tensor has known dimensions,0
Add in features,0
Add in labels,0
Add in all layers,0
The last layer is the output of the model,0
TODO(rbharath): Add in support for additional,1
losses.,0
TODO(rbharath): The TensorGraph can't be built until,1
fit is called since the shapes of features/labels,0
not specified. Need to figure out a good restoration,0
method for this use case.,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Tensorflow expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Extract atom_features,0
Add trainable weights,0
Extract atom_features,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
Arguments,0
Aliases.,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
In eager mode we want an optimizer and a function to compute the,0
gradient of the loss.,0
In graph mode we want a training operation.,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"TODO Once we drop Python 2 support, turn outputs into a proper keyword arg",1
instead of using the **kwargs hack.,1
Gather results for each output,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"If only one output, just return array",0
"In eager mode, we need to execute every layer once to ensure its variables",0
have been created.,0
"We can't execute Input layers in eager mode, since they would try",0
to create placeholders.  Instead create a tensor of the correct,0
size and type.,0
Build the layers.,0
Initialize variables.,0
In graph mode we need to create the computation graph.,0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Check the inputs.,0
Define a function that recursively creates tensors from layers.,0
Define the model function.,0
Define the inputs.,0
"Create the correct outputs, based on the mode.",0
Create the Estimator.,0
Add or remove dimensions of size 1 to match the shape of the layer.,0
Should we keep a separate global step count for each submodel?,0
Add the input features.,0
Weight decay not activated,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"But if we specify a different starting state, that should produce a",0
different result.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
TODO What should shape[1] be?  It's not documented.,1
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"TODO What should the output shape be?  It's not documented, and there",1
are no other test cases for it.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
"Creating a second layer should produce different results, since it has",0
different random weights.,0
But evaluating the first layer again should produce the same result as before.,0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
"If we don't specify the initial state, it should default to zeros.",0
Explicitly specifying the zero state should give the same result.,0
Specifying a different initial state should produce a different result.,0
We should get the same result with either predict_on_batch() or __call__().,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
Should be able to call fit twice without failure.,0
# TODO(rbharath): Transform these into useful weights.,0
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
# TODO(rbharath): Add a test with per-class weighting.,1
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create the model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
Evaluate the model.,0
Create a dataset and an input function for processing it.,0
Create a TensorGraph model.,0
Create an estimator from it.,0
Train the model.,0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Predict the output and uncertainty.,0
Fit trained model,0
Eval model on train,0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Make a copy of the discriminator that takes each generator's output as,0
its input.,0
Make a list of all layers in the generators and discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create submodels for training the generators and discriminators.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
Create a dataset and an input function for processing it.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Returns:,0
Build placeholders,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
################### Deprecation warnings for renamed TensorGraph models ####################,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultitaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def MultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultitaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
Transform SMILES string to integer vectors,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
################### Deprecation warnings for renamed TensorGraph models ####################,0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Predict the output and uncertainty.,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultitaskDNN model,0
Building tensorflow robust MultitaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
from deepchem.molnet.run_benchmark_low_data import run_benchmark_low_data,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Load Sweetlead dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load SWEET dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Set some global variables up top,0
removes directory if present -- warning,0
default split is 80-10-10 train-valid-test split,0
Fit Logistic Regression models,0
Fit Logistic Regression models,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
"transformers = [dc.trans.NormalizationTransformer(transform_X=True, dataset=train_dataset), dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating postives and negatives so each batch will have,0
equal numbers of both.,0
Create the model to train.  We use a simple fully connected network with,0
one hidden layer.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load SAMPL(FreeSolv) dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
References,0
Arguments,0
Aliases.,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveLayer(WeaveLayer):,0
""""""" Alternate implementation of weave module",0
"same variables, different graph structures",0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, pair_features, pair_split, atom_split, atom_to_pair]",0
,0
Parameters,0
----------,0
x: list,0
list of Tensors of form described above.,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
A: Tensor,0
Tensor of atom_features,0
P: Tensor,0
Tensor of pair_features,0
"""""""",0
# Add trainable weights,0
self.build(),0
,0
atom_features = x[0],0
pair_features = x[1],0
,0
pair_split = x[2],0
atom_to_pair = x[4],0
,0
"AA = tf.matmul(atom_features, self.W_AA) + self.b_AA",0
AA = self.activation(AA),0
"PA = tf.matmul(pair_features, self.W_PA) + self.b_PA",0
PA = self.activation(PA),0
"PA = tf.segment_sum(PA, pair_split)",0
,0
"A = tf.matmul(tf.concat([AA, PA], 1), self.W_A) + self.b_A",0
A = self.activation(A),0
,0
if self.update_pair:,0
AP_ij = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, atom_to_pair),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ij = self.activation(AP_ij),0
AP_ji = tf.matmul(,0
tf.reshape(,0
"tf.gather(atom_features, tf.reverse(atom_to_pair, [1])),",0
"[-1, 2 * self.n_atom_input_feat]), self.W_AP) + self.b_AP",0
AP_ji = self.activation(AP_ji),0
,0
"PP = tf.matmul(pair_features, self.W_PP) + self.b_PP",0
PP = self.activation(PP),0
"P = tf.matmul(tf.concat([AP_ij + AP_ji, PP], 1), self.W_P) + self.b_P",0
P = self.activation(P),0
else:,0
P = pair_features,0
,0
"return A, P",0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class WeaveConcat(Layer):,0
""""""""" Concat a batch of molecules into a batch of atoms",0
"""""""",0
,0
"def __init__(self,",0
"batch_size,",0
"n_atom_input_feat=50,",0
"n_output=128,",0
"init='glorot_uniform',",0
"activation='tanh',",0
**kwargs):,0
"""""""",0
Parameters,0
----------,0
batch_size: int,0
number of molecules in a batch,0
"n_atom_input_feat: int, optional",0
Number of features for each atom in input.,0
"n_output: int, optional",0
Number of output features for each atom(concatenated),0
"init: str, optional",0
Weight initialization for filters.,0
"activation: str, optional",0
Activation function applied,0
,0
"""""""",0
self.batch_size = batch_size,0
self.n_atom_input_feat = n_atom_input_feat,0
self.n_output = n_output,0
self.init = initializations.get(init)  # Set weight initialization,0
self.activation = activations.get(activation)  # Get activations,0
"super(WeaveConcat, self).__init__(**kwargs)",0
,0
def build(self):,0
"""""""""Construct internal trainable weights.",0
"""""""",0
,0
"self.W = self.init([self.n_atom_input_feat, self.n_output])",0
self.b = model_ops.zeros(shape=[,0
"self.n_output,",0
]),0
,0
self.trainable_weights = self.W + self.b,0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_mask]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of concatenated atom features,0
"""""""",0
self.build(),0
atom_features = x[0],0
atom_masks = x[1],0
"A = tf.split(atom_features, self.batch_size, axis=0)",0
A_mask = tf.split(,0
"tf.cast(atom_masks, dtype=tf.bool), self.batch_size, axis=0)",0
outputs = tf.concat(,0
"[tf.boolean_mask(A[i], A_mask[i]) for i in range(len(A))], axis=0)",0
"outputs = tf.matmul(outputs, self.W) + self.b",0
outputs = self.activation(outputs),0
return outputs,0
TODO(rbharath): This class does not yet have a,1
"TensorGraph equivalent, but one may not be required.",0
"Commented out for now, remove if OK.",0
class AlternateWeaveGather(WeaveGather):,0
"""""""Alternate implementation of weave gather layer",0
corresponding to AlternateWeaveLayer,0
"""""""",0
,0
"def call(self, x, mask=None):",0
"""""""Execute this layer on input tensors.",0
,0
"x = [atom_features, atom_split]",0
,0
Parameters,0
----------,0
x: list,0
Tensors as listed above,0
"mask: bool, optional",0
Ignored. Present only to shadow superclass call() method.,0
,0
Returns,0
-------,0
outputs: Tensor,0
Tensor of molecular features,0
"""""""",0
# Add trainable weights,0
self.build(),0
outputs = x[0],0
atom_split = x[1],0
,0
if self.gaussian_expand:,0
outputs = self.gaussian_histogram(outputs),0
,0
"output_molecules = tf.segment_sum(outputs, atom_split)",0
,0
if self.gaussian_expand:,0
"output_molecules = tf.matmul(output_molecules, self.W) + self.b",0
output_molecules = self.activation(output_molecules),0
return output_molecules,0
Each directory holds a range of assay results,0
Just write NA,0
"Now, write out the results csv, going line by line through all molecule results",0
printing the mol_id,0
printing the SMILES,0
Now gzip it,0
Now remove the intermediate csv,0
First download all SDF files. We need these to get smiles,0
Next download all Bioassays,0
RDKit consistently hangs when trying to read this file,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
from simdna import simulations,0
define layer out functions,0
get layer outputs for a positive simulation example,0
plot layer outputs,0
highlight motif sites,0
get a positive and a negative example from the simulation data,0
"get motif scores, ISM scores, and DeepLIFT scores",0
get motif site locations,0
organize legends,0
plot scores and highlight motif site locations,0
initialize fwd and reverse scores to -infinity,0
"cross-correlate separately for each base,",0
for both the PSSM and its reverse complement,0
sum over the bases,0
take max of fwd and reverse scores at each position,0
return 1D view of sequence characters,0
class SequenceDNN(Model):,0
"""""""",0
Sequence DNN models.,0
,0
Parameters,0
----------,0
"seq_length : int, optional",0
length of input sequence.,0
"keras_model : instance of keras.models.Sequential, optional",0
seq_length or keras_model must be specified.,0
"num_tasks : int, optional",0
number of tasks. Default: 1.,0
num_filters : list[int] | tuple[int],0
"number of convolutional filters in each layer. Default: (15,).",0
conv_width : list[int] | tuple[int],0
"width of each layer's convolutional filters. Default: (15,).",0
pool_width : int,0
width of max pooling after the last layer. Default: 35.,0
L1 : float,0
strength of L1 penalty.,0
dropout : float,0
dropout probability in every convolutional layer. Default: 0.,0
verbose: int,0
"Verbosity level during training. Valida values: 0, 1, 2.",0
,0
Returns,0
-------,0
Compiled DNN model.,0
"""""""",0
,0
"def __init__(self,",0
"seq_length=None,",0
"keras_model=None,",0
"use_RNN=False,",0
"num_tasks=1,",0
"num_filters=(15, 15, 15),",0
"conv_width=(15, 15, 15),",0
"pool_width=35,",0
"GRU_size=35,",0
"TDD_size=15,",0
"L1=0,",0
"dropout=0.0,",0
"num_epochs=100,",0
verbose=1):,0
self.num_tasks = num_tasks,0
self.num_epochs = num_epochs,0
self.verbose = verbose,0
self.train_metrics = [],0
self.valid_metrics = [],0
if keras_model is not None and seq_length is None:,0
self.model = keras_model,0
self.num_tasks = keras_model.layers[-1].output_shape[-1],0
elif seq_length is not None and keras_model is None:,0
self.model = Sequential(),0
assert len(num_filters) == len(conv_width),0
"for i, (nb_filter, nb_col) in enumerate(zip(num_filters, conv_width)):",0
conv_height = 4 if i == 0 else 1,0
self.model.add(,0
Convolution2D(,0
"nb_filter=nb_filter,",0
"nb_row=conv_height,",0
"nb_col=nb_col,",0
"activation='linear',",0
"init='he_normal',",0
"input_shape=(1, 4, seq_length),",0
"W_regularizer=l1(L1),",0
b_regularizer=l1(L1))),0
self.model.add(Activation('relu')),0
self.model.add(Dropout(dropout)),0
"self.model.add(MaxPooling2D(pool_size=(1, pool_width)))",0
if use_RNN:,0
num_max_pool_outputs = self.model.layers[-1].output_shape[-1],0
"self.model.add(Reshape((num_filters[-1], num_max_pool_outputs)))",0
"self.model.add(Permute((2, 1)))",0
"self.model.add(GRU(GRU_size, return_sequences=True))",0
"self.model.add(TimeDistributedDense(TDD_size, activation='relu'))",0
self.model.add(Flatten()),0
self.model.add(Dense(output_dim=self.num_tasks)),0
self.model.add(Activation('sigmoid')),0
"self.model.compile(optimizer='adam', loss='binary_crossentropy')",0
else:,0
raise ValueError(,0
"""Exactly one of seq_length or keras_model must be specified!"")",0
,0
"def train(self,",0
"X,",0
"y,",0
"validation_data,",0
"early_stopping_metric='Loss',",0
"early_stopping_patience=5,",0
save_best_model_to_prefix=None):,0
if y.dtype != bool:,0
"assert set(np.unique(y)) == {0, 1}",0
y = y.astype(bool),0
multitask = y.shape[1] > 1,0
if not multitask:,0
num_positives = y.sum(),0
num_sequences = len(y),0
num_negatives = num_sequences - num_positives,0
if self.verbose >= 1:,0
print('Training model (* indicates new best result)...'),0
"X_valid, y_valid = validation_data",0
early_stopping_wait = 0,0
best_metric = np.inf if early_stopping_metric == 'Loss' else -np.inf,0
"for epoch in range(1, self.num_epochs + 1):",0
self.model.fit(,0
"X,",0
"y,",0
"batch_size=128,",0
"nb_epoch=1,",0
class_weight={,0
"True: num_sequences / num_positives,",0
False: num_sequences / num_negatives,0
"} if not multitask else None,",0
verbose=self.verbose >= 2),0
"epoch_train_metrics = self.test(X, y)",0
"epoch_valid_metrics = self.test(X_valid, y_valid)",0
self.train_metrics.append(epoch_train_metrics),0
self.valid_metrics.append(epoch_valid_metrics),0
if self.verbose >= 1:,0
print('Epoch {}:'.format(epoch)),0
print('Train {}'.format(epoch_train_metrics)),0
"print('Valid {}'.format(epoch_valid_metrics), end='')",0
current_metric = epoch_valid_metrics[early_stopping_metric].mean(),0
if (early_stopping_metric == 'Loss') == (current_metric <= best_metric):,0
if self.verbose >= 1:,0
print(' *'),0
best_metric = current_metric,0
best_epoch = epoch,0
early_stopping_wait = 0,0
if save_best_model_to_prefix is not None:,0
self.save(save_best_model_to_prefix),0
else:,0
if self.verbose >= 1:,0
print(),0
if early_stopping_wait >= early_stopping_patience:,0
break,0
early_stopping_wait += 1,0
if self.verbose >= 1:,0
print('Finished training after {} epochs.'.format(epoch)),0
if save_best_model_to_prefix is not None:,0
"print(""The best model's architecture and weights (from epoch {0}) """,0
'were saved to {1}.arch.json and {1}.weights.h5'.format(,0
"best_epoch, save_best_model_to_prefix))",0
,0
"def predict(self, X):",0
"return self.model.predict(X, batch_size=128, verbose=False)",0
,0
def get_sequence_filters(self):,0
"""""""",0
Returns 3D array of 2D sequence filters.,0
"""""""",0
return self.model.layers[0].get_weights()[0].squeeze(axis=1),0
,0
"def deeplift(self, X, batch_size=200):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) deeplift score array.",0
"""""""",0
assert len(np.shape(X)) == 4 and np.shape(X)[1] == 1,0
from deeplift.conversion import keras_conversion as kc,0
,0
# convert to deeplift model and get scoring function,0
"deeplift_model = kc.convert_sequential_model(self.model, verbose=False)",0
score_func = deeplift_model.get_target_contribs_func(,0
find_scores_layer_idx=0),0
# use a 40% GC reference,0
"input_references = [np.array([0.3, 0.2, 0.2, 0.3])[None, None, :, None]]",0
# get deeplift scores,0
"deeplift_scores = np.zeros((self.num_tasks,) + X.shape)",0
for i in range(self.num_tasks):,0
deeplift_scores[i] = score_func(,0
"task_idx=i,",0
"input_data_list=[X],",0
"batch_size=batch_size,",0
"progress_update=None,",0
input_references_list=input_references),0
return deeplift_scores,0
,0
"def in_silico_mutagenesis(self, X):",0
"""""""",0
"Returns (num_task, num_samples, 1, num_bases, sequence_length) ISM score array.",0
"""""""",0
"mutagenesis_scores = np.empty(X.shape + (self.num_tasks,), dtype=np.float32)",0
wild_type_predictions = self.predict(X),0
"wild_type_predictions = wild_type_predictions[:, np.newaxis, np.newaxis,",0
np.newaxis],0
"for sequence_index, (sequence, wild_type_prediction) in enumerate(",0
"zip(X, wild_type_predictions)):",0
mutated_sequences = np.repeat(,0
"sequence[np.newaxis], np.prod(sequence.shape), axis=0)",0
# remove wild-type,0
arange = np.arange(len(mutated_sequences)),0
horizontal_cycle = np.tile(,0
"np.arange(sequence.shape[-1]), sequence.shape[-2])",0
"mutated_sequences[arange, :, :, horizontal_cycle] = 0",0
# add mutant,0
vertical_repeat = np.repeat(,0
"np.arange(sequence.shape[-2]), sequence.shape[-1])",0
"mutated_sequences[arange, :, vertical_repeat, horizontal_cycle] = 1",0
# make mutant predictions,0
mutated_predictions = self.predict(mutated_sequences),0
mutated_predictions = mutated_predictions.reshape(sequence.shape +,0
"(self.num_tasks,))",0
mutagenesis_scores[,0
sequence_index] = wild_type_prediction - mutated_predictions,0
"return np.rollaxis(mutagenesis_scores, -1)",0
,0
@staticmethod,0
"def _plot_scores(X, output_directory, peak_width, score_func, score_name):",0
from dragonn.plot import plot_bases_on_ax,0
scores = score_func(X).squeeze(,0
"axis=2)  # (num_task, num_samples, num_bases, sequence_length)",0
try:,0
os.makedirs(output_directory),0
except OSError:,0
pass,0
num_tasks = len(scores),0
"for task_index, task_scores in enumerate(scores):",0
"for sequence_index, sequence_scores in enumerate(task_scores):",0
# sequence_scores is num_bases x sequence_length,0
basewise_max_sequence_scores = sequence_scores.max(axis=0),0
plt.clf(),0
"figure, (top_axis, bottom_axis) = plt.subplots(2)",0
top_axis.plot(,0
"range(1,",0
"len(basewise_max_sequence_scores) + 1),",0
basewise_max_sequence_scores),0
top_axis.set_title('{} scores (motif highlighted)'.format(score_name)),0
peak_position = basewise_max_sequence_scores.argmax(),0
top_axis.axvspan(,0
"peak_position - peak_width,",0
"peak_position + peak_width,",0
"color='grey',",0
alpha=0.1),0
"peak_sequence_scores = sequence_scores[:, peak_position - peak_width:",0
peak_position + peak_width].T,0
# Set non-max letter_heights to zero,0
letter_heights = np.zeros_like(peak_sequence_scores),0
"letter_heights[np.arange(len(letter_heights)),",0
peak_sequence_scores.argmax(axis=1)] = \,0
basewise_max_sequence_scores[peak_position - peak_width :,0
peak_position + peak_width],0
"plot_bases_on_ax(letter_heights, bottom_axis)",0
bottom_axis.set_xticklabels(,0
tuple(,0
"map(str,",0
"np.arange(peak_position - peak_width,",0
peak_position + peak_width + 1)))),0
"bottom_axis.tick_params(axis='x', labelsize='small')",0
plt.xlabel('Position'),0
plt.ylabel('Score'),0
plt.savefig(,0
"os.path.join(output_directory, 'sequence_{}{}'.format(",0
"sequence_index, '_task_{}'.format(task_index)",0
if num_tasks > 1 else ''))),0
plt.close(),0
,0
"def plot_deeplift(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.deeplift,",0
score_name='DeepLift'),0
,0
"def plot_in_silico_mutagenesis(self, X, output_directory, peak_width=10):",0
self._plot_scores(,0
"X,",0
"output_directory,",0
"peak_width,",0
"score_func=self.in_silico_mutagenesis,",0
score_name='ISM'),0
,0
"def plot_architecture(self, output_file):",0
from dragonn.visualize_util import plot as plot_keras_model,0
"plot_keras_model(self.model, output_file, show_shape=True)",0
,0
"def save(self, save_best_model_to_prefix):",0
arch_fname = save_best_model_to_prefix + '.arch.json',0
weights_fname = save_best_model_to_prefix + '.weights.h5',0
"open(arch_fname, 'w').write(self.model.to_json())",0
"self.model.save_weights(weights_fname, overwrite=True)",0
,0
@staticmethod,0
"def load(arch_fname, weights_fname=None):",0
model_json_string = open(arch_fname).read(),0
sequence_dnn = SequenceDNN(keras_model=model_from_json(model_json_string)),0
if weights_fname is not None:,0
sequence_dnn.model.load_weights(weights_fname),0
return sequence_dnn,0
create temporary fasta files,0
run command,0
remove fasta files,0
write test fasta file,0
test gkmsvm,0
get classification results,0
This SDF file fails to parse with RDKit on Ubuntu 16.04,0
"Using canonical smiles for glycine, as in original research paper",0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
Add the input features.,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
plt.show(),0
"run_benchmark(FILE, DEEPCHEM_DIR)",0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Create duplicate placeholders for meta-optimization.,0
Create the loss function for meta-optimization.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
TODO(rbharath): This has been a major source of bugs. Is there a more,1
robust characterization of which metrics require class-probs and which,0
don't?,0
Reshape to handle 1-d edge cases,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
"(X, y, w, ids)",0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
Retrieve the first sample so we can determine the dtypes.,0
Create a Tensorflow Dataset and have it create an Iterator.,0
The -1 indicates that y will be reshaped to have length -1,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
(ytz): this skips everything except possibly the last shard,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Protect against generator exhaustion,0
This ensures tasks are consistent for all datasets,0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
example.fasta contains 3 sequences each of length 58.,0
The one-hot encoding turns base-pairs into vectors of length 4.,0
"There is one ""image channel"")",0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
approx 1/15! chance of equality,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Check that we have all the data in,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
depends on Python version,0
The label encoder is given characters for ACGTN,0
"These are transformed in 0, 1, 2, 3, 4 in input sequence",0
TODO(rbharath): Unlike the DRAGONN implementation from which this,1
"was ported, I couldn't transform the ""ACGT..."" strings into",0
integers all at once. Had to do one at a time. Might be worth,0
figuring out what's going on under the hood.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
TODO: mol should be always sanitized when charges are calculated,1
can't change it now because it would break a lot of examples,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
One sequence has length longer than others. This should throw a,0
value error.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
define methods to calculate available flat features,0
all methods (flat and voxel) must have the same API:,0
"f(prot_xyz, prot_rdk, lig_xyz, lig_rdk, distances) -> list of np.ndarrays",0
define methods to calculate available voxel features,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
If uses use_chirality,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
some users might try to read smiles with this function,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"H(x), with same number of input and output channels",0
"T(x), with same number of input and output channels",0
Calculate what the new shape will be.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, self.W_list,",0
self.b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
self.build(),0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
check that there isnt just one or zero inputs,0
create subspaces,0
create the alpha learnable parameters,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
We do not need the mask because every graph has self.num_vertices vertices now,0
So the Tensor has known dimensions,0
Calling fit() for first time,0
Add in features,0
Add in labels,0
Add in all layers,0
The last layer is the output of the model,0
TODO(rbharath): Add in support for additional,1
losses.,0
TODO(rbharath): The TensorGraph can't be built until,1
fit is called since the shapes of features/labels,0
not specified. Need to figure out a good restoration,0
method for this use case.,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
"Results is of shape (n_samples, n_tasks, n_classes)",0
"Results is of shape (n_samples, n_tasks)",0
Add the input features.,0
Add the shared dense layers,0
Add task-specific bypass layers,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
"Results is of shape (n_samples, n_tasks, n_classes)",0
"retval is of shape (n_samples, n_tasks)",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Similarity values,0
Labels for all top K similar samples,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Extract atom_features,0
Add trainable weights,0
Extract atom_features,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
Arguments,0
Aliases.,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
Gather results for each output,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
"If only one output, just return array",0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Should we keep a separate global step count for each submodel?,0
Add the input features.,0
Weight decay not activated,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
"Results is of shape (n_samples, n_tasks, 1)",0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
See if it has done a plausible job of learning the distribution.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
Should be able to call fit twice without failure.,0
# TODO(rbharath): Transform these into useful weights.,0
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
# TODO(rbharath): Add a test with per-class weighting.,1
#class_weight={,0
"#    True: num_sequences / num_positives,",0
#    False: num_sequences / num_negatives,0
"#} if not multitask else None,",0
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Test it out.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Create the inputs.,0
Create the generators.,0
Create the discriminators.,0
Make a copy of the discriminator that takes each generator's output as,0
its input.,0
Make a list of all layers in the generators and discriminators.,0
Compute the loss functions.,0
Create learnable weights for the generators and discriminators.,0
Compute the weighted errors,0
Add an entropy term to the loss.,0
Create submodels for training the generators and discriminators.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Gather results for each output,0
Recording the number of samples in the input batch,0
GraphConvTensorGraph constantly outputs batch_size number of,0
"results, only valid samples should be appended to final results",0
"If only one output, just return array",0
Returns:,0
Concatenates along 0-th dimension,0
Returns:,0
Build placeholders,0
w_b act as the indicator of unique samples in the batch,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
MPNN only accept padded input,0
MPNN only accept padded input,0
Extract number of unique samples in the batch from w_b,0
Only fetch the first set of unique samples,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultiTaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def MultiTaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultiTaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
TODO(rbharath): This model only supports one-conv layer. Extend,1
so that conv layers of greater depth can be implemented.,0
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
Transform SMILES string to integer vectors,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Building tensorflow MultiTaskDNN model,0
Building tensorflow robust MultiTaskDNN model,0
Building scikit logistic regression model,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Building scikit random forest model,0
Building scikit learn Kernel SVM model,0
Building xgboost classification model,0
Remove token for paddings,0
Building scikit random forest model,0
Building scikit learn Kernel Ridge Regression model,0
Building scikit learn Kernel Ridge Regression model,0
Building xgboost regression model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
from deepchem.molnet.run_benchmark_low_data import run_benchmark_low_data,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
"Record the actions, converting to one-hot if necessary.",0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Run the algorithm.,0
Save a file checkpoint.,0
Build the tree.,0
Compute the final probabilities and expected reward.,0
Mark this node as terminal,0
Expand this node.,0
Select the next action to perform.,0
Recursively build the tree.,0
Update statistics for this node.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
The state consists of two numbers: a current value and a target value.,0
The policy just needs to learn to output the target value (or at least,0
move toward it).,0
A simple policy with no hidden layers.,0
Optimize it.,0
Try running it and see if it reaches the target,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new MCTS object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Evaluate performances with different training set fraction,0
Datasets and models used in the benchmark test,0
Uncomment the two lines below if hyper_parameters are provided,0
"with open(os.path.join(out_path, dataset + model + '.pkl'), 'r') as f:",0
hyper_parameters = pickle.load(f),0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load SWEET dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Set some global variables up top,0
removes directory if present -- warning,0
default split is 80-10-10 train-valid-test split,0
Fit Logistic Regression models,0
Fit Logistic Regression models,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Featurize qm9 dataset,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize Tox21 dataset,0
Initialize transformers,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm7 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
"transformers = [dc.trans.NormalizationTransformer(transform_X=True, dataset=train_dataset), dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm8 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Load dataset,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.WeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Featurize Delaney dataset,0
Initialize transformers,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating postives and negatives so each batch will have,0
equal numbers of both.,0
Create the model to train.  We use a simple fully connected network with,0
one hidden layer.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
Note sensitivity = recall,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Featurize hiv dataset,0
Initialize transformers,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Featurize SAMPL dataset,0
Initialize transformers,0
Load clintox dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Load PDBBind dataset,0
Define featurizers,0
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
Featurize Dataset,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"model.old_fit(train_dataset, nb_epoch=nb_epoch)",0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Featurize HOPV dataset,0
Initialize transformers,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Create duplicate placeholders for meta-optimization.,0
Create the loss function for meta-optimization.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
References,0
Arguments,0
Aliases.,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
"WARNING: Does not work for Batch Size 1! If batch_size = 1, then use reduce_sum!",0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Store the summed atoms by degree,0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
TODO(rbharath): It's not clear where nb_affine comes from.,1
Is there a solid explanation here?,0
Generate the nb_affine weights and biases,0
Add trainable weights,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
Extract nodes and membership,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
Extract nodes,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
r = self.r_init,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new aattention states,0
"def build(self, input_shape):",0
"_, support_input_shape = input_shape  #Unpack",0
n_feat = support_input_shape[1],0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Not sure if it helps to place the update here or later yet.  Will,0
decide,0
z = r,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
"return [x+p, z+q]",0
No other forget biases supported right now.,0
"def build(self, input_shape):",0
Taken from Keras code [citation needed],0
###################################################### DEBUG,0
"return o, [h, c]",0
###################################################### DEBUG,0
"self.b_fc = model_ops.zeros(shape=[self.n_embedding,])",0
distance_hidden = self.activation(distance_hidden),0
atom_features_hidden = self.activation(atom_features_hidden),0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
Extract atom_features,0
Basic features of every atom: (batch_size*max_atoms) * n_atom_features,0
calculation orders of graph: (batch_size*max_atoms) * max_atoms * max_atoms,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
"step i calculates the graph features for atoms of index `parents[:,i,0]`",0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
"represent the same atoms of `parents[:, :, 0]`,",0
different in that these index are positions in `atom_features`,0
"number of atoms in total, should equal `batch_size*max_atoms`",0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
last step generates graph features for all target atom,0
Add trainable weights,0
Extract atom_features,0
sum all graph outputs,0
Aliases.,0
TODO(rbharath): What does this line do?,1
TODO(rbharath): REMOVE GLOBAL VARS! BREAKS DEEPCHEM STYLE!,1
This dictionary holds a mapping {graph: learning_phase}.,0
A learning phase is a bool tensor used to run Keras models in,0
either train mode (learning_phase == 1) or test mode (learning_phase == 0).,0
else: assume learning phase is a placeholder tensor.,0
need broadcasting,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
These properties should have been set,0
"by the child class, as appropriate.",0
These properties should be set by the user via keyword arguments.,0
"note that 'input_dtype', 'input_shape' and 'batch_input_shape'",0
are only applicable to input layers: do not pass these keywords,0
to non-input layers.,0
In this case we will create an input layer,0
to insert before the current layer,0
Update self.losses,0
In case self.losses isn't settable,0
(i.e. it's a getter method).,0
In that case the `losses` property is,0
auto-computed and shouldn't be set.,0
Update self._per_input_updates,0
Updates indexed by None are unconditional,0
rather than input-dependent,0
outputs = to_list(self.call(x)),0
return outputs,0
TODO(rbharath): Keras uses a global var here to maintain,1
unique counts. This seems dangerous. How does tensorflow handle?,1
TODO(rbharath): Support this type of functional API.,1
If batch size not specified,0
Input shape,0
Output shape,0
References,0
Not Trainable,0
Not Trainable,0
need broadcasting,0
pick the normalized form of x corresponding to the training phase,0
sample-wise normalization,0
from deepchem.nn.model_ops import variable,0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Arguments,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
"Output should be of shape (?, nb_filter)",0
"Output should be of shape (batch_size, n_feat)",0
Try concatenating the two lists of placeholders,0
Try concatenating the two lists of placeholders,0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
TODO: add pi_stack and cation_pi to feature_types (it's not trivial,1
because they require sanitized molecules),0
"feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""],",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
TODO(rbharath): This has been a major source of bugs. Is there a more,1
robust characterization of which metrics require class-probs and which,0
don't?,0
Reshape to handle 1-d edge cases,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
The -1 indicates that y will be reshaped to have length -1,0
"Set labels to be zero, with zero weights",0
Load obsolete format -> save in new format,0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"(ytz): Depending on the application, thread-based pools may be faster",0
"than process based pools, since process based pools need to pickle/serialize",0
"objects as an extra overhead. Also, as hideously as un-thread safe this looks,",0
we're actually protected by the GIL.,0
(ytz): this skips everything except possibly the last shard,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
special case to test,0
deterministic,0
non-deterministic,0
we don't know the order in which the shards are iterated in.,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
TODO: mol should be always sanitized when charges are calculated,1
can't change it now because it would break a lot of examples,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
if ring is aromatic,0
"save its indices, center, and normal",0
remember protein-ligand pairs we already counted,0
"if this pair is new, count atoms forming a contact",0
"if this pair is new, count atoms forming a contact",0
if ring from mol1 is aromatic,0
...and atom from mol2 is a cation,0
if angle and distance are correct,0
count atoms forming a contact,0
find interacting rings from protein and cations from ligand,0
find interacting cations from protein and rings from ligand,0
merge counters,0
TODO(LESWING),1
check if user tries to set removed arguments,0
list of features that require sanitized molecules,0
not implemented featurization types,1
default values,0
update with cutoffs specified by the user,0
define methods to calculate available flat features,0
all methods (flat and voxel) must have the same API:,0
"f(prot_xyz, prot_rdk, lig_xyz, lig_rdk, distances) -> list of np.ndarrays",0
define methods to calculate available voxel features,0
"each entry is a tuple (is_flat, feature_name)",0
list of features that cannot be calculated with specified parameters,0
this list is used to define <flat/voxel/all>_combined subset,0
parse provided feature types,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
"Since ConvMol is an object and not a numpy array, need to set dtype to",0
object.,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
some users might try to read smiles with this function,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
check if correct distance metric was used,0
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
simple flat ring,0
load and sanitize two real molecules,0
FIXME might break with different version of rdkit,1
FIXME might break with different version of rdkit,1
parallel normals,0
perpendicular normals,0
too far away,0
perpendicular normals,0
parallel normals,0
too far away,0
order of the molecules shouldn't matter,0
with this criteria we should find both types of stacking,0
parallel normals,0
perpendicular normals,0
too far away,0
"TODO find better example, currently dicts are empty",1
"TODO find better example, currently dicts are empty",1
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
test if default parameters work,0
check if use-case from examples works,0
test if input is flattened when flat features are used,0
test voxel features,0
test flat features,0
check if aromatic features are ignores if sanitize=False,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
Path to save checkpoint files,0
first layer in model: check that it is an input layer,0
Add losses to graph,0
Loss for each batch element,0
Loss should be a float,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
TODO(rbharath): Don't support example weighting yet.,1
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"H(x), with same number of input and output channels",0
"T(x), with same number of input and output channels",0
Calculate what the new shape will be.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, self.W_list,",0
self.b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
self.build(),0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
check that there isnt just one or zero inputs,0
create subspaces,0
create the alpha learnable parameters,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
We do not need the mask because every graph has self.num_vertices vertices now,0
So the Tensor has known dimensions,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Extract atom_features,0
Add trainable weights,0
Extract atom_features,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
Gather results for each output,0
"If only one output, just return array",0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Create the inputs.,0
Create the generator.,0
Create the discriminator.,0
Make a copy of the discriminator that takes the generator's output as,0
its input.,0
Make a list of all layers in the generator and discriminator.,0
Create submodels for training the generator and discriminator.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Gather results for each output,0
Recording the number of samples in the input batch,0
GraphConvTensorGraph constantly outputs batch_size number of,0
"results, only valid samples should be appended to final results",0
"If only one output, just return array",0
Returns:,0
Concatenates along 0-th dimension,0
Returns:,0
Build placeholders,0
w_b act as the indicator of unique samples in the batch,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
MPNN only accept padded input,0
MPNN only accept padded input,0
Extract number of unique samples in the batch from w_b,0
Only fetch the first set of unique samples,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultiTaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def tensorGraphMultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultiTaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
Transform SMILES string to integer vectors,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply an attention lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .85,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply a residual lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
-*- coding: utf-8 -*-,0
"due to the different shape of weight(ndims=2) and bias(ndims=1),",0
will using this version for logreg,0
exclude bias variables,0
setting up n_tasks nodes(output nodes),0
label placeholders with size batch_size * 1,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
using self-defined regularization,0
adding output nodes of sigmoid function,0
"fix the size to be [?,1]",0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
"Results is of shape (n_samples, n_tasks, n_classes)",0
"retval is of shape (n_samples, n_tasks)",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building scikit learn Kernel SVM model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Initialize model folder,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Remove token for paddings,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building scikit learn Kernel Ridge Regression model,0
Loading hyper parameters,0
Building scikit learn Kernel Ridge Regression model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
Will raise a CalledProcessError if fails.,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load SWEET dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Set some global variables up top,0
removes directory if present -- warning,0
default split is 80-10-10 train-valid-test split,0
Fit Logistic Regression models,0
Fit Logistic Regression models,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Featurize qm9 dataset,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize Tox21 dataset,0
Initialize transformers,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm7 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
"transformers = [dc.trans.NormalizationTransformer(transform_X=True, dataset=train_dataset), dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Load QM8 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm8 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Load dataset,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
Set to higher values to get better numbers,0
======================================================================,0
"Run Benchmarks {GC-DNN, SVR, RF}",0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Only for debug!,0
Load Delaney dataset,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.WeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Featurize Delaney dataset,0
Initialize transformers,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Load the data.,0
"Toxcast has data on 6874 molecules and 617 tasks.  However, the data is very",0
sparse: most tasks do not include data for most molecules.  It also is very,0
"unbalanced: there are many more negatives than positives.  For each task,",0
create a list of alternating postives and negatives so each batch will have,0
equal numbers of both.,0
Create the model to train.  We use a simple fully connected network with,0
one hidden layer.,0
Define a MetaLearner describing the learning problem.,0
Run meta-learning on 80% of the tasks.,0
Validate on the remaining tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
replace with your own scratch directory,0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
"'ani_gdb_s03.h5',",0
"'ani_gdb_s04.h5',",0
"'ani_gdb_s05.h5',",0
"'ani_gdb_s06.h5',",0
"'ani_gdb_s07.h5',",0
'ani_gdb_s08.h5',0
Extract the data,0
Print the data,0
self-interaction energies taken from,0
https://github.com/isayev/ANI1_dataset README,0
flush once more at the end,0
"# For production, set nb_epoch to 100+",0
"print(""Train scores"")",0
print(train_scores),0
"print(""Minimization of a single test set structure:"")",0
"print(model.minimize_structure(coords, atomic_nums))",0
Written by Roman Zubatyuk and Justin S. Smith,0
Modified by Yutong Zhao to make python2 compatible,0
opening file,0
print(store_loc),0
print(type(v[0])),0
print(k),0
print(path),0
Number of conformations in each file increases exponentially.,0
Start with a smaller dataset before continuing. Use all of them,0
for production,0
Extract the data,0
Note sensitivity = recall,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Featurize hiv dataset,0
Initialize transformers,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Featurize SAMPL dataset,0
Initialize transformers,0
Load clintox dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Load PDBBind dataset,0
Define featurizers,0
"TODO(rbharath, enf, leswing): Figure out why pi_stack and cation_pi",1
reduce validation performance,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
Featurize Dataset,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"model.old_fit(train_dataset, nb_epoch=nb_epoch)",0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Featurize HOPV dataset,0
Initialize transformers,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
"Copied from the yt_project, commit e8fb57e",0
yt/doc/extensions/notebook_sphinxext.py,0
https://bitbucket.org/yt_analysis/yt/src/e8fb57e66ca42e26052dadf054a5c782740abec9/doc/extensions/notebook_sphinxext.py?at=yt,0
Almost completely re-written by Matthew Harrigan to use nbconvert v4,0
1. Uneval notebook,0
2. Python,0
3. HTML (execute first),0
Set per-cell timeout to 60 seconds,0
4. Eval'd notebook,0
Create link to notebook and script files,0
create notebook node,0
add dependency,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
Perform recursive modification to set css mime types.,0
Perform recursive modification to set js mime types.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
Record inputs.,0
Create the output directory if necessary.,0
Create duplicate placeholders for meta-optimization.,0
Create the loss function for meta-optimization.,0
"In the final loss, use different placeholders for all inputs so the loss will be",0
computed from a different batch.,0
Create variables for accumulating the gradients.,0
Create the optimizers for meta-optimization and task optimization.,0
Main optimization loop.,0
Do checkpointing.,0
This is a MetaLearner that learns to generate sine functions with variable,0
amplitude and phase.,0
Optimize it.,0
Test it out on some new tasks and see how it works.,0
Initially the model should do a bad job of fitting the sine function.,0
After one step of optimization it should do much better.,0
"Verify that we can create a new MAML object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
References,0
Arguments,0
Aliases.,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
"WARNING: Does not work for Batch Size 1! If batch_size = 1, then use reduce_sum!",0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Store the summed atoms by degree,0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
TODO(rbharath): It's not clear where nb_affine comes from.,1
Is there a solid explanation here?,0
Generate the nb_affine weights and biases,0
Add trainable weights,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
Extract nodes and membership,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
Extract nodes,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
r = self.r_init,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new aattention states,0
"def build(self, input_shape):",0
"_, support_input_shape = input_shape  #Unpack",0
n_feat = support_input_shape[1],0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Not sure if it helps to place the update here or later yet.  Will,0
decide,0
z = r,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
"return [x+p, z+q]",0
No other forget biases supported right now.,0
"def build(self, input_shape):",0
Taken from Keras code [citation needed],0
###################################################### DEBUG,0
"return o, [h, c]",0
###################################################### DEBUG,0
"self.b_fc = model_ops.zeros(shape=[self.n_embedding,])",0
distance_hidden = self.activation(distance_hidden),0
atom_features_hidden = self.activation(atom_features_hidden),0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
Extract atom_features,0
Basic features of every atom: (batch_size*max_atoms) * n_atom_features,0
calculation orders of graph: (batch_size*max_atoms) * max_atoms * max_atoms,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
"step i calculates the graph features for atoms of index `parents[:,i,0]`",0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
"represent the same atoms of `parents[:, :, 0]`,",0
different in that these index are positions in `atom_features`,0
"number of atoms in total, should equal `batch_size*max_atoms`",0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
last step generates graph features for all target atom,0
Add trainable weights,0
Extract atom_features,0
sum all graph outputs,0
Aliases.,0
TODO(rbharath): What does this line do?,1
TODO(rbharath): REMOVE GLOBAL VARS! BREAKS DEEPCHEM STYLE!,1
This dictionary holds a mapping {graph: learning_phase}.,0
A learning phase is a bool tensor used to run Keras models in,0
either train mode (learning_phase == 1) or test mode (learning_phase == 0).,0
else: assume learning phase is a placeholder tensor.,0
need broadcasting,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
These properties should have been set,0
"by the child class, as appropriate.",0
These properties should be set by the user via keyword arguments.,0
"note that 'input_dtype', 'input_shape' and 'batch_input_shape'",0
are only applicable to input layers: do not pass these keywords,0
to non-input layers.,0
In this case we will create an input layer,0
to insert before the current layer,0
Update self.losses,0
In case self.losses isn't settable,0
(i.e. it's a getter method).,0
In that case the `losses` property is,0
auto-computed and shouldn't be set.,0
Update self._per_input_updates,0
Updates indexed by None are unconditional,0
rather than input-dependent,0
outputs = to_list(self.call(x)),0
return outputs,0
TODO(rbharath): Keras uses a global var here to maintain,1
unique counts. This seems dangerous. How does tensorflow handle?,1
TODO(rbharath): Support this type of functional API.,1
If batch size not specified,0
Input shape,0
Output shape,0
References,0
Not Trainable,0
Not Trainable,0
need broadcasting,0
pick the normalized form of x corresponding to the training phase,0
sample-wise normalization,0
from deepchem.nn.model_ops import variable,0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Arguments,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
"Output should be of shape (?, nb_filter)",0
"Output should be of shape (batch_size, n_feat)",0
Try concatenating the two lists of placeholders,0
Try concatenating the two lists of placeholders,0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
"TODO(rbharath, enf): Figure out why pi_stack is slow and cation_pi",1
causes segfaults.,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
TODO(rbharath): This has been a major source of bugs. Is there a more,1
robust characterization of which metrics require class-probs and which,0
don't?,0
Reshape to handle 1-d edge cases,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
Only the first set of copy will be counted in training loss,0
The -1 indicates that y will be reshaped to have length -1,0
"Set labels to be zero, with zero weights",0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"TODO(rbharath): This happens in tests sometimes, but don't understand why?",1
Handle edge case.,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
"Get the reversed shape of z: (..., n_tasks, batch_size)",0
Find the task dimension of z,0
Prevent broadcasting on wrong dimension,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
TODO(LESWING),1
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
"In case of explicit hydrogen(QM8, QM9), avoid calling `GetTotalNumHs`",0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
Euclidean distance between atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
"Since ConvMol is an object and not a numpy array, need to set dtype to",0
object.,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
"Distance is either graph distance(True) or Euclidean distance(False,",0
only support datasets providing Cartesian coordinates),0
Set dtype,0
If includes explicit hydrogens,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
TODO test more formats for ligand,0
some users might try to read smiles with this function,0
adding hydrogens and charges is tested in dc.utils,0
3D vector with unit length,0
"very basic test, we check if rotations actually work in test_rotate_molecules",0
check if distances do not change,0
check if it works for molecules with different numbers of atoms,0
"random coords between 0 and 1, so the max possible distance in sqrt(2)",0
TODO test if dict contains smiles,1
check if results are the same if we provide precomputed distances,0
...but first check if we actually got two dicts,0
check if we get less features with smaller distance cutoff,0
ligands are typically small so all atoms might be present,0
check if using different ecfp_degree changes anything,0
TODO upperbound?,1
"20 points with coords between -5 and 5, centered at 0",0
indices are positive,0
coordinates were properly translated and scaled,0
for coordinates outside of the box function should properly transform them,0
to indices and warn the user,0
"TODO check if function warns. There is assertWarns method in unittest,",1
but it is not implemented in 2.7 and buggy in 3.5 (issue 29620),1
"20 points with coords between -5 and 5, centered at 0",0
3 pairs of indices,0
"protein is too big for the box, some features should be missing",0
whole ligand should fit in the box,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
dict is needed in case groups aren't strictly flattened or,0
hashed by something non-integer like,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
0 1 2 3 4 5 6 7 8 9,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
Path to save checkpoint files,0
first layer in model: check that it is an input layer,0
Add losses to graph,0
Loss for each batch element,0
Loss should be a float,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
TODO(rbharath): Don't support example weighting yet.,1
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
optimization to allow for tensorcontraction/broadcasted mmul,0
using a reshape trick. Note that the np and tf matmul behavior,0
differs when dealing with broadcasts,0
-*- coding: UTF-8 -*-,0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"H(x), with same number of input and output channels",0
"T(x), with same number of input and output channels",0
Calculate what the new shape will be.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, self.W_list,",0
self.b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
No other forget biases supported right now.,0
Taken from Keras code [citation needed],0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new attention states,0
Support set lstm,0
Test lstm,0
self.build(),0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
check that there isnt just one or zero inputs,0
create subspaces,0
create the alpha learnable parameters,0
"concatenate subspaces, reshape to size of original input, then stack",0
"such that out_tensor has shape (2,?,original_cols)",0
creates subspaces the same way it was done in AlphaShare,0
calculate squared Frobenius norm,0
"(TODO YTZ:) faster, less memory intensive way",1
"r = tf.reduce_sum(tf.square(coordinates), 2)",0
"r = tf.expand_dims(r, -1)",0
"inner = 2*tf.matmul(coordinates, tf.transpose(coordinates, perm=[0,2,1]))",0
"# inner = 2*tf.matmul(coordinates, coordinates, transpose_b=True)",0
"d = r - inner + tf.transpose(r, perm=[0,2,1])",0
d = tf.nn.relu(d) # fix numerical instabilities about diagonal,0
d = tf.sqrt(d) # does this have negative elements? may be unstable for diagonals,0
Calculate pairwise distance,0
Cutoff with threshold Rc,0
return d,0
tf.stack issues again...,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
We do not need the mask because every graph has self.num_vertices vertices now,0
So the Tensor has known dimensions,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
"Default message function: edge network, update function: GRU",0
more options to be implemented,0
Extract atom_features,0
Add trainable weights,0
Extract atom_features,0
Add another value(~-Inf) to prevent error in softmax,0
Model using this layer must set pad_batches=True,0
Perform one step of LSTM,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
"Don't let this thread get ahead of the enqueue thread, since if",0
"we try to read more batches than the total number that get queued,",0
this thread will hang indefinitely.,0
Gather results for each output,0
"If only one output, just return array",0
Ensure all training operators have been created.,0
Initialize variables.,0
"As a sanity check, make sure all tensors have the correct shape.",0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
The loss doesn't depend on any variables.,0
Set by variable constructor.,0
Set by set_variable_initial_values().,0
Optimize submodel 1.  This should send var1 to 0 while leaving var2 unchanged.,0
Optimize the main loss.  This should send both variables toward 1.,0
Optimize submodel 2.  This should send var2 to 0 while leaving var1 unchanged.,0
See if it has done a plausible job of learning the distribution.,0
We have to set the gradient penalty very small because the generator's,0
"output is only a single number, so the default penalty would constrain",0
it far too much.,0
See if it has done a plausible job of learning the distribution.,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
Train the model on random sequences.  We aren't training long enough to,0
"really make it reliable, but I want to keep this test fast, and it should",0
still be able to reproduce a reasonable fraction of input sequences.,0
Test it out.,0
Check that it got at least a quarter of them correct.,0
Actually training a VAE takes far too long for a unit test.  Just run a,0
"few steps of training to make sure nothing crashes, then check that the",0
results are at least internally consistent.,0
use central difference since forward difference has a pretty high,0
approximation error,0
assert min_coords[1][0] != new_x[3],0
assert min_coords[1][1] != new_x[4],0
assert min_coords[1][2] != new_x[5],0
Create the inputs.,0
Create the generator.,0
Create the discriminator.,0
Make a copy of the discriminator that takes the generator's output as,0
its input.,0
Make a list of all layers in the generator and discriminator.,0
Create submodels for training the generator and discriminator.,0
"Every call to fit_generator() will increment global_step, but we only",0
"want it to get incremented once for the entire batch, so record the",0
value and keep resetting it.,0
Train the discriminator.,0
Train the generator.,0
Write checkpoints and report progress.,0
Write out final results.,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
Gather results for each output,0
Recording the number of samples in the input batch,0
GraphConvTensorGraph constantly outputs batch_size number of,0
"results, only valid samples should be appended to final results",0
"If only one output, just return array",0
Returns:,0
Concatenates along 0-th dimension,0
Returns:,0
Build placeholders,0
w_b act as the indicator of unique samples in the batch,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
MPNN only accept padded input,0
MPNN only accept padded input,0
Extract number of unique samples in the batch from w_b,0
Only fetch the first set of unique samples,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultiTaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def tensorGraphMultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultiTaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
(ytz): this is really dirty but needed for restoring models,1
"Common symbols in SMILES, note that Cl and Br are regarded as single symbol",0
SMILES strings,0
Maximum length is expanded to allow length variation during train and inference,0
'_' served as delimiter and padding,0
Initialize common characters as keys,0
Include space to avoid extra keys,0
"For 'Cl', 'Br', etc.",0
"Character not recognized, add to extra_keys",0
Add all extra_keys to char_dict,0
Character embedding,0
Multiple convolutional layers with different filter widths,0
Max-over-time pooling,0
Concat features from all filters(one feature per filter),0
Highway layer from https://arxiv.org/pdf/1505.00387.pdf,0
Transform SMILES string to integer vectors,0
Skip all spaces,0
"For 'Cl', 'Br', etc.",0
Padding with '_',0
Do a simple greedy search.,0
Do a beam search with length normalization.,0
"Represent each candidate as (normalized prob, raw prob, sequence)",0
This candidate sequence has already been terminated,0
Consider all possible tokens we could add to this candidate sequence.,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply an attention lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .85,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply a residual lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
-*- coding: utf-8 -*-,0
"due to the different shape of weight(ndims=2) and bias(ndims=1),",0
will using this version for logreg,0
exclude bias variables,0
setting up n_tasks nodes(output nodes),0
label placeholders with size batch_size * 1,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
using self-defined regularization,0
adding output nodes of sigmoid function,0
"fix the size to be [?,1]",0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
"Results is of shape (n_samples, n_tasks, n_classes)",0
"retval is of shape (n_samples, n_tasks)",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
gpu memory growth option,0
gpu memory growth option,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
Keep track of the layers,0
"For graphical layers, add connectivity placeholders",0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building scikit learn Kernel SVM model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Initialize model folder,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Remove token for paddings,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building scikit learn Kernel Ridge Regression model,0
Loading hyper parameters,0
Building scikit learn Kernel Ridge Regression model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
"Float or int hyper parameters(ex. batch_size, learning_rate)",0
List of float or int hyper parameters(ex. layer_sizes),0
Number of parameters,0
Range of optimization,0
Dummy names,0
Input hyper parameters,0
Run benchmark,0
Record hyperparameters,0
Record performances,0
"GPGO maximize performance by default, set performance to its negative value for minimization",0
Readout best hyper parameters,0
Compare best model to default hyperparameters,0
Record hyperparameters,0
Record performances,0
"Optimized model is better, return hyperparameters",0
Return default hyperparameters,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Have the worker threads generate the rollouts for this iteration.,0
Perform optimization.,0
Build the feed dict and run the optimizer.,0
Update the number of steps taken so far and perform checkpointing.,0
Merge all the rollouts into a single set of arrays.,0
Iterate slices.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Return the processed arrays.,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the discounted rewards and advantages.,0
Convert the actions to one-hot.,0
Rearrange the states into the proper set of arrays.,0
Build the feed dict and apply gradients.,0
Assume all arrays are float32.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new PPO object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
The environment is a plane in which the agent moves by steps until it reaches a randomly,0
positioned goal.  No reward is given until it reaches the goal.  That makes it very hard,0
"to learn by standard methods, since it may take a very long time to receive any feedback",0
at all.  Using hindsight makes it much easier.,0
A simple policy with two hidden layers.,0
Optimize it.,0
Try running it a few times and see if it succeeds.,0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Assigning featurizer,0
Some exceptions in datasets,0
loading datasets,0
time_finish_loading-time_start is the time(s) used for dataset loading,0
dataset has customized features,0
running model,0
Initialize metrics,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Evaluating tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Evaluating tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Evaluating tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Evaluating tensorflow IRV model,0
Initialize model folder,0
Loading hyper parameters,0
Building graph convolution model,0
Gather Projection,0
Fit trained model,0
Evaluating graph convolution model,0
Loading hyper parameters,0
Building scikit random forest model,0
Evaluating scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Evaluating xgboost classification model,0
Initialize metrics,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Evaluating tensorflow MultiTaskDNN model,0
Initialize model folder,0
Loading hyper parameters,0
Building graph convoluwtion model,0
Gather Projection,0
Fit trained model,0
Evaluating graph convolution model,0
Loading hyper parameters,0
Building scikit random forest model,0
Evaluating scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Evaluating xgboost classification model,0
Global variables,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
input hyperparameters,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
-*- coding: utf-8 -*-,0
main layer,0
bypass layer,0
penalty,0
general figure,0
learning rate,0
for graph-conv and random forest,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load SWEET dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Set some global variables up top,0
removes directory if present -- warning,0
default split is 80-10-10 train-valid-test split,0
Fit Logistic Regression models,0
Fit Logistic Regression models,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"Images are square 28x28 (batch, height, width, channel)",0
Featurize qm9 dataset,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize Tox21 dataset,0
Initialize transformers,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm7 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
"transformers = [dc.trans.NormalizationTransformer(transform_X=True, dataset=train_dataset), dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Load Tox21 dataset,0
Batch size of models,0
Fit models,0
Fit trained model,0
Featurize qm8 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Load dataset,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
======================================================================,0
"Run Benchmarks {GC-DNN, P-DNN, SVR, RF}",0
we cant re-open the closed session...,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.WeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Featurize Delaney dataset,0
Initialize transformers,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Note sensitivity = recall,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Featurize hiv dataset,0
Initialize transformers,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize permeability dataset,0
Load Tox21 dataset,0
Fit trained model,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Featurize SAMPL dataset,0
Initialize transformers,0
Load clintox dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Load PDBBind dataset,0
Define featurizers,0
"TODO(rbharath, enf, leswing): Figure out why pi_stack and cation_pi",1
reduce validation performance,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
Featurize Dataset,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"model.old_fit(train_dataset, nb_epoch=nb_epoch)",0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Featurize HOPV dataset,0
Initialize transformers,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
setup optimizer,0
setup optimizer,0
"print(""tasK: %d"" %task)",0
"cores = torch.cat([scores, 1.-scores], dim=1)",0
"print(""scores"")",0
print(scores.size()),0
"print(""task_label"")",0
print(task_label.size()),0
"task_loss =  self.criterion(scores, task_label)",0
"print(""task_loss"")",0
print(task_loss.size()),0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network SELU [MPNN-S] for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
x = F.selu( fc(x) ),0
x = F.selu( fc(x) ),0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Data loading a splitting file,0
,0
MIT License - have fun!!,0
===========================================================,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
########################################################### DEBUG,0
########################################################### DEBUG,0
s3cmd -M -H sync docs/_build/ s3://deepchem.io/,0
########################################################### DEBUG,0
########################################################### DEBUG,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
References,0
Arguments,0
Aliases.,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
"WARNING: Does not work for Batch Size 1! If batch_size = 1, then use reduce_sum!",0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Store the summed atoms by degree,0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
TODO(rbharath): It's not clear where nb_affine comes from.,1
Is there a solid explanation here?,0
Generate the nb_affine weights and biases,0
Add trainable weights,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
Extract nodes and membership,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
Extract nodes,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
r = self.r_init,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new aattention states,0
"def build(self, input_shape):",0
"_, support_input_shape = input_shape  #Unpack",0
n_feat = support_input_shape[1],0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Not sure if it helps to place the update here or later yet.  Will,0
decide,0
z = r,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
"return [x+p, z+q]",0
No other forget biases supported right now.,0
"def build(self, input_shape):",0
Taken from Keras code [citation needed],0
###################################################### DEBUG,0
"return o, [h, c]",0
###################################################### DEBUG,0
"self.b_fc = model_ops.zeros(shape=[self.n_embedding,])",0
distance_hidden = self.activation(distance_hidden),0
atom_features_hidden = self.activation(atom_features_hidden),0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
Extract atom_features,0
Basic features of every atom: (batch_size*max_atoms) * n_atom_features,0
calculation orders of graph: (batch_size*max_atoms) * max_atoms * max_atoms,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
"step i calculates the graph features for atoms of index `parents[:,i,0]`",0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
"represent the same atoms of `parents[:, :, 0]`,",0
different in that these index are positions in `atom_features`,0
"number of atoms in total, should equal `batch_size*max_atoms`",0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
last step generates graph features for all target atom,0
Add trainable weights,0
Extract atom_features,0
sum all graph outputs,0
Aliases.,0
TODO(rbharath): What does this line do?,1
TODO(rbharath): REMOVE GLOBAL VARS! BREAKS DEEPCHEM STYLE!,1
This dictionary holds a mapping {graph: learning_phase}.,0
A learning phase is a bool tensor used to run Keras models in,0
either train mode (learning_phase == 1) or test mode (learning_phase == 0).,0
else: assume learning phase is a placeholder tensor.,0
need broadcasting,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
These properties should have been set,0
"by the child class, as appropriate.",0
These properties should be set by the user via keyword arguments.,0
"note that 'input_dtype', 'input_shape' and 'batch_input_shape'",0
are only applicable to input layers: do not pass these keywords,0
to non-input layers.,0
In this case we will create an input layer,0
to insert before the current layer,0
Update self.losses,0
In case self.losses isn't settable,0
(i.e. it's a getter method).,0
In that case the `losses` property is,0
auto-computed and shouldn't be set.,0
Update self._per_input_updates,0
Updates indexed by None are unconditional,0
rather than input-dependent,0
outputs = to_list(self.call(x)),0
return outputs,0
TODO(rbharath): Keras uses a global var here to maintain,1
unique counts. This seems dangerous. How does tensorflow handle?,1
TODO(rbharath): Support this type of functional API.,1
If batch size not specified,0
Input shape,0
Output shape,0
References,0
Not Trainable,0
Not Trainable,0
need broadcasting,0
pick the normalized form of x corresponding to the training phase,0
sample-wise normalization,0
from deepchem.nn.model_ops import variable,0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Arguments,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
def test_batch_normalization(self):,0
"""""""Tests that batch normalization layers can be created.""""""",0
"Output should be of shape (?, nb_filter)",0
"Output should be of shape (batch_size, n_feat)",0
Try concatenating the two lists of placeholders,0
Try concatenating the two lists of placeholders,0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
"TODO(rbharath, enf): Figure out why pi_stack is slow and cation_pi",1
causes segfaults.,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
TODO(rbharath): This has been a major source of bugs. Is there a more,1
robust characterization of which metrics require class-probs and which,0
don't?,0
Reshape to handle 1-d edge cases,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
The -1 indicates that y will be reshaped to have length -1,0
"Set labels to be zero, with zero weights",0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"TODO(rbharath): This happens in tests sometimes, but don't understand why?",1
Handle edge case.,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = arccos(R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance)),0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
TODO(LESWING),1
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
TODO(enf): make array index checking not a try-catch statement.,1
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
"Since ConvMol is an object and not a numpy array, need to set dtype to",0
object.,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
Set dtype,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
"Note there is a central nitrogen of degree 4, with 4 carbons",0
of degree 1 (connected only to central nitrogen).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central nitrogen,0
Central nitrogen connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Pick the mol closest to everything as the first element of training,0
Pick the closest mol from what is left,0
Test is everything else,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
Path to save checkpoint files,0
first layer in model: check that it is an input layer,0
Add losses to graph,0
Loss for each batch element,0
Loss should be a float,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
TODO(rbharath): Don't support example weighting yet.,1
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Calculate pairwise distance,0
Masking for valid atom index,0
Cutoff with threshold Rc,0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Define angle theta = R_ij(Vector) dot R_ik(Vector)/R_ij(distance)/R_ik(distance),0
Reshape everything to match the input with the most dimensions.,0
"This probably means the variable hasn't been created yet, so try again",0
with reuse set to false.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, self.W_list,",0
self.b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultiTaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def tensorGraphMultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultiTaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply an attention lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .85,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply a residual lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
"""""""Ops for graph construction.""""""",0
from __future__ import print_function,0
from __future__ import division,0
from __future__ import unicode_literals,0
,0
import sys,0
import traceback,0
import tensorflow as tf,0
from keras import backend as K,0
,0
"def cosine_distances(test, support):",0
"""""""Computes pairwise cosine distances between provided tensors",0
,0
Parameters,0
----------,0
test: tf.Tensor,0
"Of shape (n_test, n_feat)",0
support: tf.Tensor,0
"Of shape (n_support, n_feat)",0
,0
Returns,0
-------,0
tf.Tensor:,0
"Of shape (n_test, n_support)",0
"""""""",0
"rnorm_test = tf.rsqrt(tf.reduce_sum(tf.square(test), 1,",0
keep_dims=True)) + K.epsilon(),0
"rnorm_support = tf.rsqrt(tf.reduce_sum(tf.square(support), 1,",0
keep_dims=True)) + K.epsilon(),0
test_normalized = test * rnorm_test,0
support_normalized = support * rnorm_support,0
,0
# Transpose for mul,0
"support_normalized_t = tf.transpose(support_normalized, perm=[1,0])",0
"g = tf.matmul(test_normalized, support_normalized_t)  # Gram matrix",0
return g,0
,0
"def euclidean_distance(test, support, max_dist_sq=20):",0
"""""""Computes pairwise euclidean distances between provided tensors",0
,0
TODO(rbharath): BROKEN! THIS DOESN'T WORK!,1
,0
Parameters,0
----------,0
test: tf.Tensor,0
"Of shape (n_test, n_feat)",0
support: tf.Tensor,0
"Of shape (n_support, n_feat)",0
"max_dist_sq: float, optional",0
Maximum pairwise distance allowed.,0
,0
Returns,0
-------,0
tf.Tensor:,0
"Of shape (n_test, n_support)",0
"""""""",0
"test = tf.expand_dims(test, 1)",0
"support = tf.expand_dims(support, 0)",0
"g = -tf.maximum(tf.reduce_sum(tf.square(test - support), 2), max_dist_sq)",0
return g,0
,0
"def add_bias(tensor, init=None, name=None):",0
"""""""Add a bias term to a tensor.",0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Variable tensor.,0
init: float,0
Bias initializer. Defaults to zero.,0
name: str,0
Name for this op. Defaults to tensor.op.name.,0
,0
Returns,0
-------,0
tf.Tensor,0
A biased tensor with the same shape as the input tensor.,0
"""""""",0
if init is None:,0
init = tf.zeros([tensor.get_shape()[-1].value]),0
"with tf.name_scope(name, tensor.op.name, [tensor]):",0
"b = tf.Variable(init, name='b')",0
"return tf.nn.bias_add(tensor, b)",0
,0
,0
"def dropout(tensor, dropout_prob, training=True, training_only=True):",0
"""""""Random dropout.",0
,0
"This implementation supports ""always-on"" dropout (training_only=False), which",0
"can be used to calculate model uncertainty. See Gal and Ghahramani,",0
http://arxiv.org/abs/1506.02142.,0
,0
"NOTE(user): To simplify the implementation, I have chosen not to reverse",0
the scaling that occurs in tf.nn.dropout when using dropout during,0
inference. This shouldn't be an issue since the activations will be scaled,0
by the same constant in both training and inference. This means that there,0
are no training-time differences between networks that use dropout during,0
inference and those that do not.,0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Input tensor.,0
dropout_prob: float,0
Float giving dropout probability for weights (NOT keep probability).,0
training_only: bool,0
"Boolean. If True (standard dropout), apply dropout only",0
"during training. If False, apply dropout during inference as well.",0
,0
Returns,0
-------,0
tf.Tensor:,0
A tensor with the same shape as the input tensor.,0
"""""""",0
if not dropout_prob:,0
return tensor  # do nothing,0
keep_prob = 1.0 - dropout_prob,0
if training or not training_only:,0
"tensor = tf.nn.dropout(tensor, keep_prob)",0
return tensor,0
,0
,0
"def fully_connected_layer(tensor, size=None, weight_init=None, bias_init=None,",0
name=None):,0
"""""""Fully connected layer.",0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Input tensor.,0
size: int,0
Number of output nodes for this layer.,0
weight_init: float,0
Weight initializer.,0
bias_init: float,0
Bias initializer.,0
name: str,0
Name for this op. Defaults to 'fully_connected'.,0
,0
Returns,0
-------,0
tf.Tensor:,0
A new tensor representing the output of the fully connected layer.,0
,0
Raises,0
------,0
ValueError,0
If input tensor is not 2D.,0
"""""""",0
if len(tensor.get_shape()) != 2:,0
"raise ValueError('Dense layer input must be 2D, not %dD'",0
% len(tensor.get_shape())),0
if weight_init is None:,0
num_features = tensor.get_shape()[-1].value,0
"weight_init = tf.truncated_normal([num_features, size], stddev=0.01)",0
if bias_init is None:,0
bias_init = tf.zeros([size]),0
,0
"with tf.name_scope(name, 'fully_connected', [tensor]):",0
"w = tf.Variable(weight_init, name='w', dtype=tf.float32)",0
"b = tf.Variable(bias_init, name='b', dtype=tf.float32)",0
"return tf.nn.xw_plus_b(tensor, w, b)",0
,0
"def weight_decay(penalty_type, penalty):",0
"""""""Add weight decay.",0
,0
Args:,0
model: TensorflowGraph.,0
,0
Returns:,0
A scalar tensor containing the weight decay cost.,0
,0
Raises:,0
NotImplementedError: If an unsupported penalty type is requested.,0
"""""""",0
variables = [],0
# exclude bias variables,0
for v in tf.trainable_variables():,0
if v.get_shape().ndims == 2:,0
variables.append(v),0
,0
with tf.name_scope('weight_decay'):,0
if penalty_type == 'l1':,0
cost = tf.add_n([tf.reduce_sum(tf.abs(v)) for v in variables]),0
elif penalty_type == 'l2':,0
cost = tf.add_n([tf.nn.l2_loss(v) for v in variables]),0
else:,0
raise NotImplementedError('Unsupported penalty_type %s' % penalty_type),0
cost *= penalty,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
return cost,0
,0
,0
"def multitask_logits(features, num_tasks, num_classes=2, weight_init=None,",0
"bias_init=None, dropout_prob=None, name=None):",0
"""""""Create a logit tensor for each classification task.",0
,0
Args:,0
features: A 2D tensor with dimensions batch_size x num_features.,0
num_tasks: Number of classification tasks.,0
num_classes: Number of classes for each task.,0
weight_init: Weight initializer.,0
bias_init: Bias initializer.,0
dropout_prob: Float giving dropout probability for weights (NOT keep,0
probability).,0
name: Name for this op. Defaults to 'multitask_logits'.,0
,0
Returns:,0
A list of logit tensors; one for each classification task.,0
"""""""",0
logits_list = [],0
with tf.name_scope('multitask_logits'):,0
for task_idx in range(num_tasks):,0
"with tf.name_scope(name,",0
"('task' + str(task_idx).zfill(len(str(num_tasks)))), [features]):",0
logits_list.append(,0
"logits(features, num_classes, weight_init=weight_init,",0
"bias_init=bias_init, dropout_prob=dropout_prob))",0
return logits_list,0
,0
,0
"def logits(features, num_classes=2, weight_init=None, bias_init=None,",0
"dropout_prob=None, name=None):",0
"""""""Create a logits tensor for a single classification task.",0
,0
You almost certainly don't want dropout on there -- it's like randomly setting,0
the (unscaled) probability of a target class to 0.5.,0
,0
Args:,0
features: A 2D tensor with dimensions batch_size x num_features.,0
num_classes: Number of classes for each task.,0
weight_init: Weight initializer.,0
bias_init: Bias initializer.,0
dropout_prob: Float giving dropout probability for weights (NOT keep,0
probability).,0
name: Name for this op.,0
,0
Returns:,0
A logits tensor with shape batch_size x num_classes.,0
"""""""",0
"with tf.name_scope(name, 'logits', [features]) as name:",0
return dropout(,0
"fully_connected_layer(features, num_classes, weight_init=weight_init,",0
"bias_init=bias_init, name=name),",0
dropout_prob),0
,0
,0
"def softmax_N(tensor, name=None):",0
"""""""Apply softmax across last dimension of a tensor.",0
,0
Args:,0
tensor: Input tensor.,0
"name: Name for this op. If None, defaults to 'softmax_N'.",0
,0
Returns:,0
A tensor with softmax-normalized values on the last dimension.,0
"""""""",0
"with tf.name_scope(name, 'softmax_N', [tensor]):",0
exp_tensor = tf.exp(tensor),0
reduction_indices = [tensor.get_shape().ndims - 1],0
"return tf.div(exp_tensor,",0
"tf.reduce_sum(exp_tensor,",0
"reduction_indices=reduction_indices,",0
keep_dims=True)),0
,0
"def optimizer(optimizer=""adam"", learning_rate=.001, momentum=.9):",0
"""""""Create model optimizer.",0
,0
Parameters,0
----------,0
"optimizer: str, optional",0
Name of optimizer,0
"learning_rate: float, optional",0
Learning rate for algorithm,0
"momentum: float, optional",0
Momentum rate,0
,0
Returns,0
-------,0
A training Optimizer.,0
,0
Raises:,0
NotImplementedError: If an unsupported optimizer is requested.,0
"""""""",0
# TODO(user): gradient clipping (see Minimize),0
if optimizer == 'adagrad':,0
train_op = tf.train.AdagradOptimizer(learning_rate),0
elif optimizer == 'adam':,0
train_op = tf.train.AdamOptimizer(learning_rate),0
elif optimizer == 'momentum':,0
"train_op = tf.train.MomentumOptimizer(learning_rate,",0
momentum),0
elif optimizer == 'rmsprop':,0
"train_op = tf.train.RMSPropOptimizer(learning_rate,",0
momentum),0
elif optimizer == 'sgd':,0
train_op = tf.train.GradientDescentOptimizer(learning_rate),0
else:,0
raise NotImplementedError('Unsupported optimizer %s' % optimizer),0
return train_op,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
-*- coding: utf-8 -*-,0
"due to the different shape of weight(ndims=2) and bias(ndims=1),",0
will using this version for logreg,0
exclude bias variables,0
setting up n_tasks nodes(output nodes),0
label placeholders with size batch_size * 1,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
using self-defined regularization,0
adding output nodes of sigmoid function,0
"fix the size to be [?,1]",0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like model_dir/model.ckpt-N,0
"self._save_path is ""model_dir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
Keep track of the layers,0
############################################ DEBUG,0
"print(""start - add()"")",0
"print(""self.output"")",0
print(self.output),0
############################################ DEBUG,0
"For graphical layers, add connectivity placeholders",0
############################################ DEBUG,0
"print(""end- add()"")",0
"print(""self.output"")",0
print(self.output),0
############################################ DEBUG,0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
Create target inputs,0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
############################################################ DEBUG,0
self.feat_dim = self.model.get_num_output_features(),0
############################################################ DEBUG,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Initialize model folder,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
Generate the rollout.,0
Compute an estimate of the reward for the rest of the episode.,0
Compute the output arrays.,0
This is modeled after the Roulette-v0 environment from OpenAI Gym.,0
"The player can bet on any number from 0 to 36, or walk away (which ends the",0
"game).  The average reward for any bet is slightly negative, so the best",0
strategy is to walk away.,0
"This policy just learns a constant probability for each action, and a constant for the value.",0
Optimize it.,0
"It should have learned that the expected value is very close to zero, and that the best",0
action is to walk away.,0
"Verify that we can create a new A3C object, reload the parameters from the first one, and",0
get the same result.,0
"Do the same thing, only using the ""restore"" argument to fit().",0
The environment just has a constant state.,0
The policy includes a single recurrent layer.,0
"We don't care about actually optimizing it, so just run a few rollouts to make",0
"sure fit() doesn't crash, then check the behavior of the GRU state.",0
"On the first call, the initial state should be all zeros.",0
It should still be zeros since we didn't save it last time.,0
It should be different now.,0
This should be the same as the previous one.,0
"Now we reset it, so we should get the same result as initially.",0
Randomize who goes first,0
Illegal move -- the square is not empty,0
Move X,0
Did X Win,0
Did O Win,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Assigning featurizer,0
Some exceptions in datasets,0
loading datasets,0
time_finish_loading-time_start is the time(s) used for dataset loading,0
dataset has customized features,0
running model,0
Initialize metrics,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Evaluating tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Evaluating tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Evaluating tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Evaluating tensorflow IRV model,0
Initialize model folder,0
Loading hyper parameters,0
Building graph convolution model,0
Gather Projection,0
Fit trained model,0
Evaluating graph convolution model,0
Loading hyper parameters,0
Building scikit random forest model,0
Evaluating scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Evaluating xgboost classification model,0
Initialize metrics,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Evaluating tensorflow MultiTaskDNN model,0
Initialize model folder,0
Loading hyper parameters,0
Building graph convoluwtion model,0
Gather Projection,0
Fit trained model,0
Evaluating graph convolution model,0
Loading hyper parameters,0
Building scikit random forest model,0
Evaluating scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Evaluating xgboost classification model,0
Global variables,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
input hyperparameters,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
!/usr/bin/env python3,0
-*- coding: utf-8 -*-,0
Datasets and models used in the benchmark test,0
"irv, rf, rf_regression should be assigned manually",0
-*- coding: utf-8 -*-,0
main layer,0
bypass layer,0
penalty,0
general figure,0
learning rate,0
for graph-conv and random forest,0
Set numpy seed,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Featurize Kinase dataset,0
##Load data###,0
num_trials = 5,0
##Create model###,0
Use R2 classification metric,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
num_trials = 5,0
Set some global variables up top,0
Fit trained model,0
Featurize PCBA dataset,0
Initialize transformers,0
Fit trained model,0
Load SWEET dataset,0
Featurize SWEET dataset,0
Initialize transformers,0
Set some global variables up top,0
removes directory if present -- warning,0
default split is 80-10-10 train-valid-test split,0
Fit Logistic Regression models,0
Fit Logistic Regression models,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
##Load data###,0
"n_estimators=100, max_features=int(num_features/3),",0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"Images are square 28x28 (batch, height, width, channel)",0
Featurize qm9 dataset,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize Tox21 dataset,0
Initialize transformers,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Tox21 dataset,0
Fit models,0
Fit trained model,0
Featurize FACTORS dataset,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
##Create model###,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Featurize qm7 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
"transformers = [dc.trans.NormalizationTransformer(transform_X=True, dataset=train_dataset), dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Featurize qm8 dataset,0
Load Tox21 dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Fit trained model,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Load dataset,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Load ChEMBL dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
DeepCrystal Technologies 2017 - Patrick Hop,0
MIT License - have fun!!,0
======================================================================,0
"Run Benchmarks {GC-DNN, P-DNN, SVR, RF}",0
we cant re-open the closed session...,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.WeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load Delaney dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Featurize Delaney dataset,0
Initialize transformers,0
Load Delaney dataset,0
Fit models,0
Batch size of models,0
Fit trained model,0
Only for debug!,0
Load Delaney dataset,0
Fit models,0
Fit trained model,0
Load MUV dataset,0
Fit models,0
Fit trained model,0
Evaluate train/test scores,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV data,0
Build model,0
Fit trained model,0
Evaluate train/test scores,0
Extract active site,0
Featurize ligand,0
Default for CircularFingerprint,0
Featurize pocket,0
Note broadcast operation,0
Compute labels for pockets,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Filter if missing PDB files,0
Load PDBBind dataset,0
Define featurizers,0
Featurize Dataset,0
########################################################## DEBUG,0
########################################################## DEBUG,0
For stable runs,0
Fit trained model,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Number of features on conv-mols,0
Batch size of models,0
Fit trained model,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
4-fold splits,0
num positive/negative ligands,0
10 trials on test-set,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Number of folds for split,0
Depth of attention module,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply a residual lstm layer,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Set some global variables up top,0
Featurize Tox21 dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Number of folds for split,0
Depth of attention module,0
number positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
Apply an attention lstm layer,0
4-fold splits,0
10 positive/negative ligands,0
10 trials on test-set,0
Sample supports without replacement (all pos/neg should be different),0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
"print(""Score on task %s is %s"" % (str(task), str(score)))",0
Join information for all tasks.,0
Number of folds for split,0
num positive/negative ligands,0
Set batch sizes for network,0
Number of features on conv-mols,0
Define metric,0
Train support model on train,0
Add layers,0
4-fold splits,0
num positive/negative ligands,0
Define metric,0
Get supports on test-set,0
Compute accuracies,0
Train model on support,0
Test model,0
Join information for all tasks.,0
Note sensitivity = recall,0
NOTE THE RENAMING:,0
Note sensitivity = recall,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Set some global variables up top,0
Fit trained model,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Featurize hiv dataset,0
Initialize transformers,0
Only for debug!,0
Load hiv dataset,0
Fit models,0
Fit trained model,0
Fit trained model,0
Fit models,0
Batch size of models,0
"graph.add(dc.nn.AlternateWeaveLayer(max_atoms, 50, 50))",0
Fit trained model,0
Load SIDER dataset,0
Featurize SIDER dataset,0
Initialize transformers,0
Only for debug!,0
Load SAMPL dataset,0
Fit models,0
Fit trained model,0
Load Tox21 dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Dense post-processing layer,0
Fit trained model,0
Featurize SAMPL dataset,0
Initialize transformers,0
Load clintox dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Only for debug!,0
Load clintox dataset,0
Fit models,0
Fit trained model,0
Load clintox dataset,0
Fit models,0
Do setup required for tf/keras models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
-*- coding: utf-8 -*-,0
#############################################################################,0
## save dataset,0
#############################################################################,0
## load datasets,0
load sweetfda,0
load aact,0
## fixup smiles for matching,0
return smiles,0
map original smiles to converted smiles,0
"## join dataframes, index on smiles",0
map original smiles back,0
## fill all nan with 0,0
## construct datasets,0
store in new datasets,0
## save datasets,0
"fout = ""aacttox_sweetfda_phase_multiclass.csv""",0
"cols = ['smiles', 'FDA_APPROVED', 'CT_TOX','CT_TOX_PHASE']",0
"pd.DataFrame(datasets[1], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_singletask.csv""",0
"columns=['smiles', 'CLINICAL_TRIAL_OUTCOME']",0
"pd.DataFrame(datasets[2], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_cto_fdatox.csv""",0
"columns = ['smiles', 'CLINICAL_TRIAL_OUTCOME', 'FDA_APPROVED_TOX']",0
"pd.DataFrame(datasets[3], columns=cols).to_csv(fout, index=False)",0
"fout = ""aacttox_sweetfda_phase_multitask.csv""",0
"columns=['smiles', 'FDA_APPROVED', 'CT_TOX',",0
"'CT_TOX_PHASE_1', 'CT_TOX_PHASE_2',",0
"'CT_TOX_PHASE_3', 'CT_TOX_PHASE_4']",0
"pd.DataFrame(datasets[4], columns=cols).to_csv(fout, index=False)",0
For stable runs,0
Fit trained model,0
For stable runs,0
Fit trained model,0
Some complexes have labels but no PDB files. Filter these manually,0
Some of the ligand-names are of form (FMN ox). Use regex,0
to merge into form (FMN-ox),0
Load PDBBind dataset,0
Define featurizers,0
"TODO(rbharath, enf, leswing): Figure out why pi_stack and cation_pi",1
reduce validation performance,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
Featurize Dataset,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
transformers = [,0
"dc.trans.LogTransformer(transform_X=True),",0
"dc.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Featurize UV dataset,0
##Load data###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
##Load data###,0
##Create model###,0
Set numpy seed,0
##Load data###,0
##Create model###,0
Use R2 classification metric,0
"model.old_fit(train_dataset, nb_epoch=nb_epoch)",0
Only use for final evaluation,0
Force matplotlib to not use any Xwindows backend.,0
##Load data###,0
the histogram of the data,0
##Load data###,0
###################################################### DEBUG,0
###################################################### DEBUG,0
Load HOPV dataset,0
Fit models,0
Number of features on conv-mols,0
Batch size of models,0
Gather Projection,0
Fit trained model,0
Featurize HOPV dataset,0
Initialize transformers,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Only for debug!,0
Load HOPV dataset,0
Fit models,0
Fit trained model,0
Load TOXCAST dataset,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Fit trained model,0
Processing of ToxCast data,0
Author - Aneesh Pappu,0
Loading dataframes and editing indices,0
Loop through rows of hitc matrix and replace codes with smiles strings,0
get corresponding casn,0
get corresponding smiles,0
write to cell,0
Tidy up and write to csv,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
-*- coding: utf-8 -*-,0
Save hyperparameters,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
############################################################# TIMING,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
2017 DeepCrystal Technologies - Patrick Hop,0
,0
Message Passing Neural Network for Chemical Multigraphs,0
,0
MIT License - have fun!!,0
===========================================================,0
A = {},0
"valid_bonds = {'SINGLE', 'DOUBLE', 'TRIPLE', 'AROMATIC'}",0
for valid_bond in valid_bonds:,0
"A[valid_bond] = nn.Linear(75, 75)",0
"GRU = nn.GRU(150, 75, 1)",0
"flow_delta = Variable(torch.zeros(1, 1))",0
"h_t = Variable(torch.zeros(1, 1, 75))",0
bond_type = e_vw.GetBondType(),0
A_vw = A[str(e_vw.GetBondType())],0
"gru_act, h_t = GRU(catted.view(1, 1, 150), h_t)",0
measure convergence,0
pdist = nn.PairwiseDistance(2),0
"flow_delta = flow_delta + torch.sum(pdist(gru_act.view(1, 75), h[v]))",0
"h[v] = gru_act.view(1, 75)",0
"print '    flow delta [%i] [%f]' % (k, flow_delta.data.numpy()[0])",0
training loop,0
"{'params': A['DOUBLE'].parameters()},",0
"{'params': A['TRIPLE'].parameters()},",0
"{'params': A['AROMATIC'].parameters()},",0
"{'params': GRU.parameters()},",0
"rf.fit(np_fps_train, train_labels)",0
labels = rf.predict(val_fps),0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
Set random seeds,0
Setup directories,0
Model constants,0
Load and transform datasets,0
convert -logKi to dG = +RTlogKi [kJ/mol],0
Atomic convolution variables,0
at = atomic numbers (atom types),0
"radial basis function parameters [cutoff, mean, width]",0
Model hyperparameters,0
Initialize model,0
Fit model,0
Evaluate model,0
test_evaluator = dc.utils.evaluate.GeneratorEvaluator(,0
"tg, feed_dict_generator(test_dataset, batch_size), transformers, [label])",0
test_scores = test_evaluator.compute_model_performance(metric),0
"test_scores = {""%s_test"" % k: v for k, v in test_scores.items()}",0
param.update(test_scores),0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
"transformers = [dc.trans.NormalizationTransformer(transform_y=True, dataset=train_dataset)]",0
for transformer in transformers:,0
train_dataset = transformer.transform(train_dataset),0
test_dataset = transformer.transform(test_dataset),0
"radial = [[12.0], [0.0, 4.0, 8.0], [0.4]]",0
Create some directories for analysis,0
The base_dir holds the results of all analysis,0
Make directories to store the raw and featurized datasets.,0
Load PDBBind dataset,0
Define featurizers,0
Currently featurizes with shard_size=1,0
Dataset can be reshard: dataset = dataset.reshard(48) for example,0
This could be done with openbabel in python,0
Compute cells for this molecule. O(constant),0
min == max if molecule is planar in some direction,0
we should still create a bin,0
TODO(JSG): Implement non-PBC version.  For now this seems fine ..,1
Note neighbors contains self!,0
Associate each atom with cell it belongs to. O(N),0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"For each atom, loop through all atoms in its cell and neighboring cells.",0
Accept as neighbors only those within threshold. This computation should be,0
"O(Nm), where m is the number of atoms within a set of neighboring-cells.",0
Sort neighbors by distance,0
Pick up to max_num_neighbors,0
Type of data created by this featurizer,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
Sort from largest to smallest scaffold sets,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Dummy placeholders,0
Dummy placeholders,0
## AtomicNet fully-connected layer ops ###,0
## Atomicnet coordinate transform ops ###,0
## Atomicnet symmetry function kernel ops ###,0
## Atomicnet symmetry function ops ###,0
## Atomcnet symmetry function layer ops ###,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
## Misc convenience ops ###,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
Higher is Better,0
The secret key is available as a secure environment variable,0
on travis-ci to push the build documentation to Amazon S3.,0
########################################################### DEBUG,0
########################################################### DEBUG,0
s3cmd -M -H sync docs/_build/ s3://deepchem.io/,0
########################################################### DEBUG,0
########################################################### DEBUG,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
References,0
Arguments,0
Aliases.,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
"WARNING: Does not work for Batch Size 1! If batch_size = 1, then use reduce_sum!",0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Store the summed atoms by degree,0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
TODO(rbharath): It's not clear where nb_affine comes from.,1
Is there a solid explanation here?,0
Generate the nb_affine weights and biases,0
Add trainable weights,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
Extract nodes and membership,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
Extract nodes,0
Extract atom_features,0
Extract graph topology,0
Perform the mol gather,0
"x is test set, xp is support set.",0
# Initializes trainable weights.,0
## Performs computations,0
Get initializations,0
r = self.r_init,0
Process using attention,0
"Eqn (4), appendix A.1 of Matching Networks paper",0
Generate new aattention states,0
"def build(self, input_shape):",0
"_, support_input_shape = input_shape  #Unpack",0
n_feat = support_input_shape[1],0
Support set lstm,0
Test lstm,0
Get initializations,0
Rename support,0
Process support xp using attention,0
Get linear combination of support set,0
Not sure if it helps to place the update here or later yet.  Will,0
decide,0
z = r,0
Process test x using attention,0
Generate new support attention states,0
Generate new test attention states,0
Redefine,0
"return [x+p, z+q]",0
No other forget biases supported right now.,0
"def build(self, input_shape):",0
Taken from Keras code [citation needed],0
###################################################### DEBUG,0
"return o, [h, c]",0
###################################################### DEBUG,0
"self.b_fc = model_ops.zeros(shape=[self.n_embedding,])",0
distance_hidden = self.activation(distance_hidden),0
atom_features_hidden = self.activation(atom_features_hidden),0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
Extract atom_features,0
Basic features of every atom: (batch_size*max_atoms) * n_atom_features,0
calculation orders of graph: (batch_size*max_atoms) * max_atoms * max_atoms,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
"step i calculates the graph features for atoms of index `parents[:,i,0]`",0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
"represent the same atoms of `parents[:, :, 0]`,",0
different in that these index are positions in `atom_features`,0
"number of atoms in total, should equal `batch_size*max_atoms`",0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
last step generates graph features for all target atom,0
Add trainable weights,0
Extract atom_features,0
sum all graph outputs,0
Aliases.,0
TODO(rbharath): What does this line do?,1
TODO(rbharath): REMOVE GLOBAL VARS! BREAKS DEEPCHEM STYLE!,1
This dictionary holds a mapping {graph: learning_phase}.,0
A learning phase is a bool tensor used to run Keras models in,0
either train mode (learning_phase == 1) or test mode (learning_phase == 0).,0
else: assume learning phase is a placeholder tensor.,0
need broadcasting,0
ensure that randomness is conditioned by the Numpy RNG,0
ensure that randomness is conditioned by the Numpy RNG,0
TODO(rbharath): Should probably swap this over to tf mode.,1
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
scale preds so that the class probas of each sample sum to 1,0
manual computation of crossentropy,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
if our output includes timesteps we need to reshape,0
Arguments,0
Returns,0
Note: tf.nn.softmax_cross_entropy_with_logits,0
"expects logits, Keras expects probabilities.",0
transform back to logits,0
"TODO(rbharath): Need to rename this. This makes a variable, not just creates",1
a tensor. Confusing with tf.zeros...,0
Transpose for mul,0
exclude bias variables,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
TODO(user): gradient clipping (see Minimize),0
These properties should have been set,0
"by the child class, as appropriate.",0
These properties should be set by the user via keyword arguments.,0
"note that 'input_dtype', 'input_shape' and 'batch_input_shape'",0
are only applicable to input layers: do not pass these keywords,0
to non-input layers.,0
In this case we will create an input layer,0
to insert before the current layer,0
Update self.losses,0
In case self.losses isn't settable,0
(i.e. it's a getter method).,0
In that case the `losses` property is,0
auto-computed and shouldn't be set.,0
Update self._per_input_updates,0
Updates indexed by None are unconditional,0
rather than input-dependent,0
outputs = to_list(self.call(x)),0
return outputs,0
TODO(rbharath): Keras uses a global var here to maintain,1
unique counts. This seems dangerous. How does tensorflow handle?,1
TODO(rbharath): Support this type of functional API.,1
If batch size not specified,0
Input shape,0
Output shape,0
References,0
Not Trainable,0
Not Trainable,0
need broadcasting,0
pick the normalized form of x corresponding to the training phase,0
sample-wise normalization,0
from deepchem.nn.model_ops import variable,0
Assuming convolution kernels (2D or 3D).,0
"TF kernel shape: (..., input_depth, depth)",0
No specific assumptions.,0
References,0
References,0
References,0
References,0
Pick the one with the correct shape.,0
Arguments,0
Aliases.,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
Add trainable weights,0
def test_batch_normalization(self):,0
"""""""Tests that batch normalization layers can be created.""""""",0
"Output should be of shape (?, nb_filter)",0
"Output should be of shape (batch_size, n_feat)",0
Try concatenating the two lists of placeholders,0
Try concatenating the two lists of placeholders,0
Fit model on dataset,0
Fit model on dataset,0
"Should be an array of size (n_pocket_atoms, 3)",0
"coords[triangle, 0] gives the x-dimension of all triangle points",0
Take transpose to make sure rows correspond to atoms.,0
We voxelize so all grids have integral coordinates (convenience),0
"If overlap of box with previously generated output boxes, return",0
Carry forward mappings,0
We know that box has at least one atom not in outputs,0
Current box has been merged into box further down list.,0
No need to output current box,0
"protein_coords is (N, 3) tensor",0
Load binding pocket model,0
TODO(rbharath): Shift refined to full once trained.,1
Fit model on dataset,0
Create featurizers,0
"if not ligand_file.endswith("".sdf""):",0
"raise ValueError(""Only .sdf ligand files can be featurized."")",0
"ligand_basename = os.path.basename(ligand_file).split(""."")[0]",0
ligand_mol2 = os.path.join(,0
"self.base_dir, ligand_basename + "".mol2"")",0
,0
# Write mol2 file for ligand,0
obConversion = ob.OBConversion(),0
"conv_out = obConversion.SetInAndOutFormats(str(""sdf""), str(""mol2""))",0
ob_mol = ob.OBMol(),0
"obConversion.ReadFile(ob_mol, str(ligand_file))",0
"obConversion.WriteFile(ob_mol, str(ligand_mol2))",0
,0
# Featurize ligand,0
"mol = Chem.MolFromMol2File(str(ligand_mol2), removeHs=False)",0
if mol is None:,0
"return None, None",0
# Default for CircularFingerprint,0
n_ligand_features = 1024,0
ligand_features = self.ligand_featurizer.featurize([mol]),0
,0
# Featurize pocket,0
"pockets, pocket_atoms_map, pocket_coords = self.convex_finder.find_pockets(",0
"protein_file, ligand_file)",0
n_pockets = len(pockets),0
n_pocket_features = BindingPocketFeaturizer.n_features,0
,0
"features = np.zeros((n_pockets, n_pocket_features+n_ligand_features))",0
pocket_features = self.pocket_featurizer.featurize(,0
"protein_file, pockets, pocket_atoms_map, pocket_coords)",0
# Note broadcast operation,0
"features[:, :n_pocket_features] = pocket_features",0
"features[:, n_pocket_features:] = ligand_features",0
dataset = NumpyDataset(X=features),0
pocket_preds = self.model.predict(dataset),0
pocket_pred_proba = np.squeeze(self.model.predict_proba(dataset)),0
,0
# Find pockets which are active,0
active_pockets = [],0
active_pocket_atoms_map = {},0
active_pocket_coords = [],0
for pocket_ind in range(len(pockets)):,0
#################################################### DEBUG,0
"# TODO(rbharath): For now, using a weak cutoff. Fix later.",1
#if pocket_preds[pocket_ind] == 1:,0
if pocket_pred_proba[pocket_ind][1] > .15:,0
#################################################### DEBUG,0
pocket = pockets[pocket_ind],0
active_pockets.append(pocket),0
active_pocket_atoms_map[pocket] = pocket_atoms_map[pocket],0
active_pocket_coords.append(pocket_coords[pocket_ind]),0
"return active_pockets, active_pocket_atoms_map, active_pocket_coords",0
# TODO(LESWING),1
"TODO(rbharath, enf): Figure out why pi_stack is slow and cation_pi",1
causes segfaults.,0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
TODO(rbharath): May want to move this file to S3 so we can ensure it's,1
always available.,0
Prepare receptor,0
Get protein centroid and range,0
"TODO(rbharath): Need to add some way to identify binding pocket, or this is",1
going to be extremely slow!,0
TODO(rbharath): Handle multiple pockets instead of arbitrarily selecting,1
first pocket.,0
Prepare receptor,0
TODO(rbharath): Generalize this so can support mol2 files as well.,1
Write Vina conf file,0
Define locations of log and output files,0
TODO(rbharath): Let user specify the number of poses required.,1
TODO(rbharath): Convert the output pdbqt to a pdb file.,1
Return docked files,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Check returned files exist,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Note this may download autodock Vina...,0
Check returned files exist,0
Note this may download autodock Vina...,0
Check returned files exist,0
"Pocket is of form ((x_min, x_max), (y_min, y_max), (z_min, z_max))",0
box1 contained in box2,0
"box1 in box2, so complete overlap",0
"4/5 atoms in box2 in box1, so 80 % overlap",0
box2 contains box1,0
box1 contains box2,0
"box1 contains box2, box3",0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Test that every atom in pocket maps exists,0
Check that the atoms is actually in protein,0
Add active site to dict,0
The convention used is that the first task is the metric.,0
"TODO(rbharath, joegomes): This doesn't seem like it should be hard-coded as",1
"an option in the Metric class. Instead, this should be possible to move into",0
user-space as a custom task_averager function.,0
"TODO(rbharath, joegomes): What is this magic number?",1
"If there are no nonzero examples, metric is ill-defined.",0
TODO(rbharath): This has been a major source of bugs. Is there a more,1
robust characterization of which metrics require class-probs and which,0
don't?,0
Reshape to handle 1-d edge cases,0
ids = df[id_field].values,0
Set missing data to have weight zero,0
TODO (ytz) this is a bandage solution to reorder the atoms so,1
that they're always in the same canonical order. Presumably this,0
should be correctly implemented in the future for graph mols.,0
Featurize task results iff they exist.,0
Filter out examples where featurization failed.,0
"For prospective data where results are unknown, it makes",0
no sense to have y values or weights.,0
Remove support indices,0
Remove support indices,0
Remove support indices,0
Get task specific entries,0
Now just get weights for this task,0
Get task specific entries,0
Now just get weights for this task,0
Now just get weights for this task,0
Now just get weights for this task,0
Split data into pos and neg lists.,0
No replacement allowed for supports,0
Handle one-d vs. non one-d feature matrices,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
Init the iterator,0
Set initial iterator state,0
support = self.supports[task][self.trial_num],0
Increment and update logic,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
"By invariant of when this is called, can assume num_samples > 0",0
and num_samples < batch_size,0
Fill in batch arrays,0
The -1 indicates that y will be reshaped to have length -1,0
"Set labels to be zero, with zero weights",0
note that this corresponds to the _construct_metadata column order,0
if not len(self.metadata_df):,0
"raise ValueError(""No data in dataset."")",0
return next(self.metadata_df.iterrows())[1]['task_names'],0
Create temp directory to store resharded version,0
Write data in new shards,0
Handle spillover from last shard,0
These columns may be missing is the dataset is unlabelled.,0
"TODO(rbharath): This happens in tests sometimes, but don't understand why?",1
Handle edge case.,0
if data_dir is None:,0
data_dir = tempfile.mkdtemp(),0
The -1 indicates that y will be reshaped to have length -1,0
"raw_data = (X, y, w, ids)",0
Get full dataset in memory,0
Shuffle in memory,0
Write shuffled shards out to disk,0
Shuffle the arrays corresponding to each row in metadata_df,0
TODO (ytz): Under what condition does this exist but the file itself doesn't?,1
Handle edge case with empty indices,0
Find indices which rest in this shard,0
Need to offset indices to fit within shard_size,0
Handle the case of datasets with y/w missing,0
Updating counts,0
Break when all indices have been used up already,0
TODO(rbharath): Get rid of * import,1
Load MUV dataset,0
Do an approximate comparison since splits are sometimes slightly off from,0
the exact fraction.,0
"TODO(rbharath): Transformers don't play nice with reload! Namely,",1
reloading will cause the transform to be reapplied. This is undesirable in,0
almost all cases. Need to understand a method to fix this.,1
def test_shuffle(self):,0
"""""""Test that datasets can be merged.""""""",0
current_dir = os.path.dirname(os.path.realpath(__file__)),0
dataset_file = os.path.join(,0
"current_dir, ""../../models/tests/example.csv"")",0
featurizer = dc.feat.CircularFingerprint(size=1024),0
"tasks = [""log-solubility""]",0
loader = dc.data.CSVLoader(,0
"tasks=tasks, smiles_field=""smiles"", featurizer=featurizer)",0
"dataset = loader.featurize(dataset_file, shard_size=2)",0
"X_orig, y_orig, w_orig, orig_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
orig_len = len(dataset),0
dataset.shuffle(iterations=5),0
"X_new, y_new, w_new, new_ids = (dataset.X, dataset.y, dataset.w,",0
dataset.ids),0
,0
assert len(dataset) == orig_len,0
# The shuffling should have switched up the ordering,0
"assert not np.array_equal(orig_ids, new_ids)",0
# But all the same entries should still be present,0
assert sorted(orig_ids) == sorted(new_ids),0
# All the data should have same shape,0
assert X_orig.shape == X_new.shape,0
assert y_orig.shape == y_new.shape,0
assert w_orig.shape == w_new.shape,0
The shuffling should have switched up the ordering,0
But all the same entries should still be present,0
All the data should have same shape,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
The ids should now store the performed permutation. Check that the,0
original dataset is recoverable.,0
Set some global variables up top,0
Featurize emols dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Check that no support elements are sample from zero-weight samples,0
Generate dummy dataset,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Assert all support elements have been removed,0
Generate dummy dataset,0
Assert all remove elements have been removed,0
Generate dummy dataset,0
Set last n_samples/2 weights to 0,0
Sample from first n_samples/2 elements for support,0
Should lie within first n_samples/2 samples only,0
Generate dummy dataset,0
Create support generator,0
Generate dummy dataset,0
Test on identity matrix,0
Generate random sparse features dataset,0
Test edge case with array of all zeros,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test cases where n_samples < 2*n_samples < batch_size,0
Test cases where n_samples < batch_size,0
Test case where n_samples == batch_size,0
Test case for object featurization.,0
Test case for more complicated object featurization,0
Test case with multidimensional data,0
Test first resharding worked,0
Test second resharding worked,0
Generate data,0
Generate data,0
Generate data,0
Transform it,0
Transform it,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
Splits featurized samples into train/test,0
"splittype = ""random""",0
Splits featurized samples into train/test,0
Now perform move,0
Only for debug!,0
#Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
###### Do featurization,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
Only for debug!,0
Set some global variables up top,0
Make directories to store the raw and featurized datasets.,0
Load dataset,0
Featurize tox21 dataset,0
For debugging purposes,0
###### Do multitask load,0
Do train/valid split.,0
###### Do singletask load,0
################# Do comparison,0
"task_type = ""regression""",0
coding=utf-8,0
Note that transformers have to be undone in reversed order,0
Hack to allow for easy unpickling:,1
http://stefaanlippens.net/pickleproblem,0
"One, but not both, transform_X or tranform_y is true",0
Use fact that bools add as ints in python,0
Control for pathological case with no variance.,0
BalancingTransformer can only transform weights.,0
Compute weighting factors from dataset.,0
Ensure dataset is binary,0
Remove labels with zero weights,0
self.w = dataset.w,0
"TODO (flee2): for transform_y, figure out weights",1
"print(""y will not be transformed by CDFTransformer, for now."")",0
"print(""Cannot undo CDF Transformer, for now."")",0
Need this for transform_y,0
array = np.transpose(array),0
"print(""y will not be transformed by PowerTransformer, for now."")",0
"print(""Cannot undo Power Transformer, for now."")",0
the tf graph here pick up the (K+1) highest similarity values,0
and their indices,0
map the indices to labels,0
generating batch of data by slicing similarity matrix,0
into 100*reference_dataset_length,0
concatenate batches of data together,0
highest similarity is 1: target is in the reference,0
use the following K points,0
"highest less than 1: target not in the reference, use top K points",0
calculate matrix multiplicatin on slices,0
concatenate the slices together,0
list of calculation orders for DAGs,0
stemming from one specific atom in the molecule,0
starting from the adjacency list derived by graphconv featurizer,0
"number of atoms, also number of DAGs",0
"DAG on a molecule with k atoms includes k steps of calculation,",0
each step calculating graph features for one atom.,0
`max_atoms` is the maximum number of steps,0
each iteration generates the DAG starting from atom with index `count`,0
"list of lists, elements represent the calculation orders",0
for atoms in the current graph,0
starting from the target atom with index `count`,0
flags of whether the atom is already included in the DAG,0
atom `count` is in the DAG,0
recording number of radial propagation steps,0
"in the fisrt loop, atoms directly connected to `count` will be added",0
"into the DAG(radial=0), then atoms two-bond away from `count`",0
will be added in the second loop(radial=1).,0
atoms i-bond away will be added in i-th loop,0
"when molecules have separate parts, starting from one part,",0
it is not possible to include all atoms.,0
this break quit the loop when going into such condition,0
reinitialize targets for next iteration,0
atoms connected to current_atom,0
generate the dependency map of current DAG,0
atoms connected to `current_atoms`(and not included in the DAG),0
"are added, and will be the `current_atoms` for next iteration.",0
"into next iteration, finding atoms connected one more bond away",0
"DAG starts from the target atom, calculation should go in reverse",0
`edge[1]` is the parent of `edge[0]`,0
all the parents of `edge[1]` is also the parents of `edge[0]`,0
"after this loop, `parents[i]` includes all parents of atom i",0
manually adding the atom index into its parents list,0
"after this loop, `parents[i][0]` is i, `parents[i][1:]` are all parents of atom i",0
atoms with less parents(farther from the target atom) come first.,0
"graph features of atoms without parents will be first calculated,",0
then atoms with more parents can be calculated in order,0
based on previously calculated graph features.,0
target atom of this DAG will be calculated in the last step,0
padding with `max_atoms`,0
padding,0
"`parents[i]` is the calculation order for the DAG stemming from atom i,",0
which is a max_atoms * max_atoms numpy array after padding,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
transforming y should raise an exception,0
transforming w should raise an exception,0
transforming X should be okay,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Tests logarithmic data transformer with selection.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now a logarithmic version of itself,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
"Check that y_t has zero mean, unit std.",0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is a X transformer,0
Check w is unchanged since this is a y transformer,0
"Check that X_t has zero mean, unit std.",0
np.set_printoptions(threshold='nan'),0
Entries with zero std are not normalized,0
TODO(rbharath): Untransform doesn't work properly for binary feature,1
vectors. Need to figure out what's wrong here. (low priority),1
# Check that untransform does the right thing.,0
"np.testing.assert_allclose(normalization_transformer.untransform(X_t), X)",0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Test CDF transformer on Gaussian normal dataset.,0
Check ids are unchanged.,0
Check X is unchanged since this is an y transformer,0
Check w is unchanged since this is an y transformer,0
Check y is now holding the proper values when sorted.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check X is unchanged since this is a y transformer,0
Check w is unchanged since this is a y transformer,0
Check y is now holding the proper values when sorted.,0
Check ids are unchanged.,0
Check y is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check X is now holding the proper values in each column.,0
Check ids are unchanged.,0
Check X is unchanged since this is an X transformer,0
Check w is unchanged since this is an X transformer,0
Check y is now holding the proper values in each column.,0
Check that untransform does the right thing.,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
Check ids are unchanged.,0
Check X is unchanged since this is a w transformer,0
Check y is unchanged since this is a w transformer,0
Assert that entries with zero weight retain zero weight,0
Check that sum of 0s equals sum of 1s in transformed for each task,0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
"If gzipped, need to compute extension again",0
Tasks are stored in .sdf.csv file,0
Structures are stored in .sdf file,0
First line of user-specified CSV *must* be header.,0
Try older joblib version for legacy files.,0
First line of user-specified CSV *must* be header.,0
First line of user-specified CSV *must* be header.,0
combine dataframes,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): Commenting out this file for now. Will be moved to a new repository.,1
import nglview,0
import tempfile,0
import os,0
import mdtraj as md,0
import numpy as np,0
import tempfile,0
from rdkit import Chem,0
from rdkit.Chem import Draw,0
from itertools import islice,0
"from IPython.display import Image, HTML, display",0
,0
"def combine_mdtraj(protein, ligand):",0
chain = protein.topology.add_chain(),0
"residue = protein.topology.add_residue(""LIG"", chain, resSeq=1)",0
for atom in ligand.topology.atoms:,0
"protein.topology.add_atom(atom.name, atom.element, residue)",0
"protein.xyz = np.hstack([protein.xyz, ligand.xyz])",0
protein.topology.create_standard_bonds(),0
return protein,0
,0
def visualize_complex(complex_mdtraj):,0
"ligand_atoms = [a.index for a in complex_mdtraj.topology.atoms if ""LIG"" in str(a.residue)]",0
"binding_pocket_atoms = md.compute_neighbors(complex_mdtraj, 0.5, ligand_atoms)[0]",0
binding_pocket_residues = list(set([complex_mdtraj.topology.atom(a).residue.resSeq for a in binding_pocket_atoms])),0
binding_pocket_residues = [str(r) for r in binding_pocket_residues],0
"binding_pocket_residues = "" or "".join(binding_pocket_residues)",0
,0
traj = nglview.MDTrajTrajectory( complex_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""cartoon"", ""params"": {",0
"""sele"": ""protein"", ""color"": ""residueindex""",0
"} },",0
"{ ""type"": ""licorice"", ""params"": {",0
"""sele"": ""(not hydrogen) and (%s)"" %  binding_pocket_residues",0
"} },",0
"{ ""type"": ""ball+stick"", ""params"": {",0
"""sele"": ""LIG""",0
} },0
],0
return ngltraj,0
,0
def visualize_ligand(ligand_mdtraj):,0
traj = nglview.MDTrajTrajectory( ligand_mdtraj ) # load file from RCSB PDB,0
ngltraj = nglview.NGLWidget( traj ),0
ngltraj.representations = [,0
"{ ""type"": ""ball+stick"", ""params"": {""sele"": ""all"" } } ]",0
return ngltraj,0
,0
def convert_lines_to_mdtraj(molecule_lines):,0
tempdir = tempfile.mkdtemp(),0
"molecule_file = os.path.join(tempdir, ""molecule.pdb"")",0
"with open(molecule_file, ""wb"") as f:",0
f.writelines(molecule_lines),0
molecule_mdtraj = md.load(molecule_file),0
return molecule_mdtraj,0
,0
def display_images(filenames):,0
"""""""Helper to pretty-print images.""""""",0
imagesList=''.join(,0
"[""<img style='width: 140px; margin: 0px; float: left; border: 1px solid black;' src='%s' />""",0
% str(s) for s in sorted(filenames)]),0
display(HTML(imagesList)),0
,0
"def mols_to_pngs(mols, basename=""test""):",0
"""""""Helper to write RDKit mols to png files.""""""",0
filenames = [],0
"for i, mol in enumerate(mols):",0
"filename = ""%s%d.png"" % (basename, i)",0
"Draw.MolToFile(mol, filename)",0
filenames.append(filename),0
return filenames,0
TODO(rbharath): This is now simple enough that we should probably get rid of,1
Evaluator object to avoid clutter.,0
Compute multitask metrics,0
Compute multitask metrics,0
Loosening atol to see if tests stop failing sporadically,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
TODO(LESWING),1
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
############################################################# TIMING,0
TODO(enf): make array index checking not a try-catch statement.,1
Get the degree id list (which corrects for min_deg),0
Get the size of each degree block,0
Get the the start indices for items in each block,0
Get the node indices when they are reset when the degree changes,0
Convert to numpy array,0
Reorder old atom_features,0
Reorder old deg lists,0
Sort membership,0
Create old to new dictionary. not exactly intuitive,0
Reorder adjacency lists,0
Get numpy version of degree list for indexing,0
"Initialize adj_lists, which supports min_deg = 1 only",0
Parse as deg separated,0
Get indices corresponding to the current degree,0
Extract and save adjacency list for the current degree,0
Construct the slice information,0
Get the cumulative indices after the first index,0
Set indices with zero sized slices to zero to avoid indexing errors,0
TODO(rbharath): Can this be removed?,1
Use random insted of zeros to prevent weird issues with summing to zero,0
Get atoms by degree,0
stack the atoms,0
Sort all atoms by degree.,0
"Get the size of each atom list separated by molecule id, then by degree",0
Get the final size of each degree block,0
"Get the index at which each degree starts, not resetting after each degree",0
And not stopping at any speciic molecule,0
"Get the tensorflow object required for slicing (deg x 2) matrix, with the",0
first column telling the start indices of each degree block and the,0
second colum telling the size of each degree block,0
Input for tensorflow,0
Determines the membership (atom i belongs to membership[i] molecule),0
"Get the index at which each deg starts, resetting after each degree",0
(deg x num_mols) matrix describing the start indices when you count up the atoms,0
"in the final representation, stopping at each molecule,",0
resetting every time the degree changes,0
Gets the degree resetting block indices for the atoms in each molecule,0
"Here, the indices reset when the molecules change, and reset when the",0
degree changes,0
Get the degree id lookup list. It allows us to search for the degree of a,0
molecule mol_id with corresponding atom mol_atom_id using,0
"deg_id_lists[mol_id,mol_atom_id]",0
This is used for convience in the following function (explained below),0
Get the degree id (corrected for min_deg) of the considered atom,0
Return the final index of atom mol_atom_id in molecule mol_id.  Using,0
"the degree of this atom, must find the index in the molecule's original",0
"degree block corresponding to degree id deg_id (second term), and then",0
calculate which index this degree block ends up in the final,0
representation (first term). The sum of the two is the final indexn,0
Initialize the new degree separated adjacency lists,0
Update the old adjcency lists with the new atom indices and then combine,0
all together,0
Iterate through all the molecules,0
Get the adjacency lists for this molecule and current degree id,0
"Correct all atom indices to the final indices, and then save the",0
results into the new adjacency lists,0
Increment once row is done,0
Get the final aggregated molecule,0
RDKit stores atomic coordinates in Angstrom. Atomic unit of length is the,0
bohr (1 bohr = 0.529177 Angstrom). Converting units makes gradient calculation,0
consistent with most QM software packages.,0
Type of data created by this featurizer,0
TODO(rbharath): Should this return a list?,1
Type of data created by this featurizer,0
generate SMILES for fragments,0
Initalize with 1,0
Allow 0 index to correspond to null molecule 1,0
Correct for null,0
"print(6-k-1, id)",0
Correct for last one,0
first `bt_len` features are bond features(if applicable),0
`bt_len`-th feature is if the pair of atoms are in the same ring,0
graph distance between two atoms,0
atoms `radial` bonds away from `a1`,0
atoms less than `radial` bonds away,0
find atoms `radial`+1 bonds away,0
"Since ConvMol is an object and not a numpy array, need to set dtype to",0
object.,0
Get the node features,0
Stack nodes into an array,0
Get bond lists with reverse edges included,0
Get canonical adjacency list,0
Set dtype,0
Atom features,0
Stack nodes into an array,0
Get bond lists,0
Get canonical adjacency list,0
Calculate pair features,0
atom_name is of format RESX-ATOMTYPE,0
where X is a 1 to 4 digit number,0
list-of-available-descriptors.,0
(ytz): This is done to avoid future compatibility issues like inclusion of,0
the 3D descriptors or changing the feature size.,0
check for separate count and SMILES entries for each fragment,0
"Note there is a central carbon of degree 4, with 3 carbons and",0
one nitrogen of degree 1 (connected only to central carbon).,0
5 atoms in compound,0
Get the adjacency lists grouped by degree,0
The 4 outer atoms connected to central carbon,0
Central carbon connected to everything else.,0
Only one carbon,0
"No bonds, so degree adjacency lists are empty",0
3 carbonds in alkane,0
Outer two carbonds are connected to central carbon,0
Central carbon connected to outer two,0
"TODO(rbharath, joegomes): Why does AtomicCoordinates return a list? Is",1
this expected behavior? Need to think about API.,0
Do a manual distance computation and make,0
Test with cutoff 0 angstroms. There should be no neighbors in this case.,0
Test with cutoff 100 angstroms. Everything should be neighbors now.,0
Do a manual distance computation and ensure that selected neighbor is,0
closest since we set max_num_neighbors = 1,0
Splits featurized samples into train/test,0
Artificial feature array.,0
0 atoms of degree 0,0
0 atoms of degree 1,0
4 atoms of degree 2,0
0 atoms of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
0 atoms of degree 6,0
0 atoms of degree 7,0
0 atoms of degree 8,0
0 atoms of degree 9,0
0 atoms of degree 10,0
atom 4 has 0 neighbors,0
atom 0 has 2 neighbors,0
atom 1 has 2 neighbors,0
atom 2 has 2 neighbors,0
atom 3 has 3 neighbors.,0
Verify that atom features have been sorted by atom degree.,0
Sorting is done by atom degree as before. So the ordering goes,0
"4, 0, 1, 2, 3 now in terms of the original ordering. The mapping",0
from new position to old position is,0
"{(4, 0), (0, 1), (1, 2), (2, 3), (3, 4)}. Check that adjacency",0
list respects this reordering and returns correct adjacency list.,0
### First example molecule,0
Artificial feature array.,0
### Second example molecule,0
## Third example molecule,0
Test agglomerate molecule method,0
No atoms of degree 0,0
3 atoms of degree 1,0
8 atoms of degree 2,0
1 atom of degree 3,0
0 atoms of degree 4,0
0 atoms of degree 5,0
Check that atoms are only connected to themselves.,0
Check that there's one atom of each degree.,0
assumes that every array is of the same dimension,0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
returns list of per column sum of non zero elements,0
Compute number of actives needed per task.,0
loop through each column and obtain index required to splice out for,0
required fraction of hits,0
Find the first index where the cumulative number of actives equals,0
the actives_count,0
Note that np.where tells us last index required to exceed,0
"actives_count, so we actually want the following location",0
TODO(rbharath): Refactor this split method to match API of other splits (or,1
potentially refactor those to match this.,0
Handle edge case where frac_split is 1,0
Create weight matrices fpor two haves.,0
copy over up to required index for weight first_split,0
check out if any rows in either w_1 or w_2 are just zeros,0
"Obtain original x, y, and w arrays and shuffle",0
calculate percent split for valid (out of test and valid),0
"split test data into valid and test, treating sub test set also as sparse",0
rem_dataset is remaining portion of dataset,0
Note starts as 1/k since fold starts at 0. Ends at 1 since fold goes up,0
to k-1.,0
JSG Assert that split fractions can be written as proper fractions over 10.,0
This can be generalized in the future with some common demoninator determination.,0
This will work for 80/20 train/test or 80/10/10 train/valid/test (most use cases).,0
Append remaining examples to train,0
Sort by increasing MW,0
(ytz): this is directly copypasta'd from Greg Landrum's clustering example.,0
for m_idx in cluster:,0
"continue until we find an active in all the tasks, otherwise we can't",0
compute a meaningful AUC,0
"TODO (ytz): really, we want at least one active and inactive in both scenarios.",1
TODO (Ytz): for regression tasks we'd stop after only one cluster.,1
Sort from largest to smallest scaffold sets,0
All datasets share features and identifiers by assumption.,0
TODO(rbharath): Get rid of * import,1
Note that the extra task goes to test,0
Number tasks per fold,0
Find the tasks that correspond to this test fold,0
Assert that all arrays look like they should,0
TODO(rbharath): The IndexSplitter() had a bug with splitting sharded,1
data. Make a test for properly splitting of sharded data. Perhaps using,0
reshard() to handle this?,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Verify lengths is 10/k == 2,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
Test singletask case.,0
The split index should partition dataset in half.,0
Test singletask case.,0
Test case where some weights are zero (i.e. masked),0
Set half the positives to have zero weight,0
There are 10 nonzero actives.,0
"The split index should partition this into half, so expect 5",0
The split index should partition dataset in half.,0
Mask half the examples,0
The split index should partition dataset in half.,0
Test singletask case.,0
Should have split cleanly in half (picked random seed to ensure this),0
Check positives are correctly distributed,0
Verify lengths is 100/k == 20,0
Note: This wouldn't work for multitask str,1
assert len(fold_dataset) == n_samples/K,0
Verify that each fold has n_positives/K = 4 positive examples.,0
Verify that compounds in this fold are subset of original compounds,0
Verify that no two folds have overlapping compounds.,0
sparsity is determined by number of w weights that are 0 for a given,0
task structure of w np array is such that each row corresponds to a,0
sample. The loaded sparse dataset has many rows with only zeros,0
verify that there are no rows (samples) in weights matrix w,0
that have no hits.,0
Path to save checkpoint files,0
first layer in model: check that it is an input layer,0
Add losses to graph,0
Loss for each batch element,0
Loss should be a float,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
TODO(rbharath): Don't support example weighting yet.,1
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Arguments,0
Returns,0
task_metadata_rows = {task: [] for task in tasks},0
Extract those datapoints which are present for this task,0
Loading is done on-the-fly,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs, ndim)",0
"Shape (N_atoms, M_nbrs)",0
TODO(rbharath): Note sure if this layer can be called with __call__,1
"meaningfully, so not going to support that functionality for now.",0
"in_layers = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Generate the nb_affine weights and biases,0
Extract atom_features,0
Extract graph topology,0
Perform the mol conv,0
"atom_features = graph_conv(atom_features, deg_adj_lists, deg_slice,",0
"self.max_deg, self.min_deg, self.W_list,",0
self.b_list),0
Sum all neighbors using adjacency matrix,0
Get collection of modified atom features,0
Obtain relevant atoms for this degree,0
Get self atoms,0
Apply hidden affine to relevant atoms and append,0
Determine the min_deg=0 case,0
Only use the self layer,0
Combine all atoms back into the list,0
Tensorflow correctly processes empty lists when using concat,0
"Sum along neighbors as well as self, and store",0
Perform the mol gather,0
"atom_features = graph_pool(atom_features, deg_adj_lists, deg_slice,",0
"self.max_degree, self.min_degree)",0
Tensorflow correctly processes empty lists when using concat,0
Get self atoms,0
Expand dims,0
always deg-1 for deg_adj_lists,0
"x = [atom_features, deg_slice, membership, deg_adj_list placeholders...]",0
Extract graph topology,0
Perform the mol gather,0
Obtain the partitions for each of the molecules,0
Sum over atoms for each molecule,0
Get the final sparse representations,0
Number of rotatable bonds,0
TODO(rbharath): Vina actually sets this per-molecule. See if makes,1
a difference.,0
TODO(rbharath): This layer shouldn't be neighbor-listing. Make,1
neighbors lists an argument instead of a part of this layer.,0
"Shape (N, M)",0
"Shape (N, M)",0
"Shape (N, M)",0
Number of grid cells,0
TODO(rbharath): Support batching,1
"Shape (n_cells, ndim)",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each element of different length uniques_i",0
"List of length N_atoms, each a tensor of shape",0
"(uniques_i, ndim)",0
Add phantom atoms that exist far outside the box,0
"List of length N_atoms, each of shape (1, ndim)",0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
List of length N_atoms each of shape (M_nbrs),0
"N_atoms elts of size (M_nbrs,) each",0
"Shape (N_atoms, 1)",0
Find M_nbrs atoms closest to each cell,0
"Shape (n_cells, M_nbrs)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells)",0
"Shape (N_atoms, n_nbr_cells, M_nbrs)",0
"Shape (N_atoms, n_nbr_cells*M_nbrs)",0
"List of length N_atoms, each element length uniques_i",0
TODO(rbharath): FRAGILE! Uses fact that identity seems to be the first,1
element removed to remove self from list of neighbors. Need to verify,0
this holds more broadly or come up with robust alternative.,0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, ndim) after tile",0
Shape (N_atoms*n_cells),0
"Shape (n_cells, N_atoms)",0
Find k atoms closest to this cell. Notice negative sign since,0
tf.nn.top_k returns *largest* not smallest.,0
"Tensor of shape (n_cells, M_nbrs)",0
"Tile both cells and coords to form arrays of size (N_atoms*n_cells, ndim)",0
"Shape (N_atoms*n_cells, 1) after tile",0
9 neighbors in 2-space,0
TODO(rbharath): Shoddy handling of higher dimensions...,1
Number of cells for cube in 3-space is,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for n_nbr_cells neighbors, which isn't right for boundary cells in",0
the cube.,0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
N: Maximum number of atoms,0
M: Maximum number of neighbors,0
d: Number of coordinates/features/filters,0
B: Batch Size,0
We apply the radial pooling filter before atom type conv,0
to reduce computation,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
"for atom i in a molecule m, this step multiplies together distance info of atom pair(i,j)",0
and embeddings of atom j(both gone through a hidden layer),0
"for atom i, sum the influence from all other atom j in the molecule",0
number of inputs each step,0
Add trainable weights,0
"each atom corresponds to a graph, which is represented by the `max_atoms*max_atoms` int32 matrix of index",0
each gragh include `max_atoms` of steps(corresponding to rows) of calculating graph features,0
target atoms for each step: (batch_size*max_atoms) * max_atoms,0
initialize graph features for each graph,0
initialize graph features for each graph,0
another row of zeros is generated for padded dummy atoms,0
`count`-th step,0
extracting atom features of target atoms: (batch_size*max_atoms) * n_atom_features,0
generating index for graph features used in the inputs,0
"extracting graph features for parents of the target atoms, then flatten",0
shape: (batch_size*max_atoms) * [(max_atoms-1)*n_graph_features],0
concat into the input tensor: (batch_size*max_atoms) * n_inputs,0
DAGgraph_step maps from batch_inputs to a batch of graph_features,0
of shape: (batch_size*max_atoms) * n_graph_features,0
representing the graph features of target atoms in each graph,0
index for targe atoms,0
update the graph features for target atoms,0
Add trainable weights,0
Extract atom_features,0
Extract atom_features,0
sum all graph outputs,0
Layer Management,0
Singular place to hold Tensor objects which don't serialize,0
These have to be reconstructed on restoring from pickle,0
See TensorGraph._get_tf() for more details on lazy construction,0
############################################################# TIMING,0
############################################################# TIMING,0
Arguments,0
Returns,0
Arguments,0
Returns,0
Remove out_tensor from the object to be pickled,0
Pickle itself,0
add out_tensor back to everyone,0
"This isn't a meaningful loss, but just for test",0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
1 and 2 are nbrs. 8 and 9 are nbrs,0
"Now an (N, M) shape",0
TODO(rbharath): Move this into a model directly,1
def test_vina(self):,0
"""""""Test that vina graph can be constructed in TensorGraph.""""""",0
N_protein = 4,0
N_ligand = 1,0
N_atoms = 5,0
M_nbrs = 2,0
ndim = 3,0
start = 0,0
stop = 4,0
nbr_cutoff = 1,0
"X_prot = NumpyDataset(start + np.random.rand(N_protein, ndim) * (stop -",0
start)),0
"X_ligand = NumpyDataset(start + np.random.rand(N_ligand, ndim) * (stop -",0
start)),0
y = NumpyDataset(np.random.rand(,0
"1,))",0
"# TODO(rbharath): Mysteriously, the actual atom types aren't",1
"# used in the current implementation. This is obviously wrong, but need",1
# to dig out why this is happening.,0
"prot_coords = Feature(shape=(N_protein, ndim))",0
"ligand_coords = Feature(shape=(N_ligand, ndim))",0
"labels = Label(shape=(1,))",0
"coords = Concat(in_layers=[prot_coords, ligand_coords], axis=0)",0
"#prot_Z = Feature(shape=(N_protein,), dtype=tf.int32)",0
"#ligand_Z = Feature(shape=(N_ligand,), dtype=tf.int32)",0
"#Z = Concat(in_layers=[prot_Z, ligand_Z], axis=0)",0
"# Now an (N, M) shape",0
nbr_list = NeighborList(,0
"N_protein + N_ligand,",0
"M_nbrs,",0
"ndim,",0
"nbr_cutoff,",0
"start,",0
"stop,",0
in_layers=[coords]),0
"# Shape (N, M)",0
dists = InteratomicL2Distances(,0
"N_protein + N_ligand, M_nbrs, ndim, in_layers=[coords, nbr_list])",0
repulsion = VinaRepulsion(in_layers=[dists]),0
hydrophobic = VinaHydrophobic(in_layers=[dists]),0
hbond = VinaHydrogenBond(in_layers=[dists]),0
gauss_1 = VinaGaussianFirst(in_layers=[dists]),0
gauss_2 = VinaGaussianSecond(in_layers=[dists]),0
"# Shape (N, M)",0
interactions = WeightedLinearCombo(,0
"in_layers=[repulsion, hydrophobic, hbond, gauss_1, gauss_2])",0
"# Shape (N, M)",0
"thresholded = Cutoff(in_layers=[dists, interactions])",0
"# Shape (N, M)",0
free_energies = VinaNonlinearity(in_layers=[thresholded]),0
free_energy = ReduceSum(in_layers=[free_energies]),0
"loss = L2Loss(in_layers=[free_energy, labels])",0
"databag = Databag({prot_coords: X_prot, ligand_coords: X_ligand, labels: y})",0
"tg = dc.models.TensorGraph(learning_rate=0.1, use_queue=False)",0
tg.set_loss(loss),0
tg.fit_generator(databag.iterbatches(epochs=1)),0
TODO(rbharath): This test should pass. Fix it!,1
def test_graph_pool(self):,0
"""""""Test that GraphPool can be invoked.""""""",0
out_channels = 2,0
"n_atoms = 4 # In CCC and C, there are 4 atoms",0
"raw_smiles = ['CCC', 'C']",0
mols = [rdkit.Chem.MolFromSmiles(s) for s in raw_smiles],0
featurizer = ConvMolFeaturizer(),0
mols = featurizer.featurize(mols),0
multi_mol = ConvMol.agglomerate_mols(mols),0
atom_features = multi_mol.get_atom_features(),0
degree_slice = multi_mol.deg_slice,0
membership = multi_mol.membership,0
deg_adjs = multi_mol.get_deg_adjacency_lists()[1:],0
with self.test_session() as sess:,0
"atom_features = tf.convert_to_tensor(atom_features, dtype=tf.float32)",0
"degree_slice = tf.convert_to_tensor(degree_slice, dtype=tf.int32)",0
"membership = tf.convert_to_tensor(membership, dtype=tf.int32)",0
deg_adjs_tf = [],0
for deg_adj in deg_adjs:,0
"deg_adjs_tf.append(tf.convert_to_tensor(deg_adj, dtype=tf.int32))",0
"args = [atom_features, degree_slice, membership] + deg_adjs_tf",0
out_tensor = GraphPool(out_channels)(*args),0
sess.run(tf.global_variables_initializer()),0
out_tensor = out_tensor.eval(),0
"assert out_tensor.shape == (n_atoms, out_channels)",0
TODO(rbharath): Why is it 2*n_features instead of n_features?,1
############################################################# TIMING,0
############################################################# TIMING,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
import tensorflow as tf,0
from deepchem.models.tensorgraph.tensor_graph import MultiTaskTensorGraph,0
"from deepchem.models.tensorgraph.layers import Input, Dense, Concat, SoftMax, SoftMaxCrossEntropy, Layer",0
,0
,0
class WeightedError(Layer):,0
,0
"def __call__(self, *parents):",0
"entropy, weights = parents[0], parents[1]",0
self.out_tensor = tf.reduce_sum(entropy.out_tensor * weights.out_tensor),0
return self.out_tensor,0
,0
,0
"def tensorGraphMultitaskClassifier(n_tasks,",0
"n_features,",0
"layer_sizes=[500],",0
"bypass_layer_sizes=[100],",0
model_dir=None):,0
"""""""",0
TODO(LESWING) Add Dropout and regularization,1
,0
Parameters,0
----------,0
n_tasks,0
n_features,0
layer_sizes,0
bypass_layer_sizes,0
model_dir,0
,0
Returns,0
-------,0
,0
"""""""",0
g = MultiTaskTensorGraph(model_dir=model_dir),0
"in_layer = Input(shape=(None, n_features), name=""FEATURE"")",0
g.add_layer(in_layer),0
g.add_feature(in_layer),0
,0
# Shared Dense Layers,0
prev_layer = in_layer,0
dense_layers = [],0
for i in range(len(layer_sizes)):,0
dense = Dense(,0
"out_channels=layer_sizes[i],",0
"name=""SDENSE%s"" % i,",0
activation_fn=tf.nn.relu),0
"g.add_layer(dense, parents=[prev_layer])",0
dense_layers.append(dense),0
prev_layer = dense,0
,0
# Individual Bypass Layers,0
costs = [],0
for task in range(n_tasks):,0
prev_layer = in_layer,0
for i in range(len(bypass_layer_sizes)):,0
dense = Dense(,0
"out_channels=bypass_layer_sizes[i], name=""BDENSE%s_%s"" % (i, task))",0
"g.add_layer(dense, parents=[prev_layer])",0
prev_layer = dense,0
"joined_layer = Concat(name=""JOIN%s"" % task)",0
"g.add_layer(joined_layer, parents=[dense_layers[-1], prev_layer])",0
,0
"classification = Dense(out_channels=2, name=""GUESS%s"" % task)",0
"g.add_layer(classification, parents=[joined_layer])",0
,0
"softmax = SoftMax(name=""SOFTMAX%s"" % task)",0
"g.add_layer(softmax, parents=[classification])",0
g.add_output(softmax),0
,0
"label = Input(shape=(None, 2), name=""LABEL%s"" % task)",0
g.add_layer(label),0
g.add_label(label),0
,0
"cost = SoftMaxCrossEntropy(name=""COST%s"" % task)",0
"g.add_layer(cost, parents=[label, classification])",0
costs.append(cost),0
,0
"entropy = Concat(name=""ENT"")",0
"g.add_layer(entropy, parents=costs)",0
,0
"task_weights = Input(shape=(None, n_tasks), name=""W"")",0
g.add_layer(task_weights),0
g.set_task_weights(task_weights),0
,0
"loss = WeightedError(name=""ERROR"")",0
"g.add_layer(loss, parents=[entropy, task_weights])",0
g.set_loss(loss),0
,0
return g,0
update model with best param,0
Find optimal n_estimators based on original learning_rate,0
and early_stopping_rounds,0
"Since test size is 20%, when retrain model to whole data, expect",0
n_estimator increased to 1/0.8 = 1.25 time.,0
Make sure user specified params are in the grid.,0
Change params back original params,0
TODO (LESWING) Lazy Load,1
TODO (LESWING) Lazy Load,1
Generate dummy dataset,0
Fit trained model,0
Check same predictions are made.,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Load trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Fit trained model,0
Eval model on train/test,0
Test Parameter getting and setting,0
Fit trained model,0
Eval model on train/test,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
"TODO(rbharath): This breaks with optimizer=""momentum"". Why?",1
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
n_samples = 100,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Gather Projection,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Fit trained model,0
Eval model on train,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply an attention lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .85,0
#################################################### DEBUG,0
Load mini log-solubility dataset.,0
Add layers,0
"output will be (n_atoms, 64)",0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
"output will be (n_atoms, 64)",0
"output will be (n_atoms, 64)",0
Apply a residual lstm layer,0
"Fit trained model. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly.,0
"Eval model on train. Dataset has 6 positives and 4 negatives, so set",0
n_pos/n_neg accordingly. Note that support is *not* excluded (so we,0
can measure model has memorized support).  Replacement is turned off to,0
ensure that support contains full training set. This checks that the,0
model has mastered memorization of provided support.,0
Measure performance on 0-th task.,0
#################################################### DEBUG,0
TODO(rbharath): Check if something went wrong here...,1
Measure performance on 0-th task.,0
assert scores[0] > .9,0
#################################################### DEBUG,0
Generate dummy dataset,0
Fit trained model,0
Eval model on train,0
def test_singletask_to_multitask_classification(self):,0
n_features = 10,0
n_tasks = 17,0
tasks = range(n_tasks),0
# Define train dataset,0
n_train = 100,0
"X_train = np.random.rand(n_train, n_features)",0
"y_train = np.random.randint(2, size=(n_train, n_tasks))",0
w_train = np.ones_like(y_train),0
"ids_train = [""C""] * n_train",0
train_dataset = dc.data.DiskDataset.from_numpy(,0
"X_train, y_train, w_train, ids_train)",0
# Define test dataset,0
n_test = 10,0
"X_test = np.random.rand(n_test, n_features)",0
"y_test = np.random.randint(2, size=(n_test, n_tasks))",0
w_test = np.ones_like(y_test),0
"ids_test = [""C""] * n_test",0
test_dataset = dc.data.DiskDataset.from_numpy(,0
"X_test, y_test, w_test, ids_test)",0
classification_metrics = [dc.metrics.Metric(dc.metrics.roc_auc_score)],0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
multitask_model = dc.models.SingletaskToMultitask(,0
"tasks, model_builder)",0
# Fit trained model,0
multitask_model.fit(train_dataset),0
multitask_model.save(),0
# Eval multitask_model on train/test,0
"_ = multitask_model.evaluate(train_dataset, classification_metrics)",0
"_ = multitask_model.evaluate(test_dataset, classification_metrics)",0
Generate data,0
Cleanup,0
Generate dummy dataset,0
Fit trained model,0
Eval model on test,0
Eval model on train,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
def test_sklearn_classification(self):,0
"""""""Test that sklearn models can learn on simple classification datasets.""""""",0
np.random.seed(123),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.NumpyDataset(X_train, y_train)",0
"test_dataset = dc.data.NumpyDataset(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
sklearn_model = LogisticRegression(),0
model = dc.models.SklearnModel(sklearn_model),0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
assert scores[classification_metric.name] > .5,0
def test_sklearn_multitask_classification(self):,0
"""""""Test that sklearn models can learn on simple multitask classification.""""""",0
np.random.seed(123),0
n_tasks = 4,0
tasks = range(n_tasks),0
dataset = sklearn.datasets.load_digits(n_class=2),0
"X, y = dataset.data, dataset.target",0
"y = np.reshape(y, (len(y), 1))",0
y = np.hstack([y] * n_tasks),0
,0
frac_train = .7,0
n_samples = len(X),0
n_train = int(frac_train*n_samples),0
"X_train, y_train = X[:n_train], y[:n_train]",0
"X_test, y_test = X[n_train:], y[n_train:]",0
"train_dataset = dc.data.DiskDataset.from_numpy(X_train, y_train)",0
"test_dataset = dc.data.DiskDataset.from_numpy(X_test, y_test)",0
classification_metric = dc.metrics.Metric(dc.metrics.roc_auc_score),0
def model_builder(model_dir):,0
sklearn_model = LogisticRegression(),0
"return dc.models.SklearnModel(sklearn_model, model_dir)",0
"model = dc.models.SingletaskToMultitask(tasks, model_builder)",0
# Fit trained model,0
model.fit(train_dataset),0
model.save(),0
# Eval model on test,0
"scores = model.evaluate(test_dataset, [classification_metric])",0
for score in scores[classification_metric.name]:,0
assert score > .5,0
Set early stopping round = n_estimators so that esr won't work,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Fit trained model,0
Eval model on test,0
Logistic regression doesn't support weights,0
Consistency check,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
Run training op.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
"""""""Ops for graph construction.""""""",0
from __future__ import print_function,0
from __future__ import division,0
from __future__ import unicode_literals,0
,0
import sys,0
import traceback,0
import tensorflow as tf,0
from keras import backend as K,0
,0
"def cosine_distances(test, support):",0
"""""""Computes pairwise cosine distances between provided tensors",0
,0
Parameters,0
----------,0
test: tf.Tensor,0
"Of shape (n_test, n_feat)",0
support: tf.Tensor,0
"Of shape (n_support, n_feat)",0
,0
Returns,0
-------,0
tf.Tensor:,0
"Of shape (n_test, n_support)",0
"""""""",0
"rnorm_test = tf.rsqrt(tf.reduce_sum(tf.square(test), 1,",0
keep_dims=True)) + K.epsilon(),0
"rnorm_support = tf.rsqrt(tf.reduce_sum(tf.square(support), 1,",0
keep_dims=True)) + K.epsilon(),0
test_normalized = test * rnorm_test,0
support_normalized = support * rnorm_support,0
,0
# Transpose for mul,0
"support_normalized_t = tf.transpose(support_normalized, perm=[1,0])",0
"g = tf.matmul(test_normalized, support_normalized_t)  # Gram matrix",0
return g,0
,0
"def euclidean_distance(test, support, max_dist_sq=20):",0
"""""""Computes pairwise euclidean distances between provided tensors",0
,0
TODO(rbharath): BROKEN! THIS DOESN'T WORK!,1
,0
Parameters,0
----------,0
test: tf.Tensor,0
"Of shape (n_test, n_feat)",0
support: tf.Tensor,0
"Of shape (n_support, n_feat)",0
"max_dist_sq: float, optional",0
Maximum pairwise distance allowed.,0
,0
Returns,0
-------,0
tf.Tensor:,0
"Of shape (n_test, n_support)",0
"""""""",0
"test = tf.expand_dims(test, 1)",0
"support = tf.expand_dims(support, 0)",0
"g = -tf.maximum(tf.reduce_sum(tf.square(test - support), 2), max_dist_sq)",0
return g,0
,0
"def add_bias(tensor, init=None, name=None):",0
"""""""Add a bias term to a tensor.",0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Variable tensor.,0
init: float,0
Bias initializer. Defaults to zero.,0
name: str,0
Name for this op. Defaults to tensor.op.name.,0
,0
Returns,0
-------,0
tf.Tensor,0
A biased tensor with the same shape as the input tensor.,0
"""""""",0
if init is None:,0
init = tf.zeros([tensor.get_shape()[-1].value]),0
"with tf.name_scope(name, tensor.op.name, [tensor]):",0
"b = tf.Variable(init, name='b')",0
"return tf.nn.bias_add(tensor, b)",0
,0
,0
"def dropout(tensor, dropout_prob, training=True, training_only=True):",0
"""""""Random dropout.",0
,0
"This implementation supports ""always-on"" dropout (training_only=False), which",0
"can be used to calculate model uncertainty. See Gal and Ghahramani,",0
http://arxiv.org/abs/1506.02142.,0
,0
"NOTE(user): To simplify the implementation, I have chosen not to reverse",0
the scaling that occurs in tf.nn.dropout when using dropout during,0
inference. This shouldn't be an issue since the activations will be scaled,0
by the same constant in both training and inference. This means that there,0
are no training-time differences between networks that use dropout during,0
inference and those that do not.,0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Input tensor.,0
dropout_prob: float,0
Float giving dropout probability for weights (NOT keep probability).,0
training_only: bool,0
"Boolean. If True (standard dropout), apply dropout only",0
"during training. If False, apply dropout during inference as well.",0
,0
Returns,0
-------,0
tf.Tensor:,0
A tensor with the same shape as the input tensor.,0
"""""""",0
if not dropout_prob:,0
return tensor  # do nothing,0
keep_prob = 1.0 - dropout_prob,0
if training or not training_only:,0
"tensor = tf.nn.dropout(tensor, keep_prob)",0
return tensor,0
,0
,0
"def fully_connected_layer(tensor, size=None, weight_init=None, bias_init=None,",0
name=None):,0
"""""""Fully connected layer.",0
,0
Parameters,0
----------,0
tensor: tf.Tensor,0
Input tensor.,0
size: int,0
Number of output nodes for this layer.,0
weight_init: float,0
Weight initializer.,0
bias_init: float,0
Bias initializer.,0
name: str,0
Name for this op. Defaults to 'fully_connected'.,0
,0
Returns,0
-------,0
tf.Tensor:,0
A new tensor representing the output of the fully connected layer.,0
,0
Raises,0
------,0
ValueError,0
If input tensor is not 2D.,0
"""""""",0
if len(tensor.get_shape()) != 2:,0
"raise ValueError('Dense layer input must be 2D, not %dD'",0
% len(tensor.get_shape())),0
if weight_init is None:,0
num_features = tensor.get_shape()[-1].value,0
"weight_init = tf.truncated_normal([num_features, size], stddev=0.01)",0
if bias_init is None:,0
bias_init = tf.zeros([size]),0
,0
"with tf.name_scope(name, 'fully_connected', [tensor]):",0
"w = tf.Variable(weight_init, name='w', dtype=tf.float32)",0
"b = tf.Variable(bias_init, name='b', dtype=tf.float32)",0
"return tf.nn.xw_plus_b(tensor, w, b)",0
,0
"def weight_decay(penalty_type, penalty):",0
"""""""Add weight decay.",0
,0
Args:,0
model: TensorflowGraph.,0
,0
Returns:,0
A scalar tensor containing the weight decay cost.,0
,0
Raises:,0
NotImplementedError: If an unsupported penalty type is requested.,0
"""""""",0
variables = [],0
# exclude bias variables,0
for v in tf.trainable_variables():,0
if v.get_shape().ndims == 2:,0
variables.append(v),0
,0
with tf.name_scope('weight_decay'):,0
if penalty_type == 'l1':,0
cost = tf.add_n([tf.reduce_sum(tf.abs(v)) for v in variables]),0
elif penalty_type == 'l2':,0
cost = tf.add_n([tf.nn.l2_loss(v) for v in variables]),0
else:,0
raise NotImplementedError('Unsupported penalty_type %s' % penalty_type),0
cost *= penalty,0
"tf.scalar_summary('Weight Decay Cost', cost)",0
return cost,0
,0
,0
"def multitask_logits(features, num_tasks, num_classes=2, weight_init=None,",0
"bias_init=None, dropout_prob=None, name=None):",0
"""""""Create a logit tensor for each classification task.",0
,0
Args:,0
features: A 2D tensor with dimensions batch_size x num_features.,0
num_tasks: Number of classification tasks.,0
num_classes: Number of classes for each task.,0
weight_init: Weight initializer.,0
bias_init: Bias initializer.,0
dropout_prob: Float giving dropout probability for weights (NOT keep,0
probability).,0
name: Name for this op. Defaults to 'multitask_logits'.,0
,0
Returns:,0
A list of logit tensors; one for each classification task.,0
"""""""",0
logits_list = [],0
with tf.name_scope('multitask_logits'):,0
for task_idx in range(num_tasks):,0
"with tf.name_scope(name,",0
"('task' + str(task_idx).zfill(len(str(num_tasks)))), [features]):",0
logits_list.append(,0
"logits(features, num_classes, weight_init=weight_init,",0
"bias_init=bias_init, dropout_prob=dropout_prob))",0
return logits_list,0
,0
,0
"def logits(features, num_classes=2, weight_init=None, bias_init=None,",0
"dropout_prob=None, name=None):",0
"""""""Create a logits tensor for a single classification task.",0
,0
You almost certainly don't want dropout on there -- it's like randomly setting,0
the (unscaled) probability of a target class to 0.5.,0
,0
Args:,0
features: A 2D tensor with dimensions batch_size x num_features.,0
num_classes: Number of classes for each task.,0
weight_init: Weight initializer.,0
bias_init: Bias initializer.,0
dropout_prob: Float giving dropout probability for weights (NOT keep,0
probability).,0
name: Name for this op.,0
,0
Returns:,0
A logits tensor with shape batch_size x num_classes.,0
"""""""",0
"with tf.name_scope(name, 'logits', [features]) as name:",0
return dropout(,0
"fully_connected_layer(features, num_classes, weight_init=weight_init,",0
"bias_init=bias_init, name=name),",0
dropout_prob),0
,0
,0
"def softmax_N(tensor, name=None):",0
"""""""Apply softmax across last dimension of a tensor.",0
,0
Args:,0
tensor: Input tensor.,0
"name: Name for this op. If None, defaults to 'softmax_N'.",0
,0
Returns:,0
A tensor with softmax-normalized values on the last dimension.,0
"""""""",0
"with tf.name_scope(name, 'softmax_N', [tensor]):",0
exp_tensor = tf.exp(tensor),0
reduction_indices = [tensor.get_shape().ndims - 1],0
"return tf.div(exp_tensor,",0
"tf.reduce_sum(exp_tensor,",0
"reduction_indices=reduction_indices,",0
keep_dims=True)),0
,0
"def optimizer(optimizer=""adam"", learning_rate=.001, momentum=.9):",0
"""""""Create model optimizer.",0
,0
Parameters,0
----------,0
"optimizer: str, optional",0
Name of optimizer,0
"learning_rate: float, optional",0
Learning rate for algorithm,0
"momentum: float, optional",0
Momentum rate,0
,0
Returns,0
-------,0
A training Optimizer.,0
,0
Raises:,0
NotImplementedError: If an unsupported optimizer is requested.,0
"""""""",0
# TODO(user): gradient clipping (see Minimize),0
if optimizer == 'adagrad':,0
train_op = tf.train.AdagradOptimizer(learning_rate),0
elif optimizer == 'adam':,0
train_op = tf.train.AdamOptimizer(learning_rate),0
elif optimizer == 'momentum':,0
"train_op = tf.train.MomentumOptimizer(learning_rate,",0
momentum),0
elif optimizer == 'rmsprop':,0
"train_op = tf.train.RMSPropOptimizer(learning_rate,",0
momentum),0
elif optimizer == 'sgd':,0
train_op = tf.train.GradientDescentOptimizer(learning_rate),0
else:,0
raise NotImplementedError('Unsupported optimizer %s' % optimizer),0
return train_op,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
get the divisor,0
compute the requested central moment,0
"note that mean is a raw moment, not a central moment",0
TODO(user): median is not implemented yet in TensorFlow,1
-*- coding: utf-8 -*-,0
"due to the different shape of weight(ndims=2) and bias(ndims=1),",0
will using this version for logreg,0
exclude bias variables,0
setting up n_tasks nodes(output nodes),0
label placeholders with size batch_size * 1,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
using self-defined regularization,0
adding output nodes of sigmoid function,0
"fix the size to be [?,1]",0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
transfer 2D prediction tensor to 2D x n_classes(=2),0
reshape to batch_size x n_tasks x ...,0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
"layer has shape [None, layer_sizes[i]]",0
"top_multitask_layer has shape [None, layer_sizes[-1]]",0
TODO(rbharath): Might want to make it feasible to have multiple,1
bypass layers.,0
Construct task bypass layer,0
"bypass_layer has shape [None, bypass_layer_sizes[i]]",0
"task_layer has shape [None, layer_sizes[-1] + bypass_layer_sizes[-1]]",0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Add the input features.,0
Add the dense layers,0
Compute the loss function for each label.,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Dummy placeholders,0
Run fit transformers on dummy dataset to determine n_features after transformation,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
Consistency check,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Create placeholders,0
Handle output layer,0
Iterate over all previous tasks.,0
prev_layers is a list with elements of size,0
"(batch_size, layer_sizes[i-1])",0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
Dummy placeholders,0
Dummy placeholders,0
run eval data through the model,0
"Shape (n_tasks, n__samples)",0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
with self._get_shared_session(train=True) as sess:,0
Save an initial checkpoint.,0
Always save a final checkpoint when complete.,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
"orig_dict[""labels_%d"" % task] = np.reshape(y_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""labels_%d"" % task] = np.zeros((n_samples, 1))",0
"orig_dict[""weights_%d"" % task] = np.reshape(w_b[:, task], (n_samples, 1))",0
Dummy placeholders,0
"orig_dict[""weights_%d"" % task] = np.zeros((n_samples, 1))",0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
############################################################# TIMING,0
############################################################# TIMING,0
Turns out there are valid cases where we don't want pad-batches,0
on by default.,0
"dataset.iterbatches(batch_size, pad_batches=True)):",0
if epoch%checkpoint_interval == checkpoint_interval-1:,0
"saver.save(sess, self._save_path, global_step=epoch)",0
############################################################# TIMING,0
############################################################# TIMING,0
"(n_samples, n_classes)",0
"(n_samples, n_tasks, n_classes)",0
Save hyperparameters,0
Guard variable to make sure we don't Restore() this model,0
from a disk checkpoint more than once.,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Lazily created by _get_shared_session().,0
"Cache of TensorFlow scopes, to prevent '_1' appended scope names",0
when subclass-overridden methods use the same scopes.,0
Setup graph,0
Note that we divide by the batch size and not the number of,0
"non-zero weight examples in the batch.  Also, instead of using",0
tf.reduce_mean (which can put ops on the CPU) we explicitly,0
calculate with div/sum so it stays on the GPU.,0
aggregated costs,0
weight decay,0
############################################################# TIMING,0
############################################################# TIMING,0
Save an initial checkpoint.,0
Define the code that runs on a separate thread to feed data into the queue.,0
Main training loop.,0
Run training op.,0
We have reached the end of an epoch.,0
We have reached the end of the data.,0
Always save a final checkpoint when complete.,0
############################################################# TIMING,0
############################################################# TIMING,0
allow_soft_placement=True allows ops without a GPU implementation,0
to run on the CPU instead.,0
TODO(rbharath): Is setting train=False right here?,1
Discard any padded predictions,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
Special case to handle singletasks.,0
The iterbatches does padding with zero-weight examples on the last batch.,0
Remove padded examples.,0
TODO(rbharath): Verify this can be safely removed.,1
"def evaluate(self, dataset, metrics, transformers=[]):",0
"""""""",0
Evaluates the performance of this model on specified dataset.,0
,0
Parameters,0
----------,0
dataset: dc.data.Dataset,0
Dataset object.,0
metric: deepchem.metrics.Metric,0
Evaluation metric,0
transformers: list,0
List of deepchem.transformers.Transformer,0
Returns,0
-------,0
dict,0
Maps tasks to scores under metric.,0
"""""""",0
"evaluator = Evaluator(self, dataset, transformers)",0
scores = evaluator.compute_model_performance(metrics),0
return scores,0
checkpoints look like logdir/model.ckpt-N,0
"self._save_path is ""logdir/model.ckpt""",0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Note that softmax is already applied in construct_grpah,0
run eval data through the model,0
reshape to batch_size x n_tasks x ...,0
Handle edge case when batch-size is 1.,0
Prune away any padding that was added,0
Handle case of 0-dimensional scalar output,0
!/usr/bin/python,0
,0
Copyright 2015 Google Inc.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
parse CheckpointState proto,0
parse path to actual checkpoint,0
the provided mask has to be the same shape as features,0
test k = 1..4,0
central moments,0
standardized moments,0
central across one axis,0
standardized across one axis,0
Fit just on task zero,0
Notice that we keep the session open,0
Fit on task one,0
The predictions for task zero should not change after training,0
on task one.,0
Keep track of the layers,0
############################################ DEBUG,0
"print(""start - add()"")",0
"print(""self.output"")",0
print(self.output),0
############################################ DEBUG,0
"For graphical layers, add connectivity placeholders",0
############################################ DEBUG,0
"print(""end- add()"")",0
"print(""self.output"")",0
print(self.output),0
############################################ DEBUG,0
Add layer to the layer list,0
Keep track of the layers,0
Create graph topology and x,0
Keep track of the layers,0
Whether or not we have used the GraphGather layer yet,0
Update new value of x,0
Update new value of x,0
Update new value of x,0
Get train function,0
Initialize,0
################################################################### DEBUG,0
self.test_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""label_placeholder""))",0
self.test_weight_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=(self.test_batch_size),",0
"name=""weight_placeholder""))",0
TODO(rbharath): Should weights for the support be used?,1
Support labels,0
self.support_label_placeholder = Input(,0
"tensor=tf.placeholder(dtype='float32', shape=[self.support_batch_size],",0
"name=""support_label_placeholder""))",0
################################################################### DEBUG,0
Generate dictionary elements for support,0
Get graph information for test,0
Generate dictionary elements for test,0
Perform the optimization,0
Create different support sets,0
Get batch to try it out on,0
"Train on support set, batch pair",0
Get featurization for test,0
"Shape (n_test, n_feat)",0
Get featurization for support,0
"Shape (n_support, n_feat)",0
Computes the inner part c() of the kernel,0
(the inset equation in section 2.1.1 of Matching networks paper).,0
Normalize,0
TODO(rbharath): euclidean kernel is broken!,1
elif self.similarity == 'euclidean':,0
"g = model_ops.euclidean_distance(test_feat, support_feat)",0
"Note that gram matrix g has shape (n_test, n_support)",0
"soft corresponds to a(xhat, x_i) in eqn (1) of Matching Networks paper",0
https://arxiv.org/pdf/1606.04080v1.pdf,0
"Computes softmax across axis 1, (so sums distances to support set for",0
each test entry) to get attention vector,0
"Shape (n_test, n_support)",0
Weighted sum of support labels,0
"Shape (n_support, 1)",0
pred is yhat in eqn (1) of Matching Networks.,0
"Shape squeeze((n_test, n_support) * (n_support, 1)) = (n_test,)",0
"Clip softmax probabilities to range [epsilon, 1-epsilon]",0
"Shape (n_test,)",0
Convert to logit space using inverse sigmoid (logit) function,0
logit function: log(pred) - log(1-pred),0
Used to invoke tf.nn.sigmoid_cross_entropy_with_logits,0
in Cross Entropy calculation.,0
"Shape (n_test,)",0
Get scores,0
Remove padded elements,0
Get scores,0
pred corresponds to prob(example == 1),0
Remove padded elements,0
Get batches,0
TODO(rbharath): Add test for get_task_dataset_minus_support for,1
multitask case with missing data...,0
Join information for all tasks.,0
TODO(rbharath): Find a way to get rid of this import?,1
Extract model info,0
Get graph topology for x,0
Building outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
TODO(rbharath): Find a way to get rid of this import?,1
Obtain appropriate loss function,0
Extract model info,0
Get graph topology for x,0
############################################################ DEBUG,0
self.feat_dim = self.model.get_num_output_features(),0
############################################################ DEBUG,0
Raw logit outputs,0
Set epsilon,0
Initialize,0
"Path to save checkpoint files, which matches the",0
replicated supervisor's default path.,0
Create target inputs,0
############################################################### DEBUG,0
"print(""multitask classifier"")",0
"print(""feat"")",0
print(feat),0
############################################################### DEBUG,0
Get train function,0
TODO(rbharath): I believe this is total amount of data,1
Get graph information,0
"TODO (hraut->rhbarath): num_datapoints should be a vector, with ith element being",1
the number of labeled data points in target_i. This is to normalize each task,0
num_dat_dict = {self.num_datapoints_placeholder : self.},0
Get other optimizer information,0
TODO(rbharath): Figure out how to handle phase appropriately,1
"label_placeholder of shape (batch_size, n_tasks). Split into n_tasks",0
"tensors of shape (batch_size,)",0
Convert the labels into one-hot vector encodings.,0
Since we use tf.nn.softmax_cross_entropy_with_logits note that we pass in,0
un-softmaxed logits rather than softmax outputs.,0
It's ok to divide by just the batch_size rather than the number of nonzero,0
examples (effect averages out),0
Perform the optimization,0
TODO(rbharath): Disabling saving for now to try to debug.,1
run eval data through the model,0
"Shape (n_samples, n_tasks)",0
run eval data through the model,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Merge mol conv objects,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
molecule * atom(graph) => step => features,0
molecule * atom(graph) => step,0
molecule * atom(graph) => step,0
Define the list of tensors to be used as topology,0
calculation orders for a batch of molecules,0
padding atom features vector of each molecule with 0,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
Generate dicts,0
self.n_atoms = n_atoms,0
Define the list of tensors to be used as topology,0
Extract atom numbers,0
number of atoms in each molecule,0
index of pair features,0
number of pairs for each atom,0
atom features,0
pair features,0
Generate dicts,0
Associate each atom with cell it belongs to. O(N*n_cells),0
"Shape (n_cells, k)",0
"Shape (N, 1)",0
Associate each cell with its neighbor cells. Assumes periodic boundary,0
"conditions, so does wrapround. O(constant)",0
"Shape (n_cells, 26)",0
"Shape (N, 26)",0
"coords of shape (N, ndim)",0
"Shape (N, 26, k, ndim)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k)",0
"Shape (N, 26, k, ndim)",0
"For smaller systems especially, the periodic boundary conditions can",0
result in neighboring cells being seen multiple times. Maybe use tf.unique to,0
make sure duplicate neighbors are ignored?,0
TODO(rbharath): How does distance need to be modified here to,1
account for periodic boundary conditions?,0
"Shape (N, 26, k)",0
"Shape (N, 26*k)",0
TODO(rbharath): This will cause an issue with duplicates!,1
"Shape (N, M)",0
"N elts of size (M,) each",0
"Shape (N, 26*k)",0
"N elts of size (26*k,) each",0
"N elts of size (M,) each",0
"Shape (N, M)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
"N tensors of shape (n_cells, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of N tensors of shape (n_cells, 1)",0
Lists of length N,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
TODO(rbharath): tf.stack for tf 1.0,0
"Tensor of shape (n_cells, k, ndim)",0
atoms_in_cells = tf.stack(atoms_in_cells),0
"Tensor of shape (26, k, ndim)",0
"Reshape to (26*k, ndim)",0
"Subtract out atom vector. Still of shape (26*k, ndim) due to broadcast.",0
"Dists of shape (26*k, 1)",0
"Of shape (k, ndim)",0
"Tile both cells and coords to form arrays of size (n_cells*N, ndim)",0
TODO(rbharath): Change this for tf 1.0,1
"n_cells tensors of shape (N, 1)",0
"Shape (N*n_cells, 1) after tile",0
"List of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (k, ndim)",0
"Tensor of shape (n_cells, k)",0
TODO(rbharath):,1
- Need to find neighbors of the cells (+/- 1 in every dimension).,0
- Need to group closest atoms amongst cell neighbors,0
- Need to do another top_k to find indices of closest neighbors.,0
- Return N lists corresponding to neighbors for every atom.,0
TODO(rbharath): Do we need to handle periodic boundary conditions,1
TODO(rbharath): This doesn't handle boundaries well. We hard-code,1
"looking for 26 neighbors, which isn't right for boundary cells in",0
the cube.,0
Number of neighbors of central cube in 3-space is,0
3^2 (top-face) + 3^2 (bottom-face) + (3^2-1) (middle-band),0
TODO(rbharath),1
n_cells = int(cells.get_shape()[0]),0
"Tile cells to form arrays of size (n_cells*n_cells, ndim)",0
"Two tilings (a, b, c, a, b, c, ...) vs. (a, a, a, b, b, b, etc.)",0
"Tile (a, a, a, b, b, b, etc.)",0
"Tile (a, b, c, a, b, c, ...)",0
"Lists of n_cells tensors of shape (N, 1)",0
Lists of length n_cells,0
Lists of length n_cells,0
Get indices of k atoms closest to each cell point,0
"n_cells tensors of shape (26,)",0
TODO(rbharath): Make this handle minibatches,1
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, 3)",0
"Shape (N_protein+N_ligand,)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M, 3)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Need to subtract out Van-der-Waals radii from dists,1
"Shape (N_protein+N_ligand, M)",0
"Shape (N_protein+N_ligand, M)",0
TODO(rbharath): Use RDKit to compute number of rotatable bonds in ligand.,1
TODO(rbharath): Autodock Vina only uses protein-ligand interactions in,1
computing free-energy. This implementation currently uses all interaction,0
terms. Not sure if this makes a difference.,0
"Shape (N_protein+N_ligand, M)",0
Shape () -- scalar,0
# Gather Projection,0
"graph_model.add(dc.nn.Dense(128, activation='relu'))",0
There should be 8 layers in graph_model,0
assert len(graph_model.layers) == 6,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Add layers,0
Need to add batch-norm separately to test/support due to differing,0
shapes.,0
Apply an attention lstm layer,0
Gather Projection,0
Degrees from 1 to max_deg inclusive,0
TODO(rbharath): Should this be 0 to max_deg inclusive?,1
"Should have shape (?, deg)",0
"Shape of atom_features should be (?, n_feat)",0
"Shape of deg_slice placeholder should be (max_deg+1-min_deg, 2)",0
TODO(rbharath): Check that this operation is differentiable.,1
The number of cells which we should theoretically have,0
The number of cells which we should theoretically have,0
"Each atom neighbors tensor should be (k, ndim) shaped.",0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
The number of cells which we should theoretically have,0
TODO(rbharath): The test below only checks that shapes work out.,1
Need to do a correctness implementation vs. a simple CPU impl.,0
TODO(rbharath): Commenting this out due to weird segfaults,1
def test_vina_generate_conformers(self):,0
"""""""Test that Vina Model can generate conformers""""""",0
data_dir = os.path.dirname(os.path.realpath(__file__)),0
"protein_file = os.path.join(data_dir, ""1jld_protein.pdb"")",0
"ligand_file = os.path.join(data_dir, ""1jld_ligand.pdb"")",0
max_protein_atoms = 3500,0
max_ligand_atoms = 100,0
"print(""Loading protein file"")",0
"protein_xyz, protein_mol = rdkit_util.load_molecule(protein_file)",0
protein_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in protein_mol.GetAtoms()]),",0
max_protein_atoms),0
"print(""Loading ligand file"")",0
"ligand_xyz, ligand_mol = rdkit_util.load_molecule(ligand_file)",0
ligand_Z = pad_array(,0
"np.array([atom.GetAtomicNum() for atom in ligand_mol.GetAtoms()]),",0
max_ligand_atoms),0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
Assembling train and valid datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow robust MultiTaskDNN model,0
Loading hyper parameters,0
Building tensorflow logistic regression model,0
Loading hyper parameters,0
Transform fingerprints to IRV features,0
Building tensorflow IRV model,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyper parameters,0
Building tensorflow MultiTaskDNN model,0
Loading hyper parameters,0
Initialize model folder,0
Loading hyper parameters,0
Gather Projection,0
Loading hyper parameters,0
Loading hyper parameters,0
Loading hyper parameters,0
Building scikit random forest model,0
Loading hyper parameters,0
Building xgboost classification model,0
Loading hyperparameters,0
num positive/negative ligands,0
Set batch sizes for network,0
Model structure,0
Traning settings,0
Fit trained model,0
Evaluating low data model,0
-*- coding: utf-8 -*-,0
Assigning featurizer if not user defined,0
loading datasets,0
,0
Note by @XericZephyr. Reason why I spun off this function:,0
1. Some model needs dataset information.,0
2. It offers us possibility to **cache** the dataset,0
"if the featurizer runs very slow, e.g., GraphConv.",0
2+. The cache can even happen at Travis CI to accelerate,0
CI testing.,0
,0
loading datasets,0
!/usr/bin/env python2,0
-*- coding: utf-8 -*-,0
Featurize qm9 dataset,0
transformers = [,0
"deepchem.trans.LogTransformer(transform_X=True),",0
"deepchem.trans.NormalizationTransformer(transform_y=True,",0
dataset=train_dataset)],0
Set shard size low to avoid memory problems.,0
############################################################# TIMING,0
############################################################# TIMING,0
Set some global variables up top,0
Featurize KAGGLE dataset,0
############################################################# TIMING,0
############################################################# TIMING,0
Featurize qm7 dataset,0
Featurize clintox dataset,0
Transform clintox dataset,0
Split clintox dataset,0
Featurize bbb dataset,0
Initialize transformers,0
Load nci dataset,0
Featurize nci dataset,0
Initialize transformers,0
Featurize HOPV dataset,0
Initialize transformers,0
Featurize PPB dataset,0
Initialize transformers,0
Load MUV dataset,0
Featurize MUV dataset,0
Initialize transformers,0
Featurize clearance dataset,0
Initialize transformers,0
Featurize TOXCAST dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize bace dataset,0
Initialize transformers,0
Featurize Tox21 dataset,0
Initialize transformers,0
Featurize ChEMBL dataset,0
Initialize transformers,0
Featurize hiv dataset,0
Initialize transformers,0
Featurize SIDER dataset,0
Initialize transformers,0
Featurize SAMPL dataset,0
Initialize transformers,0
Featurize Delaney dataset,0
Initialize transformers,0
Featurize PCBA dataset,0
Initialize transformers,0
Featurize Lipophilicity dataset,0
Initialize transformers,0
TODO(rbharath): This function is complicated and monolithic. Is there a nice,1
way to refactor this?,1
arbitrarily return last model,0
Define train dataset,0
Define validation dataset,0
TODO (Bowen): make this function less memory intensive,1
set 1st column as the column index of dataframe,0
merge descriptor and activities dataframe into output dataframe based on,0
"the molecule name, which is the index for both dataframes (but named",0
differently). Default merge is inner merge,0
need to manually set dataframe indexname after merge based on index,0
from deepchem.scripts.dock_dude import *,0
from ipyparallel import Client,0
rc = Client(),0
dview = rc[:],0
"prepare_ligands_and_dock_ligands_to_receptors(""/home/enf/datasets/all"", ""/home/enf/deep-docking/shallow/dude_docked"", dview)",0
,0
"If mol_id is not set, then use isomeric smiles as unique identifier",0
iterator = data_df.iterrows(),0
TODO(rbharath): BROKEN!,1
Trim unwanted indexing fields,0
Connect to running ipython server,0
Copyright 2016 The TensorFlow Authors. All Rights Reserved.,0
,0
"Licensed under the Apache License, Version 2.0 (the ""License"");",0
you may not use this file except in compliance with the License.,0
You may obtain a copy of the License at,0
,0
http://www.apache.org/licenses/LICENSE-2.0,0
,0
"Unless required by applicable law or agreed to in writing, software",0
"distributed under the License is distributed on an ""AS IS"" BASIS,",0
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",0
See the License for the specific language governing permissions and,0
limitations under the License.,0
==============================================================================,0
Maps from a function name to a dictionary that describes how to,0
map from an old argument keyword to the new argument keyword.,0
Mapping from function to the new name of the function,0
Functions that were reordered should be changed to the new keyword args,0
"for safety, if positional arguments are used. If you have reversed the",0
"positional arguments yourself, this could do the wrong thing.",1
Specially handled functions.,0
TODO(aselle): Could check for a literal list of bools and try to convert,1
them to indices.,0
all edits are lists of chars,0
Iterate of each line,0
sort by column so that edits are processed in order in order to make,0
indexing adjustments cumulative for changes that change the string,0
length,0
"Extract each line to a list of characters, because mutable lists",0
"are editable, unlike immutable strings.",0
Record a description of the change,0
Make underscore buffers for underlining where in the line the edit was,0
Iterate for each edit,0
"Create effective start, end by accounting for change in length due",0
to previous edits,0
Make sure the edit is changing what it should be changing,0
Make the edit,0
Create the underline highlighting of the before and after,0
Keep track of how to generate effective ranges,0
Finish the report comment,0
"Strangely, ast.ListComp returns the col_offset of the first token",0
after the '[' token which appears to be a bug. Workaround by,1
explicitly finding the real start of the list comprehension.,0
loop over lines,0
Reverse the text to and regular expression search for whitespace,0
First find if a [ can be found with only whitespace between it and,0
col.,0
TODO(aselle):,1
"this is poor comment detection, but it is good enough for",0
cases where the comment does not contain string literal starting/,0
ending characters. If ast gave us start and end locations of the,0
"ast nodes rather than just start, we could use string literal",0
node ranges to filter out spurious #'s that appear in string,0
literals.,0
"Most other nodes return proper locations (with notably does not), but",0
it is not possible to use that in an argument.,0
"Find a simple attribute name path e.g. ""tf.foo.bar""",0
Make sure the func is marked as being part of a call,0
Call special handlers,0
Examine any non-keyword argument and make it into a keyword argument,0
if reordering required.,0
Examine each keyword argument and convert it to the final renamed form,0
TODO(aselle): We should scan backward to find the start of the,1
keyword key. Unfortunately ast does not give you the location of,0
"keyword keys, so we are forced to infer it from the keyword arg",0
value.,0
"Write to a temporary file, just in case we are doing an implace modify.",0
Broad exceptions are required here because ast throws whatever it wants.,0
pylint: disable=broad-except,0
pylint: enable=broad-except,0
make sure output directory doesn't exist,0
make sure output directory does not overlap with root_directory,0
Collect list of files to process (we do this to correctly handle if the,0
user puts the output directory in some sub directory of the input dir),0
import os,0
"from deepchem.utils.save import load_from_disk, save_to_disk",0
from deepchem.featurizers.fingerprints import CircularFingerprint,0
from deepchem.featurizers.basic import RDKitDescriptors,0
from deepchem.featurizers.nnscore import NNScoreComplexFeaturizer,0
from deepchem.featurizers.grid_featurizer import GridFeaturizer,0
from deepchem.featurizers.featurize import DataLoader,0
,0
"dataset_file = ""../../../datasets/pdbbind_full_df.pkl.gz""",0
"print(""About to load dataset form disk."")",0
dataset = load_from_disk(dataset_file),0
"print(""Loaded dataset."")",0
,0
grid_featurizer = GridFeaturizer(,0
"voxel_width=16.0, feature_types=""voxel_combined"",",0
"voxel_feature_types=[""ecfp"", ""splif"", ""hbond"", ""pi_stack"", ""cation_pi"",",0
"""salt_bridge""], ecfp_power=9, splif_power=9,",0
"parallel=True, flatten=True)",0
featurizers = [CircularFingerprint(size=1024)],0
"featurizers += [grid_featurizer, NNScoreComplexFeaturizer()]",0
,0
#Make a directory in which to store the featurized complexes.,0
"base_dir = ""../../../grid_nnscore_circular_features""",0
if not os.path.exists(base_dir):,0
os.makedirs(base_dir),0
"data_dir = os.path.join(base_dir, ""data"")",0
if not os.path.exists(data_dir):,0
os.makedirs(data_dir),0
,0
"featurized_samples_file = os.path.join(data_dir, ""featurized_samples.joblib"")",0
,0
"feature_dir = os.path.join(base_dir, ""features"")",0
if not os.path.exists(feature_dir):,0
os.makedirs(feature_dir),0
,0
"samples_dir = os.path.join(base_dir, ""samples"")",0
if not os.path.exists(samples_dir):,0
os.makedirs(samples_dir),0
,0
,0
,0
featurizers = compound_featurizers + complex_featurizers,0
"featurizer = DataLoader(tasks=[""label""],",0
"smiles_field=""smiles"",",0
"protein_pdb_field=""protein_pdb"",",0
"ligand_pdb_field=""ligand_pdb"",",0
"compound_featurizers=compound_featurizers,",0
"complex_featurizers=complex_featurizers,",0
"id_field=""complex_id"",",0
verbose=False),0
from ipyparallel import Client,0
c = Client(),0
"print(""c.ids"")",0
print(c.ids),0
dview = c[:],0
"featurized_samples = featurizer.featurize(dataset_file, feature_dir, samples_dir,",0
"worker_pool=dview, shard_size=1024)",0
,0
"save_to_disk(featurized_samples, featurized_samples_file)",0
"print(""Preparing ligand %s"" % mol_name)",0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
html_theme_path = [],0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
html_logo = None,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
import joblib,0
First line of user-specified CSV *must* be header.,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): The semantics of this class are very difficult to debug.,1
"Multiple transformations of the data are performed on disk, and computations",0
of mean/std are spread across multiple functions for efficiency. Some,0
refactoring needs to happen here.,0
TODO(rbharath): Still a bit of information leakage.,1
TODO(rbharath): FeaturizedSamples should not be responsible for,1
"X-transform, X_sums, etc. Move that stuff over to Dataset.",0
"input/output transforms not specified yet, so",0
"self.transforms = (input_transforms, output_transforms) =>",0
TODO(rbharath): There is a dangerous mixup in semantics. If itershards() is,1
"called without calling transform(), it will explode. Maybe have a separate",0
initialization function to avoid this problem.,0
Store input_transforms/output_transforms so the dataset remembers its state.,0
TODO(rbharath): These lines are puzzling. Better way to avoid storage,1
duplication here?,0
Turns NaNs to zeros,0
"The following are all associated with Dataset, but are separate functions to",0
make it easy to use multiprocessing.,0
TODO(rbharath): This is a hack. clean up.,1
TODO(rbharath): Should X be saved to out_X_transformed as well? Since,1
itershards expects to loop over X-transformed? (Ditto for y/w),0
perform common train/test split across all tasks,0
Set missing data to have weight zero,0
Note that X_n is a list of floats,0
"Note y_n is a list of arrays of shape (n_tasks,)",0
TODO(rbharath): This is a hack based on fact that multi-tasktype models,1
aren't supported.,0
"Sometimes all samples have zero weight. In this case, continue.",0
We need to import models so they can be created by model_builder,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
TODO(rbharath): There should be some automatic check to ensure that all,1
required model_params are specified.,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
Moving imports to be local to avoid isnstall issues with,0
"Convolution3D, which is not yet part of keras proper.",0
number of convolutional filters to use at each layer,0
level of pooling to perform at each layer (POOL x POOL),0
level of convolution to perform at each layer (CONV x CONV),0
"TODO(rbharath): If we change away from axis-size 32, this code will break.",1
Eventually figure out a more general rule that works for all axis sizes.,0
Note that keras requires the model architecture and weights to be stored,0
separately. A json file is generated that specifies the model architecture.,0
The weights will be stored in an h5 file. The pkl.gz file with store the,0
target name.,0
Save architecture,0
Add eps weight to avoid minibatches with zero weight (causes theano to crash).,0
"Class probabilities are predicted for classification outputs. Instead,",0
output the most likely class.,0
TODO(rbharath): This does not work with very large datasets! sklearn does,1
"support partial_fit, but only for some models. Might make sense to make",0
PartialSklearnModel subclass at some point to support large data models.,0
List of registered models,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
TODO(rbharath): The structure of the produced df might be,0
complicated. Better way to model?,1
TODO(rbharath): This feels like a total hack. Is there a structured way,1
to deal with this instead?,1
# The following notice is copied from the original NNScore file.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
ELECTROSTATIC_JOULE_PER_MOL = 138.94238460104697e4 # units?,0
"This is just a scaling factor, so it's set so as to keep the network",0
inputs roughly contained in 0-1,0
"O-H distance is 0.96 A, N-H is 1.01 A. See",0
http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html,0
"If atoms are < 2.5 A apart, we count it as a close contact",0
"If receptor and ligand atoms are > 4 A apart, we consider them",0
unable to interact with simple electrostatics.,0
"""PI-Stacking Interactions ALIVE AND WELL IN PROTEINS"" says",0
"distance of 7.5 A is good cutoff. This seems really big to me,",0
except that pi-pi interactions (parallel) are actually usually,0
off centered. Interesting paper.  Note that adenine and,0
"tryptophan count as two aromatic rings. So, for example, an",0
"interaction between these two, if positioned correctly, could",0
count for 4 pi-pi interactions.,0
Cation-pi interaction cutoff based on,0
"""Cation-pi interactions in structural biology.""",0
4  is good cutoff for salt bridges according to,0
"""Close-Range Electrostatic Interactions in Proteins"",",0
"but looking at complexes, I decided to go with 5.5 A",0
This is perhaps controversial. I noticed that often a pi-cation,0
"interaction or other pi interaction was only slightly off, but",0
"looking at the structure, it was clearly supposed to be a pi-cation",0
interaction. I've decided then to artificially expand the radius of,0
"each pi ring. Think of this as adding in a VDW radius, or",0
"accounting for poor crystal-structure resolution, or whatever you",0
want to justify it.,0
note that dictionaries (hashtables) are passed by reference in python,0
Now see if there's hydrophobic contacts (C-C contacts),0
to convert into J/mol; might be nice to double check this,0
TODO(bramsundar): What are units of,1
ligand_charge/receptor_charge?,0
"so they're more or less perpendicular, it's probably a",0
"pi-edge interaction having looked at many structures, I",0
noticed the algorithm was identifying T-pi reactions,0
"when the two rings were in fact quite distant, often",0
"with other atoms in between. Eye-balling it, requiring",0
that at their closest they be at least 5 A apart seems,0
to separate the good T's from the bad,0
"so at their closest points, the two rings come within",0
5 A of each other.,0
"okay, is the ligand pi pointing into the receptor",0
"pi, or the other way around?  first, project the",0
center of the ligand pi onto the plane of the,0
"receptor pi, and vs. versa",0
"This could be directional somehow, like a hydrogen",0
bond.,0
"now, if it's a true pi-T interaction, this projected",0
point should fall within the ring whose plane it's,0
been projected into.,0
so it is in the ring on the projected plane.,0
since it could be interacting with a cofactor or something,0
Now see if there's some sort of hydrogen bond between,0
"these two atoms. distance cutoff = H_BOND_DIST, angle cutoff =",0
H_BOND_ANGLE.,0
TODO(rbharath): This is a horrible inner-loop search. Can,1
this be made more efficient?,0
Make sure to set comment (used below),0
Make sure to set comment (used below),0
"print ""nearby hydrogens: "" + str(hydrogens)",0
now we need to check the angles,0
"TODO(rbharath): Rather than using this heuristic, it seems like",1
it might be better to just report the angle in the feature,1
vector...,0
"so there could be some pi-pi interactions.  Now, let's",0
check for stacking interactions. Are the two pi's roughly,0
parallel?,0
"so they're more or less parallel, it's probably pi-pi",0
"stacking now, since pi-pi are not usually right on",0
top of each other. They're often staggered. So I don't,0
want to just look at the centers of the rings and,0
compare. Let's look at each of the atoms.  do atom of,0
"the atoms of one ring, when projected onto the plane of",0
"the other, fall within that other ring?",0
start by assuming it's not a pi-pi stacking interaction,0
project the ligand atom onto the plane of the receptor ring,0
TODO(rbharath): This if-else is confusing.,1
project the ligand atom onto the plane of the receptor ring,0
since it could be interacting with a cofactor or something,0
project the charged onto the plane of the aromatic,0
since it could be interacting with a cofactor or something,0
now it's the ligand that has the aromatic group,0
since it could be interacting with a cofactor or something,0
so they have oppositve charges,0
TODO(rbharath): What is atom type A here?,1
Load receptor and ligand from file.,0
## OPEN TEMPDIR,0
## CLOSE TEMPDIR,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
"AddHydrogens(polaronly, correctForPH, pH)",0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
generate SMILES for fragments,0
import all Featurizer subclasses so __subclasses__ will work,0
these have to be local imports to avoid circular imports,0
get output from engines,0
get the maximum number of conformers,0
construct the new container,0
- first axis = # mols,0
- second axis = max # conformers,0
- remaining axes = determined by feature shape,0
fill in the container,0
"If gzipped, need to compute extension again",0
"If CSV input, assume that first row contains labels",0
Skip labels,0
"processed_rows = raw_df.apply(process_raw_sample_helper_partial, axis=1)",0
raw_df = pd.DataFrame.from_records(processed_rows),0
"pandas rows are tuples (row_num, row_data)",0
The standard columns for featurized data.,0
"compounds_df is not altered by any method after initialization, so it's",0
safe to keep a copy in memory and on disk.,0
TODO(rbharath): Might this be inefficient?,1
Sort from largest to smallest scaffold sets,0
list-of-available-descriptors.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
Remove rings of length 0,0
"To remove duplicate entries, we convert rings from a list to set, and",0
then back to a list again. There's a snafu since each ring in rings is,0
itself a list (and lists are unhashable in python). To circumvent this,0
"issue, we convert each ring into a string (after sorting). For example,",0
"[2, 1] maps to '[1, 2]'. These strings are hashable. To recover the",0
"original lists, we use ast.literal_eval.",0
Use dictionary to maintain state about which rings are supersets.,0
All distances are in Angstroms. Duplicate pairs not specified. For,0
"example, to find distance (""H"", ""C""), the lookup key is (""C"", ""H"")",0
"This one not from source sited above. Not sure where it's from, but",0
"it wouldn't ever be used in the current context (""AutoGrow"")",0
estimate based on eye balling Handbook of Chemistry and Physics,0
Reset internal state,0
Now load the file into a list,0
"Load atom data (coordinates, etc.)",0
this string unique identifies each atom,0
so each atom can only be loaded once. No rotamers.,0
So you're actually reindexing everything here.,0
### TODO(rbharath): Disabling loading of non,1
Check that the range is nonempty.,0
"just so no PDB is empty, VMD will load them all",0
write coordinates,0
first get available index,0
now add atom,0
Add to non-protein list,0
Functions to determine the bond connectivity based on distance,0
==============================================================,0
Functions to identify positive charges,0
======================================,0
Metallic atoms are assumed to be cations.,0
Get all the quartenary amines on non-protein residues (these are the,0
only non-protein groups that will be identified as positively,0
charged). Note that nitrogen has only 5 valence electrons (out of 8,0
"for a full shell), so any nitrogen with four bonds must be positively",0
charged (think NH4+).,0
"a quartenary amine, so it's easy",0
so the indices stored is just the index of the nitrogen and any,0
attached atoms,0
"maybe you only have two hydrogens added, but they're sp3 hybridized.",0
"Just count this as a quartenary amine, since I think the positive",0
charge would be stabilized. This situation can arise with,0
lone-pair electron nitrogen compounds like pyrrolidine,0
(http://www.chem.ucla.edu/harding/tutorials/lone_pair.pdf),0
Test that the angles approximately match the tetrahedral 109,0
degrees,0
so indexes added are the nitrogen and any attached atoms.,0
let's check for a phosphate or anything where a phosphorus is bound,0
"to two oxygens, where both oxygens are bound to only one heavy atom",0
(the phosphorus). I think this will get several phosphorus,0
substances.,0
now count the number of oxygens bound only to the phosphorus,0
"let's check for guanidino-like groups (actually H2N-C-NH2,",0
where not CN3.),0
if the carbon has only three atoms connected to it,0
"if true, carbon is connected to at least two nitrogens now,",0
so we need to count the number of nitrogens that are only,0
connected to one heavy atom (the carbon),0
Index of atom that connects this charged group to,0
"the rest of the molecule, ultimately to make sure",0
it's sp3 hybridized. Remains -1 if no such atom exists.,0
TODO(rbharath): Is picking the first non-nitrogen atom,1
correct here?,0
Handle case of guanidinium cation,0
so there are at two nitrogens that are only,0
connected to the carbon (and probably some,0
hydrogens),0
now you need to make sure connector_ind atom is sp3 hybridized,0
"There are only two ""guanidino"" nitrogens. Assume the",0
negative charge is spread equally between the two.,0
a carboxylate carbon will have three items connected to it.,0
a carboxylate will have two oxygens connected to,0
"it. Now, each of the oxygens should be connected",0
to only one heavy atom (so if it's connected to a,0
"hydrogen, that's okay)",0
so it's a carboxylate! Add a negative charge.,0
Assume negative charge is centered between the two,0
oxygens.,0
let's check for a sulfonate or anything where a sulfur is,0
bound to at least three oxygens and at least three are,0
bound to only the sulfur (or the sulfur and a hydrogen).,0
the sulfur is bound to at least three oxygens now,0
count the number of oxygens that are only bound to the,0
sulfur,0
so there are at least three oxygens that are only,0
bound to the sulfur,0
Group atoms in the same residue together,0
Assign each atom a residue key.,0
Handle edge case of last residue.,0
Select those atoms which are part of the charged group.,0
Functions to identify aromatic rings,0
====================================,0
first identify the center point,0
now get the plane that defines this ring. Recall that there are,0
atleast 3-points in indices_of_ring by ValueError above.,0
# formula for plane will be ax + by + cz = d,0
"first, let's see if the last atom in this ring is a carbon",0
connected to four atoms. That would be a quick way of,0
telling this is not an aromatic ring,0
now check the dihedral between the ring atoms to see if,0
it's flat,0
"15 degrees is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
ring[ind+3] range of this function is -pi to pi,0
now check the dihedral between the ring atoms and an atom,0
connected to the current atom to see if that's flat too.,0
"15 degress is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
"ring[ind+3], range of this function is -pi to pi",0
Get all the rings containing each of the atoms in the ligand,0
Aromatic rings are of length 5 or 6,0
"Due to data errors in PDB files, there are cases in which",0
non-protein atoms are bonded to protein atoms. Manually remove these,0
"cases, by testing that ring atom indices are a subset of non-protein",0
ring indices.,0
Aromatic rings are flat,0
Aromatic rings are of length <= 6,0
At least 3 indices are required to identify the aromatic plane.,0
if self.get_aromatic_marker(indices_of_ring) is None:,0
"raise ValueError(""None at %s for %s"" % (key,",0
str(indices_of_ring))),0
Tryptophan has two aromatic rings.,0
Functions to assign secondary structure to protein residues,0
===========================================================,0
"first, we need to know what residues are available",0
print self.get_residues(),0
TODO(rbharath): Why magic number 8?,1
now make sure the first four all have the same resid and,0
the last four all have the same resid,0
TODO(rbharath): Ugly code right here...,1
Now give easier to use names to the atoms,0
Now compute the phi and psi dihedral angles,0
Now use those angles to determine if it's alpha or beta,0
A residue of index i is only going to be in an alpha helix,0
its CA is within 6 A of the CA of the residue i + 3,0
so it's in an alpha helix,0
so now compare that CA to all the other CA's,0
so it's also in an alpha helix,0
so this CA atom is one of the ones the first atom,0
might hydrogen bond with,0
so these two CA atoms are close enough together,0
that their residues are probably hydrogen bonded,0
Alpha helices are only alpha helices if they span at least 4,0
residues (to wrap around and hydrogen bond). I'm going to,0
"require them to span at least 5 residues, based on",0
examination of many structures.,0
now go through each of the BETA CA atoms. A residue is only,0
going to be called a beta sheet if CA atom is within 6.0 A,0
"of another CA beta, same chain, but index difference > 2.",0
so it's in a beta sheet,0
so not comparing an atom to itself,0
so you're comparing it only to other BETA-sheet atoms,0
so require them to be on the same chain. needed to,0
indices can be fairly compared,0
so the two residues are not simply adjacent to each,0
other on the chain,0
so these to atoms are close to each other,0
Now some more post-processing needs to be done. Do this,0
again to clear up mess that may have just been created,0
"(single residue beta strand, for example)",0
Beta sheets are usually at least 3 residues long,0
so they are sequential,0
Now update each of the atoms with this structural information,0
Use this list to perform sanity checks on alpha-helix and beta-sheet,0
labels.,0
check for separate count and SMILES entries for each fragment,0
## 3zso comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"Currently, just verifies that nothing crashes.",0
## 3zp9 comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
## 3bwf comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"The keys of these dicts are pairs of atomtypes, but the keys are",0
"sorted so that (""C"", ""O"") is always written as ""C_O"". Thus, for N",0
"atom types, there are N*(N+1)/2 unique pairs.",0
TODO(rbharath): Charges are not computed correctly for certain,1
ligands! (see 2y2h_ligand). Understand why this happens.,0
assert np.count_nonzero(np.array(electrostatics.values())) > 0,0
print counts,0
1zea is the only example that has any pi-stacking.,0
Lengths:,0
ligand_receptor_close_contacts: N*(N+1)/2,0
ligand_receptor_contacts: N*(N+1)/2,0
ligand_receptor_electrostatics: N*(N+1)/2,0
ligand_atom_counts: N,0
hbonds: 12,0
hydrophobics: 6,0
stacking: 3,0
pi_cation: 6,0
t_shaped: 3,0
active_site_flexibility: 6,0
salt_bridges: 3,0
rotatable_boonds_count: 1,0
We need to import models so they can be created by model_builder,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
html_theme_path = [],0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
html_logo = None,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
import joblib,0
First line of user-specified CSV *must* be header.,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): The semantics of this class are very difficult to debug.,1
"Multiple transformations of the data are performed on disk, and computations",0
of mean/std are spread across multiple functions for efficiency. Some,0
refactoring needs to happen here.,0
TODO(rbharath): Still a bit of information leakage.,1
TODO(rbharath): FeaturizedSamples should not be responsible for,1
"X-transform, X_sums, etc. Move that stuff over to Dataset.",0
"input/output transforms not specified yet, so",0
"self.transforms = (input_transforms, output_transforms) =>",0
TODO(rbharath): There is a dangerous mixup in semantics. If itershards() is,1
"called without calling transform(), it will explode. Maybe have a separate",0
initialization function to avoid this problem.,0
Store input_transforms/output_transforms so the dataset remembers its state.,0
TODO(rbharath): These lines are puzzling. Better way to avoid storage,1
duplication here?,0
Turns NaNs to zeros,0
"The following are all associated with Dataset, but are separate functions to",0
make it easy to use multiprocessing.,0
TODO(rbharath): This is a hack. clean up.,1
TODO(rbharath): Should X be saved to out_X_transformed as well? Since,1
itershards expects to loop over X-transformed? (Ditto for y/w),0
perform common train/test split across all tasks,0
Set missing data to have weight zero,0
Note that X_n is a list of floats,0
"Note y_n is a list of arrays of shape (n_tasks,)",0
TODO(rbharath): This is a hack based on fact that multi-tasktype models,1
aren't supported.,0
"Sometimes all samples have zero weight. In this case, continue.",0
We need to import models so they can be created by model_builder,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
TODO(rbharath): There should be some automatic check to ensure that all,1
required model_params are specified.,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
Moving imports to be local to avoid isnstall issues with,0
"Convolution3D, which is not yet part of keras proper.",0
number of convolutional filters to use at each layer,0
level of pooling to perform at each layer (POOL x POOL),0
level of convolution to perform at each layer (CONV x CONV),0
"TODO(rbharath): If we change away from axis-size 32, this code will break.",1
Eventually figure out a more general rule that works for all axis sizes.,0
Note that keras requires the model architecture and weights to be stored,0
separately. A json file is generated that specifies the model architecture.,0
The weights will be stored in an h5 file. The pkl.gz file with store the,0
target name.,0
Save architecture,0
Add eps weight to avoid minibatches with zero weight (causes theano to crash).,0
"Class probabilities are predicted for classification outputs. Instead,",0
output the most likely class.,0
TODO(rbharath): This does not work with very large datasets! sklearn does,1
"support partial_fit, but only for some models. Might make sense to make",0
PartialSklearnModel subclass at some point to support large data models.,0
List of registered models,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
TODO(rbharath): The structure of the produced df might be,0
complicated. Better way to model?,1
TODO(rbharath): This feels like a total hack. Is there a structured way,1
to deal with this instead?,1
# The following notice is copied from the original NNScore file.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
ELECTROSTATIC_JOULE_PER_MOL = 138.94238460104697e4 # units?,0
"This is just a scaling factor, so it's set so as to keep the network",0
inputs roughly contained in 0-1,0
"O-H distance is 0.96 A, N-H is 1.01 A. See",0
http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html,0
"If atoms are < 2.5 A apart, we count it as a close contact",0
"If receptor and ligand atoms are > 4 A apart, we consider them",0
unable to interact with simple electrostatics.,0
"""PI-Stacking Interactions ALIVE AND WELL IN PROTEINS"" says",0
"distance of 7.5 A is good cutoff. This seems really big to me,",0
except that pi-pi interactions (parallel) are actually usually,0
off centered. Interesting paper.  Note that adenine and,0
"tryptophan count as two aromatic rings. So, for example, an",0
"interaction between these two, if positioned correctly, could",0
count for 4 pi-pi interactions.,0
Cation-pi interaction cutoff based on,0
"""Cation-pi interactions in structural biology.""",0
4  is good cutoff for salt bridges according to,0
"""Close-Range Electrostatic Interactions in Proteins"",",0
"but looking at complexes, I decided to go with 5.5 A",0
This is perhaps controversial. I noticed that often a pi-cation,0
"interaction or other pi interaction was only slightly off, but",0
"looking at the structure, it was clearly supposed to be a pi-cation",0
interaction. I've decided then to artificially expand the radius of,0
"each pi ring. Think of this as adding in a VDW radius, or",0
"accounting for poor crystal-structure resolution, or whatever you",0
want to justify it.,0
note that dictionaries (hashtables) are passed by reference in python,0
Now see if there's hydrophobic contacts (C-C contacts),0
to convert into J/mol; might be nice to double check this,0
TODO(bramsundar): What are units of,1
ligand_charge/receptor_charge?,0
"so they're more or less perpendicular, it's probably a",0
"pi-edge interaction having looked at many structures, I",0
noticed the algorithm was identifying T-pi reactions,0
"when the two rings were in fact quite distant, often",0
"with other atoms in between. Eye-balling it, requiring",0
that at their closest they be at least 5 A apart seems,0
to separate the good T's from the bad,0
"so at their closest points, the two rings come within",0
5 A of each other.,0
"okay, is the ligand pi pointing into the receptor",0
"pi, or the other way around?  first, project the",0
center of the ligand pi onto the plane of the,0
"receptor pi, and vs. versa",0
"This could be directional somehow, like a hydrogen",0
bond.,0
"now, if it's a true pi-T interaction, this projected",0
point should fall within the ring whose plane it's,0
been projected into.,0
so it is in the ring on the projected plane.,0
since it could be interacting with a cofactor or something,0
Now see if there's some sort of hydrogen bond between,0
"these two atoms. distance cutoff = H_BOND_DIST, angle cutoff =",0
H_BOND_ANGLE.,0
TODO(rbharath): This is a horrible inner-loop search. Can,1
this be made more efficient?,0
Make sure to set comment (used below),0
Make sure to set comment (used below),0
"print ""nearby hydrogens: "" + str(hydrogens)",0
now we need to check the angles,0
"TODO(rbharath): Rather than using this heuristic, it seems like",1
it might be better to just report the angle in the feature,1
vector...,0
"so there could be some pi-pi interactions.  Now, let's",0
check for stacking interactions. Are the two pi's roughly,0
parallel?,0
"so they're more or less parallel, it's probably pi-pi",0
"stacking now, since pi-pi are not usually right on",0
top of each other. They're often staggered. So I don't,0
want to just look at the centers of the rings and,0
compare. Let's look at each of the atoms.  do atom of,0
"the atoms of one ring, when projected onto the plane of",0
"the other, fall within that other ring?",0
start by assuming it's not a pi-pi stacking interaction,0
project the ligand atom onto the plane of the receptor ring,0
TODO(rbharath): This if-else is confusing.,1
project the ligand atom onto the plane of the receptor ring,0
since it could be interacting with a cofactor or something,0
project the charged onto the plane of the aromatic,0
since it could be interacting with a cofactor or something,0
now it's the ligand that has the aromatic group,0
since it could be interacting with a cofactor or something,0
so they have oppositve charges,0
TODO(rbharath): What is atom type A here?,1
Load receptor and ligand from file.,0
## OPEN TEMPDIR,0
## CLOSE TEMPDIR,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
"AddHydrogens(polaronly, correctForPH, pH)",0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
generate SMILES for fragments,0
import all Featurizer subclasses so __subclasses__ will work,0
these have to be local imports to avoid circular imports,0
get output from engines,0
get the maximum number of conformers,0
construct the new container,0
- first axis = # mols,0
- second axis = max # conformers,0
- remaining axes = determined by feature shape,0
fill in the container,0
"If gzipped, need to compute extension again",0
"If CSV input, assume that first row contains labels",0
Skip labels,0
"processed_rows = raw_df.apply(process_raw_sample_helper_partial, axis=1)",0
raw_df = pd.DataFrame.from_records(processed_rows),0
"pandas rows are tuples (row_num, row_data)",0
The standard columns for featurized data.,0
"compounds_df is not altered by any method after initialization, so it's",0
safe to keep a copy in memory and on disk.,0
TODO(rbharath): Might this be inefficient?,1
Sort from largest to smallest scaffold sets,0
list-of-available-descriptors.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
Remove rings of length 0,0
"To remove duplicate entries, we convert rings from a list to set, and",0
then back to a list again. There's a snafu since each ring in rings is,0
itself a list (and lists are unhashable in python). To circumvent this,0
"issue, we convert each ring into a string (after sorting). For example,",0
"[2, 1] maps to '[1, 2]'. These strings are hashable. To recover the",0
"original lists, we use ast.literal_eval.",0
Use dictionary to maintain state about which rings are supersets.,0
All distances are in Angstroms. Duplicate pairs not specified. For,0
"example, to find distance (""H"", ""C""), the lookup key is (""C"", ""H"")",0
"This one not from source sited above. Not sure where it's from, but",0
"it wouldn't ever be used in the current context (""AutoGrow"")",0
estimate based on eye balling Handbook of Chemistry and Physics,0
Reset internal state,0
Now load the file into a list,0
"Load atom data (coordinates, etc.)",0
this string unique identifies each atom,0
so each atom can only be loaded once. No rotamers.,0
So you're actually reindexing everything here.,0
### TODO(rbharath): Disabling loading of non,1
Check that the range is nonempty.,0
"just so no PDB is empty, VMD will load them all",0
write coordinates,0
first get available index,0
now add atom,0
Add to non-protein list,0
Functions to determine the bond connectivity based on distance,0
==============================================================,0
Functions to identify positive charges,0
======================================,0
Metallic atoms are assumed to be cations.,0
Get all the quartenary amines on non-protein residues (these are the,0
only non-protein groups that will be identified as positively,0
charged). Note that nitrogen has only 5 valence electrons (out of 8,0
"for a full shell), so any nitrogen with four bonds must be positively",0
charged (think NH4+).,0
"a quartenary amine, so it's easy",0
so the indices stored is just the index of the nitrogen and any,0
attached atoms,0
"maybe you only have two hydrogens added, but they're sp3 hybridized.",0
"Just count this as a quartenary amine, since I think the positive",0
charge would be stabilized. This situation can arise with,0
lone-pair electron nitrogen compounds like pyrrolidine,0
(http://www.chem.ucla.edu/harding/tutorials/lone_pair.pdf),0
Test that the angles approximately match the tetrahedral 109,0
degrees,0
so indexes added are the nitrogen and any attached atoms.,0
let's check for a phosphate or anything where a phosphorus is bound,0
"to two oxygens, where both oxygens are bound to only one heavy atom",0
(the phosphorus). I think this will get several phosphorus,0
substances.,0
now count the number of oxygens bound only to the phosphorus,0
"let's check for guanidino-like groups (actually H2N-C-NH2,",0
where not CN3.),0
if the carbon has only three atoms connected to it,0
"if true, carbon is connected to at least two nitrogens now,",0
so we need to count the number of nitrogens that are only,0
connected to one heavy atom (the carbon),0
Index of atom that connects this charged group to,0
"the rest of the molecule, ultimately to make sure",0
it's sp3 hybridized. Remains -1 if no such atom exists.,0
TODO(rbharath): Is picking the first non-nitrogen atom,1
correct here?,0
Handle case of guanidinium cation,0
so there are at two nitrogens that are only,0
connected to the carbon (and probably some,0
hydrogens),0
now you need to make sure connector_ind atom is sp3 hybridized,0
"There are only two ""guanidino"" nitrogens. Assume the",0
negative charge is spread equally between the two.,0
a carboxylate carbon will have three items connected to it.,0
a carboxylate will have two oxygens connected to,0
"it. Now, each of the oxygens should be connected",0
to only one heavy atom (so if it's connected to a,0
"hydrogen, that's okay)",0
so it's a carboxylate! Add a negative charge.,0
Assume negative charge is centered between the two,0
oxygens.,0
let's check for a sulfonate or anything where a sulfur is,0
bound to at least three oxygens and at least three are,0
bound to only the sulfur (or the sulfur and a hydrogen).,0
the sulfur is bound to at least three oxygens now,0
count the number of oxygens that are only bound to the,0
sulfur,0
so there are at least three oxygens that are only,0
bound to the sulfur,0
Group atoms in the same residue together,0
Assign each atom a residue key.,0
Handle edge case of last residue.,0
Select those atoms which are part of the charged group.,0
Functions to identify aromatic rings,0
====================================,0
first identify the center point,0
now get the plane that defines this ring. Recall that there are,0
atleast 3-points in indices_of_ring by ValueError above.,0
# formula for plane will be ax + by + cz = d,0
"first, let's see if the last atom in this ring is a carbon",0
connected to four atoms. That would be a quick way of,0
telling this is not an aromatic ring,0
now check the dihedral between the ring atoms to see if,0
it's flat,0
"15 degrees is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
ring[ind+3] range of this function is -pi to pi,0
now check the dihedral between the ring atoms and an atom,0
connected to the current atom to see if that's flat too.,0
"15 degress is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
"ring[ind+3], range of this function is -pi to pi",0
Get all the rings containing each of the atoms in the ligand,0
Aromatic rings are of length 5 or 6,0
"Due to data errors in PDB files, there are cases in which",0
non-protein atoms are bonded to protein atoms. Manually remove these,0
"cases, by testing that ring atom indices are a subset of non-protein",0
ring indices.,0
Aromatic rings are flat,0
Aromatic rings are of length <= 6,0
At least 3 indices are required to identify the aromatic plane.,0
if self.get_aromatic_marker(indices_of_ring) is None:,0
"raise ValueError(""None at %s for %s"" % (key,",0
str(indices_of_ring))),0
Tryptophan has two aromatic rings.,0
Functions to assign secondary structure to protein residues,0
===========================================================,0
"first, we need to know what residues are available",0
print self.get_residues(),0
TODO(rbharath): Why magic number 8?,1
now make sure the first four all have the same resid and,0
the last four all have the same resid,0
TODO(rbharath): Ugly code right here...,1
Now give easier to use names to the atoms,0
Now compute the phi and psi dihedral angles,0
Now use those angles to determine if it's alpha or beta,0
A residue of index i is only going to be in an alpha helix,0
its CA is within 6 A of the CA of the residue i + 3,0
so it's in an alpha helix,0
so now compare that CA to all the other CA's,0
so it's also in an alpha helix,0
so this CA atom is one of the ones the first atom,0
might hydrogen bond with,0
so these two CA atoms are close enough together,0
that their residues are probably hydrogen bonded,0
Alpha helices are only alpha helices if they span at least 4,0
residues (to wrap around and hydrogen bond). I'm going to,0
"require them to span at least 5 residues, based on",0
examination of many structures.,0
now go through each of the BETA CA atoms. A residue is only,0
going to be called a beta sheet if CA atom is within 6.0 A,0
"of another CA beta, same chain, but index difference > 2.",0
so it's in a beta sheet,0
so not comparing an atom to itself,0
so you're comparing it only to other BETA-sheet atoms,0
so require them to be on the same chain. needed to,0
indices can be fairly compared,0
so the two residues are not simply adjacent to each,0
other on the chain,0
so these to atoms are close to each other,0
Now some more post-processing needs to be done. Do this,0
again to clear up mess that may have just been created,0
"(single residue beta strand, for example)",0
Beta sheets are usually at least 3 residues long,0
so they are sequential,0
Now update each of the atoms with this structural information,0
Use this list to perform sanity checks on alpha-helix and beta-sheet,0
labels.,0
check for separate count and SMILES entries for each fragment,0
## 3zso comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"Currently, just verifies that nothing crashes.",0
## 3zp9 comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
## 3bwf comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"The keys of these dicts are pairs of atomtypes, but the keys are",0
"sorted so that (""C"", ""O"") is always written as ""C_O"". Thus, for N",0
"atom types, there are N*(N+1)/2 unique pairs.",0
TODO(rbharath): Charges are not computed correctly for certain,1
ligands! (see 2y2h_ligand). Understand why this happens.,0
assert np.count_nonzero(np.array(electrostatics.values())) > 0,0
print counts,0
1zea is the only example that has any pi-stacking.,0
Lengths:,0
ligand_receptor_close_contacts: N*(N+1)/2,0
ligand_receptor_contacts: N*(N+1)/2,0
ligand_receptor_electrostatics: N*(N+1)/2,0
ligand_atom_counts: N,0
hbonds: 12,0
hydrophobics: 6,0
stacking: 3,0
pi_cation: 6,0
t_shaped: 3,0
active_site_flexibility: 6,0
salt_bridges: 3,0
rotatable_boonds_count: 1,0
We need to import models so they can be created by model_builder,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
html_theme_path = [],0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
html_logo = None,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
import joblib,0
First line of user-specified CSV *must* be header.,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): The semantics of this class are very difficult to debug.,1
"Multiple transformations of the data are performed on disk, and computations",0
of mean/std are spread across multiple functions for efficiency. Some,0
refactoring needs to happen here.,0
TODO(rbharath): Still a bit of information leakage.,1
TODO(rbharath): FeaturizedSamples should not be responsible for,1
"X-transform, X_sums, etc. Move that stuff over to Dataset.",0
"input/output transforms not specified yet, so",0
"self.transforms = (input_transforms, output_transforms) =>",0
TODO(rbharath): There is a dangerous mixup in semantics. If itershards() is,1
"called without calling transform(), it will explode. Maybe have a separate",0
initialization function to avoid this problem.,0
Store input_transforms/output_transforms so the dataset remembers its state.,0
TODO(rbharath): These lines are puzzling. Better way to avoid storage,1
duplication here?,0
Turns NaNs to zeros,0
"The following are all associated with Dataset, but are separate functions to",0
make it easy to use multiprocessing.,0
TODO(rbharath): This is a hack. clean up.,1
TODO(rbharath): Should X be saved to out_X_transformed as well? Since,1
itershards expects to loop over X-transformed? (Ditto for y/w),0
perform common train/test split across all tasks,0
Set missing data to have weight zero,0
Note that X_n is a list of floats,0
"Note y_n is a list of arrays of shape (n_tasks,)",0
TODO(rbharath): This is a hack based on fact that multi-tasktype models,1
aren't supported.,0
"Sometimes all samples have zero weight. In this case, continue.",0
We need to import models so they can be created by model_builder,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
TODO(rbharath): There should be some automatic check to ensure that all,1
required model_params are specified.,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
Moving imports to be local to avoid isnstall issues with,0
"Convolution3D, which is not yet part of keras proper.",0
number of convolutional filters to use at each layer,0
level of pooling to perform at each layer (POOL x POOL),0
level of convolution to perform at each layer (CONV x CONV),0
"TODO(rbharath): If we change away from axis-size 32, this code will break.",1
Eventually figure out a more general rule that works for all axis sizes.,0
Note that keras requires the model architecture and weights to be stored,0
separately. A json file is generated that specifies the model architecture.,0
The weights will be stored in an h5 file. The pkl.gz file with store the,0
target name.,0
Save architecture,0
Add eps weight to avoid minibatches with zero weight (causes theano to crash).,0
"Class probabilities are predicted for classification outputs. Instead,",0
output the most likely class.,0
TODO(rbharath): This does not work with very large datasets! sklearn does,1
"support partial_fit, but only for some models. Might make sense to make",0
PartialSklearnModel subclass at some point to support large data models.,0
List of registered models,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
TODO(rbharath): The structure of the produced df might be,0
complicated. Better way to model?,1
TODO(rbharath): This feels like a total hack. Is there a structured way,1
to deal with this instead?,1
# The following notice is copied from the original NNScore file.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
ELECTROSTATIC_JOULE_PER_MOL = 138.94238460104697e4 # units?,0
"This is just a scaling factor, so it's set so as to keep the network",0
inputs roughly contained in 0-1,0
"O-H distance is 0.96 A, N-H is 1.01 A. See",0
http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html,0
"If atoms are < 2.5 A apart, we count it as a close contact",0
"If receptor and ligand atoms are > 4 A apart, we consider them",0
unable to interact with simple electrostatics.,0
"""PI-Stacking Interactions ALIVE AND WELL IN PROTEINS"" says",0
"distance of 7.5 A is good cutoff. This seems really big to me,",0
except that pi-pi interactions (parallel) are actually usually,0
off centered. Interesting paper.  Note that adenine and,0
"tryptophan count as two aromatic rings. So, for example, an",0
"interaction between these two, if positioned correctly, could",0
count for 4 pi-pi interactions.,0
Cation-pi interaction cutoff based on,0
"""Cation-pi interactions in structural biology.""",0
4  is good cutoff for salt bridges according to,0
"""Close-Range Electrostatic Interactions in Proteins"",",0
"but looking at complexes, I decided to go with 5.5 A",0
This is perhaps controversial. I noticed that often a pi-cation,0
"interaction or other pi interaction was only slightly off, but",0
"looking at the structure, it was clearly supposed to be a pi-cation",0
interaction. I've decided then to artificially expand the radius of,0
"each pi ring. Think of this as adding in a VDW radius, or",0
"accounting for poor crystal-structure resolution, or whatever you",0
want to justify it.,0
note that dictionaries (hashtables) are passed by reference in python,0
Now see if there's hydrophobic contacts (C-C contacts),0
to convert into J/mol; might be nice to double check this,0
TODO(bramsundar): What are units of,1
ligand_charge/receptor_charge?,0
"so they're more or less perpendicular, it's probably a",0
"pi-edge interaction having looked at many structures, I",0
noticed the algorithm was identifying T-pi reactions,0
"when the two rings were in fact quite distant, often",0
"with other atoms in between. Eye-balling it, requiring",0
that at their closest they be at least 5 A apart seems,0
to separate the good T's from the bad,0
"so at their closest points, the two rings come within",0
5 A of each other.,0
"okay, is the ligand pi pointing into the receptor",0
"pi, or the other way around?  first, project the",0
center of the ligand pi onto the plane of the,0
"receptor pi, and vs. versa",0
"This could be directional somehow, like a hydrogen",0
bond.,0
"now, if it's a true pi-T interaction, this projected",0
point should fall within the ring whose plane it's,0
been projected into.,0
so it is in the ring on the projected plane.,0
since it could be interacting with a cofactor or something,0
Now see if there's some sort of hydrogen bond between,0
"these two atoms. distance cutoff = H_BOND_DIST, angle cutoff =",0
H_BOND_ANGLE.,0
TODO(rbharath): This is a horrible inner-loop search. Can,1
this be made more efficient?,0
Make sure to set comment (used below),0
Make sure to set comment (used below),0
"print ""nearby hydrogens: "" + str(hydrogens)",0
now we need to check the angles,0
"TODO(rbharath): Rather than using this heuristic, it seems like",1
it might be better to just report the angle in the feature,1
vector...,0
"so there could be some pi-pi interactions.  Now, let's",0
check for stacking interactions. Are the two pi's roughly,0
parallel?,0
"so they're more or less parallel, it's probably pi-pi",0
"stacking now, since pi-pi are not usually right on",0
top of each other. They're often staggered. So I don't,0
want to just look at the centers of the rings and,0
compare. Let's look at each of the atoms.  do atom of,0
"the atoms of one ring, when projected onto the plane of",0
"the other, fall within that other ring?",0
start by assuming it's not a pi-pi stacking interaction,0
project the ligand atom onto the plane of the receptor ring,0
TODO(rbharath): This if-else is confusing.,1
project the ligand atom onto the plane of the receptor ring,0
since it could be interacting with a cofactor or something,0
project the charged onto the plane of the aromatic,0
since it could be interacting with a cofactor or something,0
now it's the ligand that has the aromatic group,0
since it could be interacting with a cofactor or something,0
so they have oppositve charges,0
TODO(rbharath): What is atom type A here?,1
Load receptor and ligand from file.,0
## OPEN TEMPDIR,0
## CLOSE TEMPDIR,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
"AddHydrogens(polaronly, correctForPH, pH)",0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
generate SMILES for fragments,0
import all Featurizer subclasses so __subclasses__ will work,0
these have to be local imports to avoid circular imports,0
get output from engines,0
get the maximum number of conformers,0
construct the new container,0
- first axis = # mols,0
- second axis = max # conformers,0
- remaining axes = determined by feature shape,0
fill in the container,0
"If gzipped, need to compute extension again",0
"If CSV input, assume that first row contains labels",0
Skip labels,0
"processed_rows = raw_df.apply(process_raw_sample_helper_partial, axis=1)",0
raw_df = pd.DataFrame.from_records(processed_rows),0
"pandas rows are tuples (row_num, row_data)",0
The standard columns for featurized data.,0
"compounds_df is not altered by any method after initialization, so it's",0
safe to keep a copy in memory and on disk.,0
TODO(rbharath): Might this be inefficient?,1
Sort from largest to smallest scaffold sets,0
list-of-available-descriptors.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
Remove rings of length 0,0
"To remove duplicate entries, we convert rings from a list to set, and",0
then back to a list again. There's a snafu since each ring in rings is,0
itself a list (and lists are unhashable in python). To circumvent this,0
"issue, we convert each ring into a string (after sorting). For example,",0
"[2, 1] maps to '[1, 2]'. These strings are hashable. To recover the",0
"original lists, we use ast.literal_eval.",0
Use dictionary to maintain state about which rings are supersets.,0
All distances are in Angstroms. Duplicate pairs not specified. For,0
"example, to find distance (""H"", ""C""), the lookup key is (""C"", ""H"")",0
"This one not from source sited above. Not sure where it's from, but",0
"it wouldn't ever be used in the current context (""AutoGrow"")",0
estimate based on eye balling Handbook of Chemistry and Physics,0
Reset internal state,0
Now load the file into a list,0
"Load atom data (coordinates, etc.)",0
this string unique identifies each atom,0
so each atom can only be loaded once. No rotamers.,0
So you're actually reindexing everything here.,0
### TODO(rbharath): Disabling loading of non,1
Check that the range is nonempty.,0
"just so no PDB is empty, VMD will load them all",0
write coordinates,0
first get available index,0
now add atom,0
Add to non-protein list,0
Functions to determine the bond connectivity based on distance,0
==============================================================,0
Functions to identify positive charges,0
======================================,0
Metallic atoms are assumed to be cations.,0
Get all the quartenary amines on non-protein residues (these are the,0
only non-protein groups that will be identified as positively,0
charged). Note that nitrogen has only 5 valence electrons (out of 8,0
"for a full shell), so any nitrogen with four bonds must be positively",0
charged (think NH4+).,0
"a quartenary amine, so it's easy",0
so the indices stored is just the index of the nitrogen and any,0
attached atoms,0
"maybe you only have two hydrogens added, but they're sp3 hybridized.",0
"Just count this as a quartenary amine, since I think the positive",0
charge would be stabilized. This situation can arise with,0
lone-pair electron nitrogen compounds like pyrrolidine,0
(http://www.chem.ucla.edu/harding/tutorials/lone_pair.pdf),0
Test that the angles approximately match the tetrahedral 109,0
degrees,0
so indexes added are the nitrogen and any attached atoms.,0
let's check for a phosphate or anything where a phosphorus is bound,0
"to two oxygens, where both oxygens are bound to only one heavy atom",0
(the phosphorus). I think this will get several phosphorus,0
substances.,0
now count the number of oxygens bound only to the phosphorus,0
"let's check for guanidino-like groups (actually H2N-C-NH2,",0
where not CN3.),0
if the carbon has only three atoms connected to it,0
"if true, carbon is connected to at least two nitrogens now,",0
so we need to count the number of nitrogens that are only,0
connected to one heavy atom (the carbon),0
Index of atom that connects this charged group to,0
"the rest of the molecule, ultimately to make sure",0
it's sp3 hybridized. Remains -1 if no such atom exists.,0
TODO(rbharath): Is picking the first non-nitrogen atom,1
correct here?,0
Handle case of guanidinium cation,0
so there are at two nitrogens that are only,0
connected to the carbon (and probably some,0
hydrogens),0
now you need to make sure connector_ind atom is sp3 hybridized,0
"There are only two ""guanidino"" nitrogens. Assume the",0
negative charge is spread equally between the two.,0
a carboxylate carbon will have three items connected to it.,0
a carboxylate will have two oxygens connected to,0
"it. Now, each of the oxygens should be connected",0
to only one heavy atom (so if it's connected to a,0
"hydrogen, that's okay)",0
so it's a carboxylate! Add a negative charge.,0
Assume negative charge is centered between the two,0
oxygens.,0
let's check for a sulfonate or anything where a sulfur is,0
bound to at least three oxygens and at least three are,0
bound to only the sulfur (or the sulfur and a hydrogen).,0
the sulfur is bound to at least three oxygens now,0
count the number of oxygens that are only bound to the,0
sulfur,0
so there are at least three oxygens that are only,0
bound to the sulfur,0
Group atoms in the same residue together,0
Assign each atom a residue key.,0
Handle edge case of last residue.,0
Select those atoms which are part of the charged group.,0
Functions to identify aromatic rings,0
====================================,0
first identify the center point,0
now get the plane that defines this ring. Recall that there are,0
atleast 3-points in indices_of_ring by ValueError above.,0
# formula for plane will be ax + by + cz = d,0
"first, let's see if the last atom in this ring is a carbon",0
connected to four atoms. That would be a quick way of,0
telling this is not an aromatic ring,0
now check the dihedral between the ring atoms to see if,0
it's flat,0
"15 degrees is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
ring[ind+3] range of this function is -pi to pi,0
now check the dihedral between the ring atoms and an atom,0
connected to the current atom to see if that's flat too.,0
"15 degress is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
"ring[ind+3], range of this function is -pi to pi",0
Get all the rings containing each of the atoms in the ligand,0
Aromatic rings are of length 5 or 6,0
"Due to data errors in PDB files, there are cases in which",0
non-protein atoms are bonded to protein atoms. Manually remove these,0
"cases, by testing that ring atom indices are a subset of non-protein",0
ring indices.,0
Aromatic rings are flat,0
Aromatic rings are of length <= 6,0
At least 3 indices are required to identify the aromatic plane.,0
if self.get_aromatic_marker(indices_of_ring) is None:,0
"raise ValueError(""None at %s for %s"" % (key,",0
str(indices_of_ring))),0
Tryptophan has two aromatic rings.,0
Functions to assign secondary structure to protein residues,0
===========================================================,0
"first, we need to know what residues are available",0
print self.get_residues(),0
TODO(rbharath): Why magic number 8?,1
now make sure the first four all have the same resid and,0
the last four all have the same resid,0
TODO(rbharath): Ugly code right here...,1
Now give easier to use names to the atoms,0
Now compute the phi and psi dihedral angles,0
Now use those angles to determine if it's alpha or beta,0
A residue of index i is only going to be in an alpha helix,0
its CA is within 6 A of the CA of the residue i + 3,0
so it's in an alpha helix,0
so now compare that CA to all the other CA's,0
so it's also in an alpha helix,0
so this CA atom is one of the ones the first atom,0
might hydrogen bond with,0
so these two CA atoms are close enough together,0
that their residues are probably hydrogen bonded,0
Alpha helices are only alpha helices if they span at least 4,0
residues (to wrap around and hydrogen bond). I'm going to,0
"require them to span at least 5 residues, based on",0
examination of many structures.,0
now go through each of the BETA CA atoms. A residue is only,0
going to be called a beta sheet if CA atom is within 6.0 A,0
"of another CA beta, same chain, but index difference > 2.",0
so it's in a beta sheet,0
so not comparing an atom to itself,0
so you're comparing it only to other BETA-sheet atoms,0
so require them to be on the same chain. needed to,0
indices can be fairly compared,0
so the two residues are not simply adjacent to each,0
other on the chain,0
so these to atoms are close to each other,0
Now some more post-processing needs to be done. Do this,0
again to clear up mess that may have just been created,0
"(single residue beta strand, for example)",0
Beta sheets are usually at least 3 residues long,0
so they are sequential,0
Now update each of the atoms with this structural information,0
Use this list to perform sanity checks on alpha-helix and beta-sheet,0
labels.,0
check for separate count and SMILES entries for each fragment,0
## 3zso comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"Currently, just verifies that nothing crashes.",0
## 3zp9 comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
## 3bwf comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"The keys of these dicts are pairs of atomtypes, but the keys are",0
"sorted so that (""C"", ""O"") is always written as ""C_O"". Thus, for N",0
"atom types, there are N*(N+1)/2 unique pairs.",0
TODO(rbharath): Charges are not computed correctly for certain,1
ligands! (see 2y2h_ligand). Understand why this happens.,0
assert np.count_nonzero(np.array(electrostatics.values())) > 0,0
print counts,0
1zea is the only example that has any pi-stacking.,0
Lengths:,0
ligand_receptor_close_contacts: N*(N+1)/2,0
ligand_receptor_contacts: N*(N+1)/2,0
ligand_receptor_electrostatics: N*(N+1)/2,0
ligand_atom_counts: N,0
hbonds: 12,0
hydrophobics: 6,0
stacking: 3,0
pi_cation: 6,0
t_shaped: 3,0
active_site_flexibility: 6,0
salt_bridges: 3,0
rotatable_boonds_count: 1,0
We need to import models so they can be created by model_builder,0
-*- coding: utf-8 -*-,0
,0
"deepchem documentation build configuration file, created by",0
sphinx-quickstart on Tue Jan 19 17:37:50 2016.,0
,0
This file is execfile()d with the current directory set to its,0
containing dir.,0
,0
Note that not all possible configuration values are present in this,0
autogenerated file.,0
,0
All configuration values have a default; values that are commented out,0
serve to show the default.,0
"If extensions (or modules to document with autodoc) are in another directory,",0
add these directories to sys.path here. If the directory is relative to the,0
"documentation root, use os.path.abspath to make it absolute, like shown here.",0
"sys.path.insert(0, os.path.abspath('.'))",0
-- General configuration ------------------------------------------------,0
"If your documentation needs a minimal Sphinx version, state it here.",0
needs_sphinx = '1.0',0
"Add any Sphinx extension module names here, as strings. They can be",0
extensions coming with Sphinx (named 'sphinx.ext.*') or your custom,0
ones.,0
"Add any paths that contain templates here, relative to this directory.",0
The suffix(es) of source filenames.,0
You can specify multiple suffix as a list of string:,0
"source_suffix = ['.rst', '.md']",0
The encoding of source files.,0
source_encoding = 'utf-8-sig',0
The master toctree document.,0
General information about the project.,0
"The version info for the project you're documenting, acts as replacement for",0
"|version| and |release|, also used in various other places throughout the",0
built documents.,0
,0
The short X.Y version.,0
"The full version, including alpha/beta/rc tags.",0
The language for content autogenerated by Sphinx. Refer to documentation,0
for a list of supported languages.,0
,0
This is also used if you do content translation via gettext catalogs.,0
"Usually you set ""language"" from the command line for these cases.",0
"There are two options for replacing |today|: either, you set today to some",0
"non-false value, then it is used:",0
today = '',0
"Else, today_fmt is used as the format for a strftime call.",0
"today_fmt = '%B %d, %Y'",0
"List of patterns, relative to source directory, that match files and",0
directories to ignore when looking for source files.,0
The reST default role (used for this markup: `text`) to use for all,0
documents.,0
default_role = None,0
"If true, '()' will be appended to :func: etc. cross-reference text.",0
add_function_parentheses = True,0
"If true, the current module name will be prepended to all description",0
unit titles (such as .. function::).,0
add_module_names = True,0
"If true, sectionauthor and moduleauthor directives will be shown in the",0
output. They are ignored by default.,0
show_authors = False,0
The name of the Pygments (syntax highlighting) style to use.,0
A list of ignored prefixes for module index sorting.,0
modindex_common_prefix = [],0
"If true, keep warnings as ""system message"" paragraphs in the built documents.",0
keep_warnings = False,0
"If true, `todo` and `todoList` produce output, else they produce nothing.",1
-- Options for HTML output ----------------------------------------------,0
The theme to use for HTML and HTML Help pages.  See the documentation for,0
a list of builtin themes.,0
Theme options are theme-specific and customize the look and feel of a theme,0
"further.  For a list of options available for each theme, see the",0
documentation.,0
html_theme_options = {},0
"Add any paths that contain custom themes here, relative to this directory.",0
html_theme_path = [],0
"The name for this set of Sphinx documents.  If None, it defaults to",0
"""<project> v<release> documentation"".",0
html_title = None,0
A shorter title for the navigation bar.  Default is the same as html_title.,0
html_short_title = None,0
The name of an image file (relative to this directory) to place at the top,0
of the sidebar.,0
html_logo = None,0
The name of an image file (within the static path) to use as favicon of the,0
docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32,0
pixels large.,0
html_favicon = None,0
"Add any paths that contain custom static files (such as style sheets) here,",0
"relative to this directory. They are copied after the builtin static files,",0
"so a file named ""default.css"" will overwrite the builtin ""default.css"".",0
Add any extra paths that contain custom files (such as robots.txt or,0
".htaccess) here, relative to this directory. These files are copied",0
directly to the root of the documentation.,0
html_extra_path = [],0
"If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",0
using the given strftime format.,0
"html_last_updated_fmt = '%b %d, %Y'",0
"If true, SmartyPants will be used to convert quotes and dashes to",0
typographically correct entities.,0
html_use_smartypants = True,0
"Custom sidebar templates, maps document names to template names.",0
html_sidebars = {},0
"Additional templates that should be rendered to pages, maps page names to",0
template names.,0
html_additional_pages = {},0
"If false, no module index is generated.",0
html_domain_indices = True,0
"If false, no index is generated.",0
html_use_index = True,0
"If true, the index is split into individual pages for each letter.",0
html_split_index = False,0
"If true, links to the reST sources are added to the pages.",0
html_show_sourcelink = True,0
"If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.",0
html_show_sphinx = True,0
"If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.",0
html_show_copyright = True,0
"If true, an OpenSearch description file will be output, and all pages will",0
contain a <link> tag referring to it.  The value of this option must be the,0
base URL from which the finished HTML is served.,0
html_use_opensearch = '',0
"This is the file name suffix for HTML files (e.g. "".xhtml"").",0
html_file_suffix = None,0
Language to be used for generating the HTML full-text search index.,0
Sphinx supports the following languages:,0
"'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'",0
"'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'",0
html_search_language = 'en',0
"A dictionary with options for the search language support, empty by default.",0
Now only 'ja' uses this config value,0
html_search_options = {'type': 'default'},0
The name of a javascript file (relative to the configuration directory) that,0
"implements a search results scorer. If empty, the default will be used.",0
html_search_scorer = 'scorer.js',0
Output file base name for HTML help builder.,0
-- Options for LaTeX output ---------------------------------------------,0
The paper size ('letterpaper' or 'a4paper').,0
"'papersize': 'letterpaper',",0
"The font size ('10pt', '11pt' or '12pt').",0
"'pointsize': '10pt',",0
Additional stuff for the LaTeX preamble.,0
"'preamble': '',",0
Latex figure (float) alignment,0
"'figure_align': 'htbp',",0
Grouping the document tree into LaTeX files. List of tuples,0
"(source start file, target name, title,",0
"author, documentclass [howto, manual, or own class]).",0
The name of an image file (relative to this directory) to place at the top of,0
the title page.,0
latex_logo = None,0
"For ""manual"" documents, if this is true, then toplevel headings are parts,",0
not chapters.,0
latex_use_parts = False,0
"If true, show page references after internal links.",0
latex_show_pagerefs = False,0
"If true, show URL addresses after external links.",0
latex_show_urls = False,0
Documents to append as an appendix to all manuals.,0
latex_appendices = [],0
"If false, no module index is generated.",0
latex_domain_indices = True,0
-- Options for manual page output ---------------------------------------,0
One entry per manual page. List of tuples,0
"(source start file, name, description, authors, manual section).",0
"If true, show URL addresses after external links.",0
man_show_urls = False,0
-- Options for Texinfo output -------------------------------------------,0
Grouping the document tree into Texinfo files. List of tuples,0
"(source start file, target name, title, author,",0
"dir menu entry, description, category)",0
Documents to append as an appendix to all manuals.,0
texinfo_appendices = [],0
"If false, no module index is generated.",0
texinfo_domain_indices = True,0
"How to display URL addresses: 'footnote', 'no', or 'inline'.",0
texinfo_show_urls = 'footnote',0
"If true, do not generate a @detailmenu in the ""Top"" node's menu.",0
texinfo_no_detailmenu = False,0
Example configuration for intersphinx: refer to the Python standard library.,0
lines in the label file have format,0
PDB-code Resolution Release-Year -logKd Kd reference ligand-name,0
"print line[0], line[3]",0
TODO(rbharath): Use standard joblib once old-data has been regenerated.,1
import joblib,0
First line of user-specified CSV *must* be header.,0
working-with-3d-molecules,0
initial embedding,0
minimization and pruning,0
always keep lowest-energy conformer,0
discard conformers after max_conformers is reached,0
get RMSD to selected conformers,0
discard conformers within the RMSD threshold,0
create a new molecule to hold the chosen conformers,0
this ensures proper conformer IDs and energy-based ordering,0
TODO(rbharath): The semantics of this class are very difficult to debug.,1
"Multiple transformations of the data are performed on disk, and computations",0
of mean/std are spread across multiple functions for efficiency. Some,0
refactoring needs to happen here.,0
TODO(rbharath): Still a bit of information leakage.,1
TODO(rbharath): FeaturizedSamples should not be responsible for,1
"X-transform, X_sums, etc. Move that stuff over to Dataset.",0
"input/output transforms not specified yet, so",0
"self.transforms = (input_transforms, output_transforms) =>",0
TODO(rbharath): There is a dangerous mixup in semantics. If itershards() is,1
"called without calling transform(), it will explode. Maybe have a separate",0
initialization function to avoid this problem.,0
Store input_transforms/output_transforms so the dataset remembers its state.,0
TODO(rbharath): These lines are puzzling. Better way to avoid storage,1
duplication here?,0
Turns NaNs to zeros,0
"The following are all associated with Dataset, but are separate functions to",0
make it easy to use multiprocessing.,0
TODO(rbharath): This is a hack. clean up.,1
TODO(rbharath): Should X be saved to out_X_transformed as well? Since,1
itershards expects to loop over X-transformed? (Ditto for y/w),0
perform common train/test split across all tasks,0
Set missing data to have weight zero,0
Note that X_n is a list of floats,0
"Note y_n is a list of arrays of shape (n_tasks,)",0
TODO(rbharath): This is a hack based on fact that multi-tasktype models,1
aren't supported.,0
"Sometimes all samples have zero weight. In this case, continue.",0
We need to import models so they can be created by model_builder,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
TODO(rbharath): There should be some automatic check to ensure that all,1
required model_params are specified.,0
Featurize input,0
Transform data into arrays for ML,0
Split into train/test,0
Transforming train/test data,0
Fit model,0
Eval model on train,0
Moving imports to be local to avoid isnstall issues with,0
"Convolution3D, which is not yet part of keras proper.",0
number of convolutional filters to use at each layer,0
level of pooling to perform at each layer (POOL x POOL),0
level of convolution to perform at each layer (CONV x CONV),0
"TODO(rbharath): If we change away from axis-size 32, this code will break.",1
Eventually figure out a more general rule that works for all axis sizes.,0
Note that keras requires the model architecture and weights to be stored,0
separately. A json file is generated that specifies the model architecture.,0
The weights will be stored in an h5 file. The pkl.gz file with store the,0
target name.,0
Save architecture,0
Add eps weight to avoid minibatches with zero weight (causes theano to crash).,0
"Class probabilities are predicted for classification outputs. Instead,",0
output the most likely class.,0
TODO(rbharath): This does not work with very large datasets! sklearn does,1
"support partial_fit, but only for some models. Might make sense to make",0
PartialSklearnModel subclass at some point to support large data models.,0
List of registered models,0
TODO(rbharath/enf): We need a structured way to deal with potential GPU,1
memory overflows.,0
TODO(rbharath): The structure of the produced df might be,0
complicated. Better way to model?,1
TODO(rbharath): This feels like a total hack. Is there a structured way,1
to deal with this instead?,1
# The following notice is copied from the original NNScore file.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
ELECTROSTATIC_JOULE_PER_MOL = 138.94238460104697e4 # units?,0
"This is just a scaling factor, so it's set so as to keep the network",0
inputs roughly contained in 0-1,0
"O-H distance is 0.96 A, N-H is 1.01 A. See",0
http://www.science.uwaterloo.ca/~cchieh/cact/c120/bondel.html,0
"If atoms are < 2.5 A apart, we count it as a close contact",0
"If receptor and ligand atoms are > 4 A apart, we consider them",0
unable to interact with simple electrostatics.,0
"""PI-Stacking Interactions ALIVE AND WELL IN PROTEINS"" says",0
"distance of 7.5 A is good cutoff. This seems really big to me,",0
except that pi-pi interactions (parallel) are actually usually,0
off centered. Interesting paper.  Note that adenine and,0
"tryptophan count as two aromatic rings. So, for example, an",0
"interaction between these two, if positioned correctly, could",0
count for 4 pi-pi interactions.,0
Cation-pi interaction cutoff based on,0
"""Cation-pi interactions in structural biology.""",0
4  is good cutoff for salt bridges according to,0
"""Close-Range Electrostatic Interactions in Proteins"",",0
"but looking at complexes, I decided to go with 5.5 A",0
This is perhaps controversial. I noticed that often a pi-cation,0
"interaction or other pi interaction was only slightly off, but",0
"looking at the structure, it was clearly supposed to be a pi-cation",0
interaction. I've decided then to artificially expand the radius of,0
"each pi ring. Think of this as adding in a VDW radius, or",0
"accounting for poor crystal-structure resolution, or whatever you",0
want to justify it.,0
note that dictionaries (hashtables) are passed by reference in python,0
Now see if there's hydrophobic contacts (C-C contacts),0
to convert into J/mol; might be nice to double check this,0
TODO(bramsundar): What are units of,1
ligand_charge/receptor_charge?,0
"so they're more or less perpendicular, it's probably a",0
"pi-edge interaction having looked at many structures, I",0
noticed the algorithm was identifying T-pi reactions,0
"when the two rings were in fact quite distant, often",0
"with other atoms in between. Eye-balling it, requiring",0
that at their closest they be at least 5 A apart seems,0
to separate the good T's from the bad,0
"so at their closest points, the two rings come within",0
5 A of each other.,0
"okay, is the ligand pi pointing into the receptor",0
"pi, or the other way around?  first, project the",0
center of the ligand pi onto the plane of the,0
"receptor pi, and vs. versa",0
"This could be directional somehow, like a hydrogen",0
bond.,0
"now, if it's a true pi-T interaction, this projected",0
point should fall within the ring whose plane it's,0
been projected into.,0
so it is in the ring on the projected plane.,0
since it could be interacting with a cofactor or something,0
Now see if there's some sort of hydrogen bond between,0
"these two atoms. distance cutoff = H_BOND_DIST, angle cutoff =",0
H_BOND_ANGLE.,0
TODO(rbharath): This is a horrible inner-loop search. Can,1
this be made more efficient?,0
Make sure to set comment (used below),0
Make sure to set comment (used below),0
"print ""nearby hydrogens: "" + str(hydrogens)",0
now we need to check the angles,0
"TODO(rbharath): Rather than using this heuristic, it seems like",1
it might be better to just report the angle in the feature,1
vector...,0
"so there could be some pi-pi interactions.  Now, let's",0
check for stacking interactions. Are the two pi's roughly,0
parallel?,0
"so they're more or less parallel, it's probably pi-pi",0
"stacking now, since pi-pi are not usually right on",0
top of each other. They're often staggered. So I don't,0
want to just look at the centers of the rings and,0
compare. Let's look at each of the atoms.  do atom of,0
"the atoms of one ring, when projected onto the plane of",0
"the other, fall within that other ring?",0
start by assuming it's not a pi-pi stacking interaction,0
project the ligand atom onto the plane of the receptor ring,0
TODO(rbharath): This if-else is confusing.,1
project the ligand atom onto the plane of the receptor ring,0
since it could be interacting with a cofactor or something,0
project the charged onto the plane of the aromatic,0
since it could be interacting with a cofactor or something,0
now it's the ligand that has the aromatic group,0
since it could be interacting with a cofactor or something,0
so they have oppositve charges,0
TODO(rbharath): What is atom type A here?,1
Load receptor and ligand from file.,0
## OPEN TEMPDIR,0
## CLOSE TEMPDIR,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
"AddHydrogens(polaronly, correctForPH, pH)",0
a*x + b*y + c*z = dI think that,0
"self.x, self.y, self.z = x, y, z",0
"self.x, self.y, self.z = coords[0], coords[1], coords[2]",0
TODO(bramsundar): Should this be __copy__?,1
"return self.dist_to(Point(coords=np.array([0, 0, 0])))",0
"return np.array([self.x, self.y, self.z])",0
TODO(rbharath): Should this be an atom function?,1
"This line is necessary for babel to work, though many PDBs in",0
the PDB would have this line commented out,0
now atom type (for pdbqt),0
"If atomtype is not specified, but atomname is, set atomtype to the",0
"first letter of atomname. This heuristic suffices for proteins,",0
since no two-letter elements appear in standard amino acids.,0
Any number needs to be removed from the element name,0
"this only uses the rightmost three characters, essentially",0
removing unique rotamer identification,0
"The normal vector to plane is n = [a, b, c]",0
We first shift by basepoint (a point on given plane) to make math,0
simpler. basepoint is given by d/||n||^2 * n,0
The perpendicular component of diff to plane is,0
(n^T diff / ||n||^2) * n,0
generate SMILES for fragments,0
import all Featurizer subclasses so __subclasses__ will work,0
these have to be local imports to avoid circular imports,0
get output from engines,0
get the maximum number of conformers,0
construct the new container,0
- first axis = # mols,0
- second axis = max # conformers,0
- remaining axes = determined by feature shape,0
fill in the container,0
"If gzipped, need to compute extension again",0
"If CSV input, assume that first row contains labels",0
Skip labels,0
"processed_rows = raw_df.apply(process_raw_sample_helper_partial, axis=1)",0
raw_df = pd.DataFrame.from_records(processed_rows),0
"pandas rows are tuples (row_num, row_data)",0
The standard columns for featurized data.,0
"compounds_df is not altered by any method after initialization, so it's",0
safe to keep a copy in memory and on disk.,0
TODO(rbharath): Might this be inefficient?,1
Sort from largest to smallest scaffold sets,0
list-of-available-descriptors.,0
NNScore 2.01 is released under the GNU General Public License (see,0
http://www.gnu.org/licenses/gpl.html).,0
"If you have any questions, comments, or suggestions, please don't",0
"hesitate to contact me, Jacob Durrant, at jdurrant [at] ucsd [dot]",0
"edu. If you use NNScore 2.01 in your work, please cite [REFERENCE",0
HERE].,0
Remove rings of length 0,0
"To remove duplicate entries, we convert rings from a list to set, and",0
then back to a list again. There's a snafu since each ring in rings is,0
itself a list (and lists are unhashable in python). To circumvent this,0
"issue, we convert each ring into a string (after sorting). For example,",0
"[2, 1] maps to '[1, 2]'. These strings are hashable. To recover the",0
"original lists, we use ast.literal_eval.",0
Use dictionary to maintain state about which rings are supersets.,0
All distances are in Angstroms. Duplicate pairs not specified. For,0
"example, to find distance (""H"", ""C""), the lookup key is (""C"", ""H"")",0
"This one not from source sited above. Not sure where it's from, but",0
"it wouldn't ever be used in the current context (""AutoGrow"")",0
estimate based on eye balling Handbook of Chemistry and Physics,0
Reset internal state,0
Now load the file into a list,0
"Load atom data (coordinates, etc.)",0
this string unique identifies each atom,0
so each atom can only be loaded once. No rotamers.,0
So you're actually reindexing everything here.,0
### TODO(rbharath): Disabling loading of non,1
Check that the range is nonempty.,0
"just so no PDB is empty, VMD will load them all",0
write coordinates,0
first get available index,0
now add atom,0
Add to non-protein list,0
Functions to determine the bond connectivity based on distance,0
==============================================================,0
Functions to identify positive charges,0
======================================,0
Metallic atoms are assumed to be cations.,0
Get all the quartenary amines on non-protein residues (these are the,0
only non-protein groups that will be identified as positively,0
charged). Note that nitrogen has only 5 valence electrons (out of 8,0
"for a full shell), so any nitrogen with four bonds must be positively",0
charged (think NH4+).,0
"a quartenary amine, so it's easy",0
so the indices stored is just the index of the nitrogen and any,0
attached atoms,0
"maybe you only have two hydrogens added, but they're sp3 hybridized.",0
"Just count this as a quartenary amine, since I think the positive",0
charge would be stabilized. This situation can arise with,0
lone-pair electron nitrogen compounds like pyrrolidine,0
(http://www.chem.ucla.edu/harding/tutorials/lone_pair.pdf),0
Test that the angles approximately match the tetrahedral 109,0
degrees,0
so indexes added are the nitrogen and any attached atoms.,0
let's check for a phosphate or anything where a phosphorus is bound,0
"to two oxygens, where both oxygens are bound to only one heavy atom",0
(the phosphorus). I think this will get several phosphorus,0
substances.,0
now count the number of oxygens bound only to the phosphorus,0
"let's check for guanidino-like groups (actually H2N-C-NH2,",0
where not CN3.),0
if the carbon has only three atoms connected to it,0
"if true, carbon is connected to at least two nitrogens now,",0
so we need to count the number of nitrogens that are only,0
connected to one heavy atom (the carbon),0
Index of atom that connects this charged group to,0
"the rest of the molecule, ultimately to make sure",0
it's sp3 hybridized. Remains -1 if no such atom exists.,0
TODO(rbharath): Is picking the first non-nitrogen atom,1
correct here?,0
Handle case of guanidinium cation,0
so there are at two nitrogens that are only,0
connected to the carbon (and probably some,0
hydrogens),0
now you need to make sure connector_ind atom is sp3 hybridized,0
"There are only two ""guanidino"" nitrogens. Assume the",0
negative charge is spread equally between the two.,0
a carboxylate carbon will have three items connected to it.,0
a carboxylate will have two oxygens connected to,0
"it. Now, each of the oxygens should be connected",0
to only one heavy atom (so if it's connected to a,0
"hydrogen, that's okay)",0
so it's a carboxylate! Add a negative charge.,0
Assume negative charge is centered between the two,0
oxygens.,0
let's check for a sulfonate or anything where a sulfur is,0
bound to at least three oxygens and at least three are,0
bound to only the sulfur (or the sulfur and a hydrogen).,0
the sulfur is bound to at least three oxygens now,0
count the number of oxygens that are only bound to the,0
sulfur,0
so there are at least three oxygens that are only,0
bound to the sulfur,0
Group atoms in the same residue together,0
Assign each atom a residue key.,0
Handle edge case of last residue.,0
Select those atoms which are part of the charged group.,0
Functions to identify aromatic rings,0
====================================,0
first identify the center point,0
now get the plane that defines this ring. Recall that there are,0
atleast 3-points in indices_of_ring by ValueError above.,0
# formula for plane will be ax + by + cz = d,0
"first, let's see if the last atom in this ring is a carbon",0
connected to four atoms. That would be a quick way of,0
telling this is not an aromatic ring,0
now check the dihedral between the ring atoms to see if,0
it's flat,0
"15 degrees is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
ring[ind+3] range of this function is -pi to pi,0
now check the dihedral between the ring atoms and an atom,0
connected to the current atom to see if that's flat too.,0
"15 degress is the cutoff, ring[ind], ring[ind+1], ring[ind+2],",0
"ring[ind+3], range of this function is -pi to pi",0
Get all the rings containing each of the atoms in the ligand,0
Aromatic rings are of length 5 or 6,0
"Due to data errors in PDB files, there are cases in which",0
non-protein atoms are bonded to protein atoms. Manually remove these,0
"cases, by testing that ring atom indices are a subset of non-protein",0
ring indices.,0
Aromatic rings are flat,0
Aromatic rings are of length <= 6,0
At least 3 indices are required to identify the aromatic plane.,0
if self.get_aromatic_marker(indices_of_ring) is None:,0
"raise ValueError(""None at %s for %s"" % (key,",0
str(indices_of_ring))),0
Tryptophan has two aromatic rings.,0
Functions to assign secondary structure to protein residues,0
===========================================================,0
"first, we need to know what residues are available",0
print self.get_residues(),0
TODO(rbharath): Why magic number 8?,1
now make sure the first four all have the same resid and,0
the last four all have the same resid,0
TODO(rbharath): Ugly code right here...,1
Now give easier to use names to the atoms,0
Now compute the phi and psi dihedral angles,0
Now use those angles to determine if it's alpha or beta,0
A residue of index i is only going to be in an alpha helix,0
its CA is within 6 A of the CA of the residue i + 3,0
so it's in an alpha helix,0
so now compare that CA to all the other CA's,0
so it's also in an alpha helix,0
so this CA atom is one of the ones the first atom,0
might hydrogen bond with,0
so these two CA atoms are close enough together,0
that their residues are probably hydrogen bonded,0
Alpha helices are only alpha helices if they span at least 4,0
residues (to wrap around and hydrogen bond). I'm going to,0
"require them to span at least 5 residues, based on",0
examination of many structures.,0
now go through each of the BETA CA atoms. A residue is only,0
going to be called a beta sheet if CA atom is within 6.0 A,0
"of another CA beta, same chain, but index difference > 2.",0
so it's in a beta sheet,0
so not comparing an atom to itself,0
so you're comparing it only to other BETA-sheet atoms,0
so require them to be on the same chain. needed to,0
indices can be fairly compared,0
so the two residues are not simply adjacent to each,0
other on the chain,0
so these to atoms are close to each other,0
Now some more post-processing needs to be done. Do this,0
again to clear up mess that may have just been created,0
"(single residue beta strand, for example)",0
Beta sheets are usually at least 3 residues long,0
so they are sequential,0
Now update each of the atoms with this structural information,0
Use this list to perform sanity checks on alpha-helix and beta-sheet,0
labels.,0
check for separate count and SMILES entries for each fragment,0
## 3zso comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"Currently, just verifies that nothing crashes.",0
## 3zp9 comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
## 3bwf comes from PDBBind-CN,0
The ligand is also specified by pdbbind,0
"The keys of these dicts are pairs of atomtypes, but the keys are",0
"sorted so that (""C"", ""O"") is always written as ""C_O"". Thus, for N",0
"atom types, there are N*(N+1)/2 unique pairs.",0
TODO(rbharath): Charges are not computed correctly for certain,1
ligands! (see 2y2h_ligand). Understand why this happens.,0
assert np.count_nonzero(np.array(electrostatics.values())) > 0,0
print counts,0
1zea is the only example that has any pi-stacking.,0
Lengths:,0
ligand_receptor_close_contacts: N*(N+1)/2,0
ligand_receptor_contacts: N*(N+1)/2,0
ligand_receptor_electrostatics: N*(N+1)/2,0
ligand_atom_counts: N,0
hbonds: 12,0
hydrophobics: 6,0
stacking: 3,0
pi_cation: 6,0
t_shaped: 3,0
active_site_flexibility: 6,0
salt_bridges: 3,0
rotatable_boonds_count: 1,0
We need to import models so they can be created by model_builder,0
