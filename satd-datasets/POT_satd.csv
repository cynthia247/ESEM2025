Version,Commit Message,SATD
0.9.5,FIXME: we should probably reset __new__ for full generality,1
0.9.5,XXX: should we rather test if instance of estimator?,1
0.9.5,this is a not very efficient way to make numpy,1
0.9.5,this is a not very efficient way to make numpy,1
0.9.5,todo(okachaiev): replace this with a more reasonable implementation,1
0.9.5,can probably be improved by computing only relevant values,1
0.9.5,set numpy print options : TODO update tests when all release use modern numpy,1
0.9.5,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.9.4,FIXME: we should probably reset __new__ for full generality,1
0.9.4,XXX: should we rather test if instance of estimator?,1
0.9.4,this is a not very efficient way to make numpy,1
0.9.4,this is a not very efficient way to make jax numpy,1
0.9.4,this is a not very efficient way to make numpy,1
0.9.4,todo(okachaiev): replace this with a more reasonable implementation,1
0.9.4,can probably be improved by computing only relevant values,1
0.9.4,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.9.3,FIXME: we should probably reset __new__ for full generality,1
0.9.3,XXX: should we rather test if instance of estimator?,1
0.9.3,this is a not very efficient way to make numpy,1
0.9.3,this is a not very efficient way to make jax numpy,1
0.9.3,this is a not very efficient way to make numpy,1
0.9.3,todo(okachaiev): replace this with a more reasonable implementation,1
0.9.3,can probably be improved by computing only relevant values,1
0.9.3,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.9.2,FIXME: we should probably reset __new__ for full generality,1
0.9.2,XXX: should we rather test if instance of estimator?,1
0.9.2,this is a not very efficient way to make numpy,1
0.9.2,this is a not very efficient way to make jax numpy,1
0.9.2,this is a not very efficient way to make numpy,1
0.9.2,todo(okachaiev): replace this with a more reasonable implementation,1
0.9.2,can probably be improved by computing only relevant values,1
0.9.2,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.9.1,FIXME: we should probably reset __new__ for full generality,1
0.9.1,XXX: should we rather test if instance of estimator?,1
0.9.1,this is a not very efficient way to make numpy,1
0.9.1,this is a not very efficient way to make jax numpy,1
0.9.1,this is a not very efficient way to make numpy,1
0.9.1,can probably be improved by computing only relevant values,1
0.9.1,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.9.0,FIXME: we should probably reset __new__ for full generality,1
0.9.0,XXX: should we rather test if instance of estimator?,1
0.9.0,this is a not very efficient way to make numpy,1
0.9.0,this is a not very efficient way to make jax numpy,1
0.9.0,this is a not very efficient way to make numpy,1
0.9.0,can probably be improved by computing only relevant values,1
0.9.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.8.2,FIXME: we should probably reset __new__ for full generality,1
0.8.2,XXX: should we rather test if instance of estimator?,1
0.8.2,this is a not very efficient way to make numpy,1
0.8.2,this is a not very efficient way to make jax numpy,1
0.8.2,this is a not very efficient way to make numpy,1
0.8.2,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.8.1.0,FIXME: we should probably reset __new__ for full generality,1
0.8.1.0,XXX: should we rather test if instance of estimator?,1
0.8.1.0,this is a not very efficient way to make numpy,1
0.8.1.0,this is a not very efficient way to make jax numpy,1
0.8.1.0,this is a not very efficient way to make numpy,1
0.8.1.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.8.1,FIXME: we should probably reset __new__ for full generality,1
0.8.1,XXX: should we rather test if instance of estimator?,1
0.8.1,this is a not very efficient way to make numpy,1
0.8.1,this is a not very efficient way to make jax numpy,1
0.8.1,this is a not very efficient way to make numpy,1
0.8.1,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.8.0,FIXME: we should probably reset __new__ for full generality,1
0.8.0,XXX: should we rather test if instance of estimator?,1
0.8.0,this is a not very efficient way to make numpy,1
0.8.0,this is a not very efficient way to make jax numpy,1
0.8.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.7.0,FIXME: we should probably reset __new__ for full generality,1
0.7.0,XXX: should we rather test if instance of estimator?,1
0.7.0,XXX use random state,1
0.7.0,XXX : should use a random state and not use the global seed,1
0.7.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.7.0-beta0,FIXME: we should probably reset __new__ for full generality,1
0.7.0-beta0,XXX: should we rather test if instance of estimator?,1
0.7.0-beta0,XXX use random state,1
0.7.0-beta0,XXX : should use a random state and not use the global seed,1
0.7.0-beta0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.6.0,FIXME: we should probably reset __new__ for full generality,1
0.6.0,XXX: should we rather test if instance of estimator?,1
0.6.0,XXX use random state,1
0.6.0,XXX : should use a random state and not use the global seed,1
0.6.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.5.0,FIXME: we should probably reset __new__ for full generality,1
0.5.0,XXX: should we rather test if instance of estimator?,1
0.5.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.4.0,FIXME: we should probably reset __new__ for full generality,1
0.4.0,XXX: should we rather test if instance of estimator?,1
0.4.0,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.4,FIXME: we should probably reset __new__ for full generality,1
0.4,XXX: should we rather test if instance of estimator?,1
0.4,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.3.1,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
0.3,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.2,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.12,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.11,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.10,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.9.1,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.9,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.7,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.6,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.4,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1.3,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
V0.1,"If true, `todo` and `todoList` produce output, else they produce nothing.",1
