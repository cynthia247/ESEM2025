Version,Commit Message,SATD
v0.10.1,hack to make name substitution: we directly use _name,1
v0.10.1,hack to make name substitution: we directly use _name,1
v0.10.1,TODO: add docstrings,1
v0.10.1,TODO: add docstring for wrapped function,1
v0.10.1,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.10.1,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.10.1,some dirty hacks for mocking missing *_pb2.py files,1
v0.10.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.10.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.10.1,There are three ways we might decide not to print an error message:,1
v0.10.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.10.1,get rid of /* ... */,1
v0.10.1,TODO(unknown): We always want to check end of namespace comments,1
v0.10.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.10.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.10.1,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.10.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.10.1,TODO(unknown): Space after an operator function seem to be a common,1
v0.10.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.10.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.10.1,TODO(unknown): currently we don't check for rvalue references,1
v0.10.1,google code and would have been easier to implement.  This is because,1
v0.10.1,"the redundant semicolon, output warning here.",1
v0.10.1,it provides a way to workaround this warning for people who use,1
v0.10.1,TODO(unknown): remove this once cpplint has better support for,1
v0.10.1,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.10.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.10.1,TODO(unknown): check that classes declare or disable copy/assign,1
v0.10.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.10.1,TODO(unknown): Catch the following case. Need to change the calling,1
v0.10.1,This is dangerous because the C++ language does not guarantee that,1
v0.10.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.10.1,Try a better error message when the & is bound to something,1
v0.10.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.10.1,TODO(unknown): doesn't work if there are virtual functions with,1
v0.10.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.10.1,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.10.1,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.10.1,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.10.1,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.10.1,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.10.1,PY3 hack: make Ord work for str and bytes:,1
v0.10.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.10.1,TODO(robinson): Document these fields and methods.,1
v0.10.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.10.1,TODO(robinson): Decide whether we like these better,1
v0.10.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.10.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.10.1,"TODO(robinson): We should have aggressive checking here,",1
v0.10.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.1,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.10.1,"Else type_name references a non-local type, which isn't implemented",1
v0.10.1,A previous version had a bug where this would raise an exception when,1
v0.10.1,TODO(robinson): Test all other scalar field types.,1
v0.10.1,TODO(robinson): Test all other scalar field types.,1
v0.10.1,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.10.1,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.10.1,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.10.1,TODO(rocking): enable this test after the proto descriptor change is,1
v0.10.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.10.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.10.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.10.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.10.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.10.1,TODO(robinson): Remove duplication with similar method,1
v0.10.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.10.1,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.10.1,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.10.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.10.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.10.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.10.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.10.1,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.10.1,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.10.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.10.1,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.10.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.1,TODO(tibell): The pure-Python implementation support pickling of,1
v0.10.1,TODO(tibell): The C++ implementations actually allows assignment,1
v0.10.1,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.10.1,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.10.1,"If import doesn't work, pickling won't work either.",1
v0.10.1,But this deprecated class has a security problem: Bad input can,1
v0.10.1,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.10.1,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.10.1,This is a walkaround to avoid the static initialization of Value::null.,1
v0.10.1,This is kind of strange. Not recommended.,1
v0.10.1,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.10.1,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.10.1,"picking successive numbers.  This dependency is not ideal, but",1
v0.10.1,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.10.1,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.10.1,TODO(vladl@google.com): remove the _lin suffix.,1
v0.10.1,TODO(wan@google.com): The following user-interaction doesn't,1
v0.10.1,TODO:,1
v0.10.1,"TODO much, much later:",1
v0.10.1,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.10.1,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.10.1,TODO(nnorwitz): impl.,1
v0.10.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.1,TODO(nnorwitz): merge with Parameter in some way?,1
v0.10.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.1,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.10.1,TODO(nnorwitz): search in body too.,1
v0.10.1,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.10.1,TODO(nnorwitz): search in body too.,1
v0.10.1,TODO(nnorwitz): add templated_types.,1
v0.10.1,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.10.1,TODO(nnorwitz): this is a hack that happens for code like,1
v0.10.1,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.10.1,TODO(nnorwitz): keep the size somewhere.,1
v0.10.1,TODO(nnorwitz): handle the declaration.,1
v0.10.1,TODO(nnorwitz): handle a lot more syntax.,1
v0.10.1,TODO(nnorwitz): handle more preprocessor directives.,1
v0.10.1,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.10.1,TODO(nnorwitz): store template_portion.,1
v0.10.1,TODO(nnorwitz): handle more __attribute__ details.,1
v0.10.1,HACK(nnorwitz):  assume that all upper-case names,1
v0.10.1,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.10.1,TODO(nnorwitz): store the function_parameters.,1
v0.10.1,TODO(nnorwitz): is return_type always empty?,1
v0.10.1,TODO(nnorwitz): this isn't even close to being correct.,1
v0.10.1,TODO(nnorwitz): store tokens and improve parsing.,1
v0.10.1,TODO(nnorwitz): if there is only One name like in the,1
v0.10.1,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.10.1,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.10.1,TODO(nnorwitz): clean all this up.,1
v0.10.1,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.10.1,HACK(nnorwitz): Handle arrays properly.,1
v0.10.1,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.10.1,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.10.1,TODO(nnorwitz): it would be good to warn about this.,1
v0.10.1,TODO(nnorwitz): store that we got virtual for this base.,1
v0.10.1,TODO(nnorwitz): handle aliasing namespaces.,1
v0.10.1,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.10.1,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.10.1,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.10.1,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.10.1,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.10.1,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.9.2,hack to make name substitution: we directly use _name,1
v0.9.2,hack to make name substitution: we directly use _name,1
v0.9.2,TODO: add docstrings,1
v0.9.2,TODO: add docstring for wrapped function,1
v0.9.2,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.2,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.2,some dirty hacks for mocking missing *_pb2.py files,1
v0.9.2,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.9.2,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.9.2,There are three ways we might decide not to print an error message:,1
v0.9.2,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.9.2,get rid of /* ... */,1
v0.9.2,TODO(unknown): We always want to check end of namespace comments,1
v0.9.2,"TODO(unknown): unexpected #else, issue warning?",1
v0.9.2,"TODO(unknown): unexpected #endif, issue warning?",1
v0.9.2,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.9.2,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.9.2,TODO(unknown): Space after an operator function seem to be a common,1
v0.9.2,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.9.2,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.9.2,TODO(unknown): currently we don't check for rvalue references,1
v0.9.2,google code and would have been easier to implement.  This is because,1
v0.9.2,"the redundant semicolon, output warning here.",1
v0.9.2,it provides a way to workaround this warning for people who use,1
v0.9.2,TODO(unknown): remove this once cpplint has better support for,1
v0.9.2,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.9.2,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.9.2,TODO(unknown): check that classes declare or disable copy/assign,1
v0.9.2,TODO(unknown): catch out-of-line unary operator&:,1
v0.9.2,TODO(unknown): Catch the following case. Need to change the calling,1
v0.9.2,This is dangerous because the C++ language does not guarantee that,1
v0.9.2,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.9.2,Try a better error message when the & is bound to something,1
v0.9.2,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.9.2,TODO(unknown): doesn't work if there are virtual functions with,1
v0.9.2,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.9.2,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.9.2,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.9.2,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.9.2,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.9.2,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.9.2,PY3 hack: make Ord work for str and bytes:,1
v0.9.2,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.9.2,TODO(robinson): Document these fields and methods.,1
v0.9.2,TODO(robinson): MergeFromString() should probably return None and be,1
v0.9.2,TODO(robinson): Decide whether we like these better,1
v0.9.2,TODO(robinson): Be sure to document (and test) exactly,1
v0.9.2,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.9.2,"TODO(robinson): We should have aggressive checking here,",1
v0.9.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.2,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.9.2,"Else type_name references a non-local type, which isn't implemented",1
v0.9.2,A previous version had a bug where this would raise an exception when,1
v0.9.2,TODO(robinson): Test all other scalar field types.,1
v0.9.2,TODO(robinson): Test all other scalar field types.,1
v0.9.2,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.9.2,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.9.2,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.9.2,TODO(rocking): enable this test after the proto descriptor change is,1
v0.9.2,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.9.2,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.9.2,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.9.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.2,TODO(robinson): Remove duplication with similar method,1
v0.9.2,TODO(robinson): This probably needs to be thread-safe(?),1
v0.9.2,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.9.2,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.9.2,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.9.2,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.9.2,TODO(robinson): Support iteritems()-style iteration over all,1
v0.9.2,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.9.2,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.9.2,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.9.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.2,TODO(mattp): would testing more scalar types strengthen test?,1
v0.9.2,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.9.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.2,TODO(tibell): The pure-Python implementation support pickling of,1
v0.9.2,TODO(tibell): The C++ implementations actually allows assignment,1
v0.9.2,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.9.2,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.9.2,"If import doesn't work, pickling won't work either.",1
v0.9.2,But this deprecated class has a security problem: Bad input can,1
v0.9.2,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.2,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.2,This is a walkaround to avoid the static initialization of Value::null.,1
v0.9.2,This is kind of strange. Not recommended.,1
v0.9.2,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.9.2,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.9.2,"picking successive numbers.  This dependency is not ideal, but",1
v0.9.2,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.9.2,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.9.2,TODO(vladl@google.com): remove the _lin suffix.,1
v0.9.2,TODO(wan@google.com): The following user-interaction doesn't,1
v0.9.2,TODO:,1
v0.9.2,"TODO much, much later:",1
v0.9.2,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.9.2,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.9.2,TODO(nnorwitz): impl.,1
v0.9.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.2,TODO(nnorwitz): merge with Parameter in some way?,1
v0.9.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.2,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.9.2,TODO(nnorwitz): search in body too.,1
v0.9.2,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.9.2,TODO(nnorwitz): search in body too.,1
v0.9.2,TODO(nnorwitz): add templated_types.,1
v0.9.2,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.9.2,TODO(nnorwitz): this is a hack that happens for code like,1
v0.9.2,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.9.2,TODO(nnorwitz): keep the size somewhere.,1
v0.9.2,TODO(nnorwitz): handle the declaration.,1
v0.9.2,TODO(nnorwitz): handle a lot more syntax.,1
v0.9.2,TODO(nnorwitz): handle more preprocessor directives.,1
v0.9.2,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.9.2,TODO(nnorwitz): store template_portion.,1
v0.9.2,TODO(nnorwitz): handle more __attribute__ details.,1
v0.9.2,HACK(nnorwitz):  assume that all upper-case names,1
v0.9.2,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.9.2,TODO(nnorwitz): store the function_parameters.,1
v0.9.2,TODO(nnorwitz): is return_type always empty?,1
v0.9.2,TODO(nnorwitz): this isn't even close to being correct.,1
v0.9.2,TODO(nnorwitz): store tokens and improve parsing.,1
v0.9.2,TODO(nnorwitz): if there is only One name like in the,1
v0.9.2,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.9.2,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.9.2,TODO(nnorwitz): clean all this up.,1
v0.9.2,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.9.2,HACK(nnorwitz): Handle arrays properly.,1
v0.9.2,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.9.2,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.9.2,TODO(nnorwitz): it would be good to warn about this.,1
v0.9.2,TODO(nnorwitz): store that we got virtual for this base.,1
v0.9.2,TODO(nnorwitz): handle aliasing namespaces.,1
v0.9.2,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.9.2,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.9.2,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.9.2,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.9.2,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.9.2,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.10.0,hack to make name substitution: we directly use _name,1
v0.10.0,hack to make name substitution: we directly use _name,1
v0.10.0,TODO: add docstrings,1
v0.10.0,TODO: add docstring for wrapped function,1
v0.10.0,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.10.0,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.10.0,some dirty hacks for mocking missing *_pb2.py files,1
v0.10.0,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.10.0,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.10.0,There are three ways we might decide not to print an error message:,1
v0.10.0,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.10.0,get rid of /* ... */,1
v0.10.0,TODO(unknown): We always want to check end of namespace comments,1
v0.10.0,"TODO(unknown): unexpected #else, issue warning?",1
v0.10.0,"TODO(unknown): unexpected #endif, issue warning?",1
v0.10.0,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.10.0,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.10.0,TODO(unknown): Space after an operator function seem to be a common,1
v0.10.0,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.10.0,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.10.0,TODO(unknown): currently we don't check for rvalue references,1
v0.10.0,google code and would have been easier to implement.  This is because,1
v0.10.0,"the redundant semicolon, output warning here.",1
v0.10.0,it provides a way to workaround this warning for people who use,1
v0.10.0,TODO(unknown): remove this once cpplint has better support for,1
v0.10.0,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.10.0,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.10.0,TODO(unknown): check that classes declare or disable copy/assign,1
v0.10.0,TODO(unknown): catch out-of-line unary operator&:,1
v0.10.0,TODO(unknown): Catch the following case. Need to change the calling,1
v0.10.0,This is dangerous because the C++ language does not guarantee that,1
v0.10.0,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.10.0,Try a better error message when the & is bound to something,1
v0.10.0,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.10.0,TODO(unknown): doesn't work if there are virtual functions with,1
v0.10.0,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.10.0,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.10.0,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.10.0,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.10.0,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.10.0,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.10.0,PY3 hack: make Ord work for str and bytes:,1
v0.10.0,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.10.0,TODO(robinson): Document these fields and methods.,1
v0.10.0,TODO(robinson): MergeFromString() should probably return None and be,1
v0.10.0,TODO(robinson): Decide whether we like these better,1
v0.10.0,TODO(robinson): Be sure to document (and test) exactly,1
v0.10.0,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.10.0,"TODO(robinson): We should have aggressive checking here,",1
v0.10.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.10.0,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.10.0,"Else type_name references a non-local type, which isn't implemented",1
v0.10.0,A previous version had a bug where this would raise an exception when,1
v0.10.0,TODO(robinson): Test all other scalar field types.,1
v0.10.0,TODO(robinson): Test all other scalar field types.,1
v0.10.0,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.10.0,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.10.0,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.10.0,TODO(rocking): enable this test after the proto descriptor change is,1
v0.10.0,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.10.0,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.10.0,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.10.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.10.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.10.0,TODO(robinson): Remove duplication with similar method,1
v0.10.0,TODO(robinson): This probably needs to be thread-safe(?),1
v0.10.0,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.10.0,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.10.0,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.10.0,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.10.0,TODO(robinson): Support iteritems()-style iteration over all,1
v0.10.0,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.10.0,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.10.0,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.10.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.0,TODO(mattp): would testing more scalar types strengthen test?,1
v0.10.0,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.10.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.10.0,TODO(tibell): The pure-Python implementation support pickling of,1
v0.10.0,TODO(tibell): The C++ implementations actually allows assignment,1
v0.10.0,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.10.0,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.10.0,"If import doesn't work, pickling won't work either.",1
v0.10.0,But this deprecated class has a security problem: Bad input can,1
v0.10.0,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.10.0,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.10.0,This is a walkaround to avoid the static initialization of Value::null.,1
v0.10.0,This is kind of strange. Not recommended.,1
v0.10.0,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.10.0,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.10.0,"picking successive numbers.  This dependency is not ideal, but",1
v0.10.0,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.10.0,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.10.0,TODO(vladl@google.com): remove the _lin suffix.,1
v0.10.0,TODO(wan@google.com): The following user-interaction doesn't,1
v0.10.0,TODO:,1
v0.10.0,"TODO much, much later:",1
v0.10.0,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.10.0,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.10.0,TODO(nnorwitz): impl.,1
v0.10.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.0,TODO(nnorwitz): merge with Parameter in some way?,1
v0.10.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.10.0,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.10.0,TODO(nnorwitz): search in body too.,1
v0.10.0,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.10.0,TODO(nnorwitz): search in body too.,1
v0.10.0,TODO(nnorwitz): add templated_types.,1
v0.10.0,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.10.0,TODO(nnorwitz): this is a hack that happens for code like,1
v0.10.0,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.10.0,TODO(nnorwitz): keep the size somewhere.,1
v0.10.0,TODO(nnorwitz): handle the declaration.,1
v0.10.0,TODO(nnorwitz): handle a lot more syntax.,1
v0.10.0,TODO(nnorwitz): handle more preprocessor directives.,1
v0.10.0,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.10.0,TODO(nnorwitz): store template_portion.,1
v0.10.0,TODO(nnorwitz): handle more __attribute__ details.,1
v0.10.0,HACK(nnorwitz):  assume that all upper-case names,1
v0.10.0,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.10.0,TODO(nnorwitz): store the function_parameters.,1
v0.10.0,TODO(nnorwitz): is return_type always empty?,1
v0.10.0,TODO(nnorwitz): this isn't even close to being correct.,1
v0.10.0,TODO(nnorwitz): store tokens and improve parsing.,1
v0.10.0,TODO(nnorwitz): if there is only One name like in the,1
v0.10.0,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.10.0,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.10.0,TODO(nnorwitz): clean all this up.,1
v0.10.0,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.10.0,HACK(nnorwitz): Handle arrays properly.,1
v0.10.0,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.10.0,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.10.0,TODO(nnorwitz): it would be good to warn about this.,1
v0.10.0,TODO(nnorwitz): store that we got virtual for this base.,1
v0.10.0,TODO(nnorwitz): handle aliasing namespaces.,1
v0.10.0,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.10.0,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.10.0,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.10.0,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.10.0,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.10.0,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.9.1,hack to make name substitution: we directly use _name,1
v0.9.1,hack to make name substitution: we directly use _name,1
v0.9.1,TODO: add docstrings,1
v0.9.1,TODO: add docstring for wrapped function,1
v0.9.1,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.1,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.1,some dirty hacks for mocking missing *_pb2.py files,1
v0.9.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.9.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.9.1,There are three ways we might decide not to print an error message:,1
v0.9.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.9.1,get rid of /* ... */,1
v0.9.1,TODO(unknown): We always want to check end of namespace comments,1
v0.9.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.9.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.9.1,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.9.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.9.1,TODO(unknown): Space after an operator function seem to be a common,1
v0.9.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.9.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.9.1,TODO(unknown): currently we don't check for rvalue references,1
v0.9.1,google code and would have been easier to implement.  This is because,1
v0.9.1,"the redundant semicolon, output warning here.",1
v0.9.1,it provides a way to workaround this warning for people who use,1
v0.9.1,TODO(unknown): remove this once cpplint has better support for,1
v0.9.1,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.9.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.9.1,TODO(unknown): check that classes declare or disable copy/assign,1
v0.9.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.9.1,TODO(unknown): Catch the following case. Need to change the calling,1
v0.9.1,This is dangerous because the C++ language does not guarantee that,1
v0.9.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.9.1,Try a better error message when the & is bound to something,1
v0.9.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.9.1,TODO(unknown): doesn't work if there are virtual functions with,1
v0.9.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.9.1,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.9.1,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.9.1,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.9.1,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.9.1,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.9.1,PY3 hack: make Ord work for str and bytes:,1
v0.9.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.9.1,TODO(robinson): Document these fields and methods.,1
v0.9.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.9.1,TODO(robinson): Decide whether we like these better,1
v0.9.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.9.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.9.1,"TODO(robinson): We should have aggressive checking here,",1
v0.9.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.1,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.9.1,"Else type_name references a non-local type, which isn't implemented",1
v0.9.1,A previous version had a bug where this would raise an exception when,1
v0.9.1,TODO(robinson): Test all other scalar field types.,1
v0.9.1,TODO(robinson): Test all other scalar field types.,1
v0.9.1,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.9.1,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.9.1,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.9.1,TODO(rocking): enable this test after the proto descriptor change is,1
v0.9.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.9.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.9.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.9.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.1,TODO(robinson): Remove duplication with similar method,1
v0.9.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.9.1,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.9.1,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.9.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.9.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.9.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.9.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.9.1,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.9.1,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.9.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.9.1,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.9.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.1,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.1,TODO(tibell): The pure-Python implementation support pickling of,1
v0.9.1,TODO(tibell): The C++ implementations actually allows assignment,1
v0.9.1,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.9.1,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.9.1,"If import doesn't work, pickling won't work either.",1
v0.9.1,But this deprecated class has a security problem: Bad input can,1
v0.9.1,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.1,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.1,This is a walkaround to avoid the static initialization of Value::null.,1
v0.9.1,This is kind of strange. Not recommended.,1
v0.9.1,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.9.1,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.9.1,"picking successive numbers.  This dependency is not ideal, but",1
v0.9.1,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.9.1,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.9.1,TODO(vladl@google.com): remove the _lin suffix.,1
v0.9.1,TODO(wan@google.com): The following user-interaction doesn't,1
v0.9.1,TODO:,1
v0.9.1,"TODO much, much later:",1
v0.9.1,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.9.1,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.9.1,TODO(nnorwitz): impl.,1
v0.9.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.1,TODO(nnorwitz): merge with Parameter in some way?,1
v0.9.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.1,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.1,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.9.1,TODO(nnorwitz): search in body too.,1
v0.9.1,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.9.1,TODO(nnorwitz): search in body too.,1
v0.9.1,TODO(nnorwitz): add templated_types.,1
v0.9.1,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.9.1,TODO(nnorwitz): this is a hack that happens for code like,1
v0.9.1,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.9.1,TODO(nnorwitz): keep the size somewhere.,1
v0.9.1,TODO(nnorwitz): handle the declaration.,1
v0.9.1,TODO(nnorwitz): handle a lot more syntax.,1
v0.9.1,TODO(nnorwitz): handle more preprocessor directives.,1
v0.9.1,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.9.1,TODO(nnorwitz): store template_portion.,1
v0.9.1,TODO(nnorwitz): handle more __attribute__ details.,1
v0.9.1,HACK(nnorwitz):  assume that all upper-case names,1
v0.9.1,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.9.1,TODO(nnorwitz): store the function_parameters.,1
v0.9.1,TODO(nnorwitz): is return_type always empty?,1
v0.9.1,TODO(nnorwitz): this isn't even close to being correct.,1
v0.9.1,TODO(nnorwitz): store tokens and improve parsing.,1
v0.9.1,TODO(nnorwitz): if there is only One name like in the,1
v0.9.1,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.9.1,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.9.1,TODO(nnorwitz): clean all this up.,1
v0.9.1,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.9.1,HACK(nnorwitz): Handle arrays properly.,1
v0.9.1,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.9.1,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.9.1,TODO(nnorwitz): it would be good to warn about this.,1
v0.9.1,TODO(nnorwitz): store that we got virtual for this base.,1
v0.9.1,TODO(nnorwitz): handle aliasing namespaces.,1
v0.9.1,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.9.1,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.9.1,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.9.1,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.9.1,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.9.1,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.9.0,hack to make name substitution: we directly use _name,1
v0.9.0,hack to make name substitution: we directly use _name,1
v0.9.0,TODO: add docstrings,1
v0.9.0,TODO: add docstring for wrapped function,1
v0.9.0,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.0,ToDo: we're not able to compare lists directly in Python 3 because of,1
v0.9.0,some dirty hacks for mocking missing *_pb2.py files,1
v0.9.0,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.9.0,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.9.0,There are three ways we might decide not to print an error message:,1
v0.9.0,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.9.0,get rid of /* ... */,1
v0.9.0,TODO(unknown): We always want to check end of namespace comments,1
v0.9.0,"TODO(unknown): unexpected #else, issue warning?",1
v0.9.0,"TODO(unknown): unexpected #endif, issue warning?",1
v0.9.0,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.9.0,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.9.0,TODO(unknown): Space after an operator function seem to be a common,1
v0.9.0,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.9.0,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.9.0,TODO(unknown): currently we don't check for rvalue references,1
v0.9.0,google code and would have been easier to implement.  This is because,1
v0.9.0,"the redundant semicolon, output warning here.",1
v0.9.0,it provides a way to workaround this warning for people who use,1
v0.9.0,TODO(unknown): remove this once cpplint has better support for,1
v0.9.0,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.9.0,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.9.0,TODO(unknown): check that classes declare or disable copy/assign,1
v0.9.0,TODO(unknown): catch out-of-line unary operator&:,1
v0.9.0,TODO(unknown): Catch the following case. Need to change the calling,1
v0.9.0,This is dangerous because the C++ language does not guarantee that,1
v0.9.0,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.9.0,Try a better error message when the & is bound to something,1
v0.9.0,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.9.0,TODO(unknown): doesn't work if there are virtual functions with,1
v0.9.0,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.9.0,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.9.0,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.9.0,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.9.0,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.9.0,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.9.0,PY3 hack: make Ord work for str and bytes:,1
v0.9.0,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.9.0,TODO(robinson): Document these fields and methods.,1
v0.9.0,TODO(robinson): MergeFromString() should probably return None and be,1
v0.9.0,TODO(robinson): Decide whether we like these better,1
v0.9.0,TODO(robinson): Be sure to document (and test) exactly,1
v0.9.0,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.9.0,"TODO(robinson): We should have aggressive checking here,",1
v0.9.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.9.0,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.9.0,"Else type_name references a non-local type, which isn't implemented",1
v0.9.0,A previous version had a bug where this would raise an exception when,1
v0.9.0,TODO(robinson): Test all other scalar field types.,1
v0.9.0,TODO(robinson): Test all other scalar field types.,1
v0.9.0,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.9.0,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.9.0,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.9.0,TODO(rocking): enable this test after the proto descriptor change is,1
v0.9.0,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.9.0,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.9.0,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.9.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.9.0,TODO(robinson): Remove duplication with similar method,1
v0.9.0,TODO(robinson): This probably needs to be thread-safe(?),1
v0.9.0,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.9.0,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.9.0,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.9.0,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.9.0,TODO(robinson): Support iteritems()-style iteration over all,1
v0.9.0,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.9.0,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.9.0,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.9.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.0,TODO(mattp): would testing more scalar types strengthen test?,1
v0.9.0,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.9.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.0,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.9.0,TODO(tibell): The pure-Python implementation support pickling of,1
v0.9.0,TODO(tibell): The C++ implementations actually allows assignment,1
v0.9.0,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.9.0,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.9.0,"If import doesn't work, pickling won't work either.",1
v0.9.0,But this deprecated class has a security problem: Bad input can,1
v0.9.0,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.0,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.9.0,This is a walkaround to avoid the static initialization of Value::null.,1
v0.9.0,This is kind of strange. Not recommended.,1
v0.9.0,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.9.0,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.9.0,"picking successive numbers.  This dependency is not ideal, but",1
v0.9.0,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.9.0,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.9.0,TODO(vladl@google.com): remove the _lin suffix.,1
v0.9.0,TODO(wan@google.com): The following user-interaction doesn't,1
v0.9.0,TODO:,1
v0.9.0,"TODO much, much later:",1
v0.9.0,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.9.0,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.9.0,TODO(nnorwitz): impl.,1
v0.9.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.0,TODO(nnorwitz): merge with Parameter in some way?,1
v0.9.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.0,"TODO(nnorwitz): handle namespaces, etc.",1
v0.9.0,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.9.0,TODO(nnorwitz): search in body too.,1
v0.9.0,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.9.0,TODO(nnorwitz): search in body too.,1
v0.9.0,TODO(nnorwitz): add templated_types.,1
v0.9.0,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.9.0,TODO(nnorwitz): this is a hack that happens for code like,1
v0.9.0,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.9.0,TODO(nnorwitz): keep the size somewhere.,1
v0.9.0,TODO(nnorwitz): handle the declaration.,1
v0.9.0,TODO(nnorwitz): handle a lot more syntax.,1
v0.9.0,TODO(nnorwitz): handle more preprocessor directives.,1
v0.9.0,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.9.0,TODO(nnorwitz): store template_portion.,1
v0.9.0,TODO(nnorwitz): handle more __attribute__ details.,1
v0.9.0,HACK(nnorwitz):  assume that all upper-case names,1
v0.9.0,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.9.0,TODO(nnorwitz): store the function_parameters.,1
v0.9.0,TODO(nnorwitz): is return_type always empty?,1
v0.9.0,TODO(nnorwitz): this isn't even close to being correct.,1
v0.9.0,TODO(nnorwitz): store tokens and improve parsing.,1
v0.9.0,TODO(nnorwitz): if there is only One name like in the,1
v0.9.0,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.9.0,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.9.0,TODO(nnorwitz): clean all this up.,1
v0.9.0,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.9.0,HACK(nnorwitz): Handle arrays properly.,1
v0.9.0,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.9.0,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.9.0,TODO(nnorwitz): it would be good to warn about this.,1
v0.9.0,TODO(nnorwitz): store that we got virtual for this base.,1
v0.9.0,TODO(nnorwitz): handle aliasing namespaces.,1
v0.9.0,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.9.0,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.9.0,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.9.0,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.9.0,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.9.0,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.8.3,hack to make name substitution: we directly use _name,1
v0.8.3,hack to make name substitution: we directly use _name,1
v0.8.3,TODO: add docstrings,1
v0.8.3,TODO: add docstring for wrapped function,1
v0.8.3,some dirty hacks for mocking missing *_pb2.py files,1
v0.8.3,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.8.3,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.8.3,There are three ways we might decide not to print an error message:,1
v0.8.3,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.8.3,get rid of /* ... */,1
v0.8.3,TODO(unknown): We always want to check end of namespace comments,1
v0.8.3,"TODO(unknown): unexpected #else, issue warning?",1
v0.8.3,"TODO(unknown): unexpected #endif, issue warning?",1
v0.8.3,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.8.3,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.8.3,TODO(unknown): Space after an operator function seem to be a common,1
v0.8.3,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.8.3,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.8.3,TODO(unknown): currently we don't check for rvalue references,1
v0.8.3,google code and would have been easier to implement.  This is because,1
v0.8.3,"the redundant semicolon, output warning here.",1
v0.8.3,it provides a way to workaround this warning for people who use,1
v0.8.3,TODO(unknown): remove this once cpplint has better support for,1
v0.8.3,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.8.3,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.8.3,TODO(unknown): check that classes declare or disable copy/assign,1
v0.8.3,TODO(unknown): catch out-of-line unary operator&:,1
v0.8.3,TODO(unknown): Catch the following case. Need to change the calling,1
v0.8.3,This is dangerous because the C++ language does not guarantee that,1
v0.8.3,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.8.3,Try a better error message when the & is bound to something,1
v0.8.3,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.8.3,TODO(unknown): doesn't work if there are virtual functions with,1
v0.8.3,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.8.3,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.8.3,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.8.3,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.8.3,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.8.3,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.8.3,PY3 hack: make Ord work for str and bytes:,1
v0.8.3,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.8.3,TODO(robinson): Document these fields and methods.,1
v0.8.3,TODO(robinson): MergeFromString() should probably return None and be,1
v0.8.3,TODO(robinson): Decide whether we like these better,1
v0.8.3,TODO(robinson): Be sure to document (and test) exactly,1
v0.8.3,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.8.3,"TODO(robinson): We should have aggressive checking here,",1
v0.8.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.3,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.8.3,"Else type_name references a non-local type, which isn't implemented",1
v0.8.3,A previous version had a bug where this would raise an exception when,1
v0.8.3,TODO(robinson): Test all other scalar field types.,1
v0.8.3,TODO(robinson): Test all other scalar field types.,1
v0.8.3,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.8.3,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.8.3,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.8.3,TODO(rocking): enable this test after the proto descriptor change is,1
v0.8.3,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.8.3,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.8.3,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.8.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.3,TODO(robinson): Remove duplication with similar method,1
v0.8.3,TODO(robinson): This probably needs to be thread-safe(?),1
v0.8.3,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.8.3,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.8.3,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.8.3,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.8.3,TODO(robinson): Support iteritems()-style iteration over all,1
v0.8.3,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.8.3,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.8.3,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.8.3,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.3,TODO(mattp): would testing more scalar types strengthen test?,1
v0.8.3,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.8.3,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.3,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.3,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.3,TODO(tibell): The pure-Python implementation support pickling of,1
v0.8.3,TODO(tibell): The C++ implementations actually allows assignment,1
v0.8.3,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.8.3,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.8.3,"If import doesn't work, pickling won't work either.",1
v0.8.3,But this deprecated class has a security problem: Bad input can,1
v0.8.3,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.8.3,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.8.3,This is a walkaround to avoid the static initialization of Value::null.,1
v0.8.3,This is kind of strange. Not recommended.,1
v0.8.3,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.8.3,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.8.3,"picking successive numbers.  This dependency is not ideal, but",1
v0.8.3,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.8.3,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.8.3,TODO(vladl@google.com): remove the _lin suffix.,1
v0.8.3,TODO(wan@google.com): The following user-interaction doesn't,1
v0.8.3,TODO:,1
v0.8.3,"TODO much, much later:",1
v0.8.3,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.8.3,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.8.3,TODO(nnorwitz): impl.,1
v0.8.3,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.3,TODO(nnorwitz): merge with Parameter in some way?,1
v0.8.3,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.3,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.3,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.3,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.8.3,TODO(nnorwitz): search in body too.,1
v0.8.3,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.8.3,TODO(nnorwitz): search in body too.,1
v0.8.3,TODO(nnorwitz): add templated_types.,1
v0.8.3,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.8.3,TODO(nnorwitz): this is a hack that happens for code like,1
v0.8.3,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.8.3,TODO(nnorwitz): keep the size somewhere.,1
v0.8.3,TODO(nnorwitz): handle the declaration.,1
v0.8.3,TODO(nnorwitz): handle a lot more syntax.,1
v0.8.3,TODO(nnorwitz): handle more preprocessor directives.,1
v0.8.3,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.8.3,TODO(nnorwitz): store template_portion.,1
v0.8.3,TODO(nnorwitz): handle more __attribute__ details.,1
v0.8.3,HACK(nnorwitz):  assume that all upper-case names,1
v0.8.3,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.8.3,TODO(nnorwitz): store the function_parameters.,1
v0.8.3,TODO(nnorwitz): is return_type always empty?,1
v0.8.3,TODO(nnorwitz): this isn't even close to being correct.,1
v0.8.3,TODO(nnorwitz): store tokens and improve parsing.,1
v0.8.3,TODO(nnorwitz): if there is only One name like in the,1
v0.8.3,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.8.3,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.8.3,TODO(nnorwitz): clean all this up.,1
v0.8.3,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.8.3,HACK(nnorwitz): Handle arrays properly.,1
v0.8.3,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.8.3,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.8.3,TODO(nnorwitz): it would be good to warn about this.,1
v0.8.3,TODO(nnorwitz): store that we got virtual for this base.,1
v0.8.3,TODO(nnorwitz): handle aliasing namespaces.,1
v0.8.3,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.8.3,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.8.3,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.8.3,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.8.3,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.8.3,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.8.2,hack to make name substitution: we directly use _name,1
v0.8.2,TODO: add docstrings,1
v0.8.2,TODO: add docstring for wrapped function,1
v0.8.2,some dirty hacks for mocking missing *_pb2.py files,1
v0.8.2,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.8.2,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.8.2,There are three ways we might decide not to print an error message:,1
v0.8.2,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.8.2,get rid of /* ... */,1
v0.8.2,TODO(unknown): We always want to check end of namespace comments,1
v0.8.2,"TODO(unknown): unexpected #else, issue warning?",1
v0.8.2,"TODO(unknown): unexpected #endif, issue warning?",1
v0.8.2,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.8.2,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.8.2,TODO(unknown): Space after an operator function seem to be a common,1
v0.8.2,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.8.2,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.8.2,TODO(unknown): currently we don't check for rvalue references,1
v0.8.2,google code and would have been easier to implement.  This is because,1
v0.8.2,"the redundant semicolon, output warning here.",1
v0.8.2,it provides a way to workaround this warning for people who use,1
v0.8.2,TODO(unknown): remove this once cpplint has better support for,1
v0.8.2,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.8.2,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.8.2,TODO(unknown): check that classes declare or disable copy/assign,1
v0.8.2,TODO(unknown): catch out-of-line unary operator&:,1
v0.8.2,TODO(unknown): Catch the following case. Need to change the calling,1
v0.8.2,This is dangerous because the C++ language does not guarantee that,1
v0.8.2,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.8.2,Try a better error message when the & is bound to something,1
v0.8.2,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.8.2,TODO(unknown): doesn't work if there are virtual functions with,1
v0.8.2,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.8.2,TODO(amauryfa): Fix the differences with MessageFactory.,1
v0.8.2,"TODO(amauryfa): This pool could be constructed from Python code, when we",1
v0.8.2,TODO(jieluo): Should add a way that users can register the type resolver,1
v0.8.2,TODO(haberman): refactor and optimize if this becomes an issue.,1
v0.8.2,TODO(dbarnett): Migrate violators to textformat_tokenizer.,1
v0.8.2,PY3 hack: make Ord work for str and bytes:,1
v0.8.2,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.8.2,TODO(robinson): Document these fields and methods.,1
v0.8.2,TODO(robinson): MergeFromString() should probably return None and be,1
v0.8.2,TODO(robinson): Decide whether we like these better,1
v0.8.2,TODO(robinson): Be sure to document (and test) exactly,1
v0.8.2,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.8.2,"TODO(robinson): We should have aggressive checking here,",1
v0.8.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.2,TODO(amauryfa): use the pool passed as argument. This will work only,1
v0.8.2,"Else type_name references a non-local type, which isn't implemented",1
v0.8.2,A previous version had a bug where this would raise an exception when,1
v0.8.2,TODO(robinson): Test all other scalar field types.,1
v0.8.2,TODO(robinson): Test all other scalar field types.,1
v0.8.2,TODO(anuraag): Implement deepcopy for repeated composite / extension dict,1
v0.8.2,TODO(xiaofeng): This test fails with cpp implemetnation in the call,1
v0.8.2,TODO(xiaofeng): Enable this test after cl/55530659 is submitted.,1
v0.8.2,TODO(rocking): enable this test after the proto descriptor change is,1
v0.8.2,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.8.2,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.8.2,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.8.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.2,TODO(robinson): Remove duplication with similar method,1
v0.8.2,TODO(robinson): This probably needs to be thread-safe(?),1
v0.8.2,TODO(amauryfa): Don't use the factory of generated messages.,1
v0.8.2,TODO(haberman): For now we just strip the hostname.  Better logic will be,1
v0.8.2,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.8.2,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.8.2,TODO(robinson): Support iteritems()-style iteration over all,1
v0.8.2,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.8.2,TODO(gps): We really should test for the presence of the enum_opt1,1
v0.8.2,TODO(b/17427486): Make Python 2 default to C++ impl v2.,1
v0.8.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.2,TODO(mattp): would testing more scalar types strengthen test?,1
v0.8.2,TODO(anuraag): Implement extensiondict comparison in C++ and then add test,1
v0.8.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.2,TODO(ptucker): Deprecate this behavior. b/18413862,1
v0.8.2,TODO(tibell): The pure-Python implementation support pickling of,1
v0.8.2,TODO(tibell): The C++ implementations actually allows assignment,1
v0.8.2,TODO(haberman): this isn't really a proto2-specific test except that this,1
v0.8.2,TODO(jieluo): Check if [] reordering the map is a bug or intended,1
v0.8.2,"If import doesn't work, pickling won't work either.",1
v0.8.2,But this deprecated class has a security problem: Bad input can,1
v0.8.2,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.8.2,TODO: Help the compiler do the div and mod at compile time or get rid of them.,1
v0.8.2,This is a walkaround to avoid the static initialization of Value::null.,1
v0.8.2,This is kind of strange. Not recommended.,1
v0.8.2,TODO(wan@google.com): libtool causes the built test binary to be,1
v0.8.2,hack when Chandler Carruth's libtool replacement tool is ready.,1
v0.8.2,"picking successive numbers.  This dependency is not ideal, but",1
v0.8.2,The tests.  TODO(wan@google.com): refactor the class to share common,1
v0.8.2,TODO(vladl@google.com): Move this into Subprocess when we implement,1
v0.8.2,TODO(vladl@google.com): remove the _lin suffix.,1
v0.8.2,TODO(wan@google.com): The following user-interaction doesn't,1
v0.8.2,TODO:,1
v0.8.2,"TODO much, much later:",1
v0.8.2,"TODO(nnorwitz): use this as a singleton for templated_types, etc",1
v0.8.2,TODO(nnorwitz): move AST nodes into a separate module.,1
v0.8.2,TODO(nnorwitz): impl.,1
v0.8.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.2,TODO(nnorwitz): merge with Parameter in some way?,1
v0.8.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.2,"TODO(nnorwitz): handle namespaces, etc.",1
v0.8.2,"TODO(nnorwitz): bases are tokens, do name comparision.",1
v0.8.2,TODO(nnorwitz): search in body too.,1
v0.8.2,"TODO(nnorwitz): parameters are tokens, do name comparision.",1
v0.8.2,TODO(nnorwitz): search in body too.,1
v0.8.2,TODO(nnorwitz): add templated_types.,1
v0.8.2,TODO(nnorwitz): in_class could also be a namespace which can,1
v0.8.2,TODO(nnorwitz): this is a hack that happens for code like,1
v0.8.2,TODO(nnorwitz): use a better data structure (deque) for the queue.,1
v0.8.2,TODO(nnorwitz): keep the size somewhere.,1
v0.8.2,TODO(nnorwitz): handle the declaration.,1
v0.8.2,TODO(nnorwitz): handle a lot more syntax.,1
v0.8.2,TODO(nnorwitz): handle more preprocessor directives.,1
v0.8.2,TODO(nnorwitz): remove _IgnoreUpTo() it shouldn't be necesary.,1
v0.8.2,TODO(nnorwitz): store template_portion.,1
v0.8.2,TODO(nnorwitz): handle more __attribute__ details.,1
v0.8.2,HACK(nnorwitz):  assume that all upper-case names,1
v0.8.2,TODO(nnorwitz): anything else to handle for initializer list?,1
v0.8.2,TODO(nnorwitz): store the function_parameters.,1
v0.8.2,TODO(nnorwitz): is return_type always empty?,1
v0.8.2,TODO(nnorwitz): this isn't even close to being correct.,1
v0.8.2,TODO(nnorwitz): store tokens and improve parsing.,1
v0.8.2,TODO(nnorwitz): if there is only One name like in the,1
v0.8.2,TODO(nnorwitz): warn about using auto?  Probably not since it,1
v0.8.2,HACK(nnorwitz): handle inline dtors by ignoring 'inline'.,1
v0.8.2,TODO(nnorwitz): clean all this up.,1
v0.8.2,"HACK(nnorwitz): Handle pointers to functions ""properly"".",1
v0.8.2,HACK(nnorwitz): Handle arrays properly.,1
v0.8.2,"TODO(nnorwitz): for now, just ignore the template params.",1
v0.8.2,TODO(nnorwitz): store kind of inheritance...maybe.,1
v0.8.2,TODO(nnorwitz): it would be good to warn about this.,1
v0.8.2,TODO(nnorwitz): store that we got virtual for this base.,1
v0.8.2,TODO(nnorwitz): handle aliasing namespaces.,1
v0.8.2,TODO(nnorwitz): maybe verify the method name == class name.,1
v0.8.2,TODO(nnorwitz@google.com): Investigate whether it is possible to,1
v0.8.2,"TODO(paulchang): The AST doesn't preserve template argument order,",1
v0.8.2,TODO(paulchang): Handle non-type template arguments (e.g.,1
v0.8.2,"NOTE(nnorwitz): may not be quite correct, should be good enough.",1
v0.8.2,TODO(nnorwitz): handle preprocessor statements (\ continuations).,1
v0.8.1,TODO: add docstrings,1
v0.8.1,TODO: add docstring for wrapped function,1
v0.8.1,some dirty hacks for mocking missing *_pb2.py files,1
v0.8.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.8.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.8.1,There are three ways we might decide not to print an error message:,1
v0.8.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.8.1,get rid of /* ... */,1
v0.8.1,TODO(unknown): We always want to check end of namespace comments,1
v0.8.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.8.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.8.1,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.8.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.8.1,TODO(unknown): Space after an operator function seem to be a common,1
v0.8.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.8.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.8.1,TODO(unknown): currently we don't check for rvalue references,1
v0.8.1,google code and would have been easier to implement.  This is because,1
v0.8.1,"the redundant semicolon, output warning here.",1
v0.8.1,it provides a way to workaround this warning for people who use,1
v0.8.1,TODO(unknown): remove this once cpplint has better support for,1
v0.8.1,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.8.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.8.1,TODO(unknown): check that classes declare or disable copy/assign,1
v0.8.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.8.1,TODO(unknown): Catch the following case. Need to change the calling,1
v0.8.1,This is dangerous because the C++ language does not guarantee that,1
v0.8.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.8.1,Try a better error message when the & is bound to something,1
v0.8.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.8.1,TODO(unknown): doesn't work if there are virtual functions with,1
v0.8.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.8.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.8.1,TODO(robinson): Document these fields and methods.,1
v0.8.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.8.1,TODO(robinson): Decide whether we like these better,1
v0.8.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.8.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.8.1,"TODO(robinson): We should have aggressive checking here,",1
v0.8.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.1,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.8.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.8.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.8.1,A previous version had a bug where this would raise an exception when,1
v0.8.1,TODO(robinson): Test all other scalar field types.,1
v0.8.1,TODO(robinson): Test all other scalar field types.,1
v0.8.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.8.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.8.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.8.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.1,TODO(robinson): Remove duplication with similar method,1
v0.8.1,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.8.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.8.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.8.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.8.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.8.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.8.1,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.8.1,TODO(robinson): Firmly spec out and test how,1
v0.8.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.8.1,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.8.1,class has not been accessed directly.  This was once a bug with lite,1
v0.8.1,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.8.1,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.8.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.8.1,Imagine how much simpler this code would be if Java iterators had,1
v0.8.1,"TODO(xiangl): Taken care of following code, it may cause",1
v0.8.1,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.8.1,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.8.1,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.8.1,TODO(kenton):  This could be optimized in a number of ways.,1
v0.8.1,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.8.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.8.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.8.1,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.8.1,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.8.1,TODO(xiangl): need implementation for dynamic message,1
v0.8.1,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.8.1,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.8.1,Imagine how much simpler this code would be if Java iterators had,1
v0.8.1,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.8.1,TODO(xiangl): it looks like this method can only be invoked by,1
v0.8.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.8.0,TODO: add docstrings,1
v0.8.0,TODO: add docstring for wrapped function,1
v0.8.0,some dirty hacks for mocking missing *_pb2.py files,1
v0.8.0,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.8.0,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.8.0,There are three ways we might decide not to print an error message:,1
v0.8.0,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.8.0,get rid of /* ... */,1
v0.8.0,TODO(unknown): We always want to check end of namespace comments,1
v0.8.0,"TODO(unknown): unexpected #else, issue warning?",1
v0.8.0,"TODO(unknown): unexpected #endif, issue warning?",1
v0.8.0,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.8.0,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.8.0,TODO(unknown): Space after an operator function seem to be a common,1
v0.8.0,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.8.0,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.8.0,TODO(unknown): currently we don't check for rvalue references,1
v0.8.0,google code and would have been easier to implement.  This is because,1
v0.8.0,"the redundant semicolon, output warning here.",1
v0.8.0,it provides a way to workaround this warning for people who use,1
v0.8.0,TODO(unknown): remove this once cpplint has better support for,1
v0.8.0,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.8.0,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.8.0,TODO(unknown): check that classes declare or disable copy/assign,1
v0.8.0,TODO(unknown): catch out-of-line unary operator&:,1
v0.8.0,TODO(unknown): Catch the following case. Need to change the calling,1
v0.8.0,This is dangerous because the C++ language does not guarantee that,1
v0.8.0,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.8.0,Try a better error message when the & is bound to something,1
v0.8.0,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.8.0,TODO(unknown): doesn't work if there are virtual functions with,1
v0.8.0,TODO: following test fails randomly on some boxes,1
v0.8.0,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.8.0,TODO: The connections should be killed instead.,1
v0.8.0,TODO: handle the situation when the peer changes its identity.,1
v0.8.0,TODO: Do we want to limit number of commands I/O thread can,1
v0.8.0,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.8.0,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.8.0,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.8.0,Work around problem that other threads might still be in our,1
v0.8.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.8.0,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.8.0,TODO: The connections should be killed instead.,1
v0.8.0,TODO: This can result in infinite loop in the case of continuous,1
v0.8.0,TODO: This can result in infinite loop in the case of continuous,1
v0.8.0,TODO: Failing this check should also close the connection with the peer!,1
v0.8.0,TODO: Duplicates should be removed here.,1
v0.8.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.8.0,TODO: This is not a generic way to handle this...,1
v0.8.0,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.8.0,TODO: Should this go into pipe_t::terminate ?,1
v0.8.0,TODO: this function has no man page,1
v0.8.0,TODO: Build in a notification mechanism to report the overflows.,1
v0.8.0,TODO: this function has no man page,1
v0.8.0,TODO: This loop can effectively block other engines in the same I/O,1
v0.8.0,Note the workaround made not to break strict-aliasing rules.,1
v0.8.0,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.8.0,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.8.0,TODO(robinson): Document these fields and methods.,1
v0.8.0,TODO(robinson): MergeFromString() should probably return None and be,1
v0.8.0,TODO(robinson): Decide whether we like these better,1
v0.8.0,TODO(robinson): Be sure to document (and test) exactly,1
v0.8.0,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.8.0,"TODO(robinson): We should have aggressive checking here,",1
v0.8.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.8.0,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.8.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.8.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.8.0,A previous version had a bug where this would raise an exception when,1
v0.8.0,TODO(robinson): Test all other scalar field types.,1
v0.8.0,TODO(robinson): Test all other scalar field types.,1
v0.8.0,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.8.0,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.8.0,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.8.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.8.0,TODO(robinson): Remove duplication with similar method,1
v0.8.0,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.8.0,TODO(robinson): This probably needs to be thread-safe(?),1
v0.8.0,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.8.0,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.8.0,TODO(robinson): Support iteritems()-style iteration over all,1
v0.8.0,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.8.0,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.8.0,TODO(robinson): Firmly spec out and test how,1
v0.8.0,TODO(mattp): would testing more scalar types strengthen test?,1
v0.8.0,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.8.0,class has not been accessed directly.  This was once a bug with lite,1
v0.8.0,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.8.0,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.8.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.8.0,Imagine how much simpler this code would be if Java iterators had,1
v0.8.0,"TODO(xiangl): Taken care of following code, it may cause",1
v0.8.0,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.8.0,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.8.0,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.8.0,TODO(kenton):  This could be optimized in a number of ways.,1
v0.8.0,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.8.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.8.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.8.0,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.8.0,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.8.0,TODO(xiangl): need implementation for dynamic message,1
v0.8.0,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.8.0,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.8.0,Imagine how much simpler this code would be if Java iterators had,1
v0.8.0,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.8.0,TODO(xiangl): it looks like this method can only be invoked by,1
v0.8.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.8.0,TODO: error handling,1
v0.7.6,TODO: add docstrings,1
v0.7.6,TODO: add docstring for wrapped function,1
v0.7.6,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.6,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.6,There are three ways we might decide not to print an error message:,1
v0.7.6,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.6,get rid of /* ... */,1
v0.7.6,TODO(unknown): We always want to check end of namespace comments,1
v0.7.6,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.6,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.6,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.7.6,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.6,TODO(unknown): Space after an operator function seem to be a common,1
v0.7.6,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.6,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.6,TODO(unknown): currently we don't check for rvalue references,1
v0.7.6,google code and would have been easier to implement.  This is because,1
v0.7.6,"the redundant semicolon, output warning here.",1
v0.7.6,it provides a way to workaround this warning for people who use,1
v0.7.6,TODO(unknown): remove this once cpplint has better support for,1
v0.7.6,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.7.6,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.6,TODO(unknown): check that classes declare or disable copy/assign,1
v0.7.6,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.6,TODO(unknown): Catch the following case. Need to change the calling,1
v0.7.6,This is dangerous because the C++ language does not guarantee that,1
v0.7.6,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.6,Try a better error message when the & is bound to something,1
v0.7.6,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.6,TODO(unknown): doesn't work if there are virtual functions with,1
v0.7.6,TODO: following test fails randomly on some boxes,1
v0.7.6,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.6,TODO: The connections should be killed instead.,1
v0.7.6,TODO: handle the situation when the peer changes its identity.,1
v0.7.6,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.6,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.6,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.6,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.6,Work around problem that other threads might still be in our,1
v0.7.6,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.6,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.6,TODO: The connections should be killed instead.,1
v0.7.6,TODO: This can result in infinite loop in the case of continuous,1
v0.7.6,TODO: This can result in infinite loop in the case of continuous,1
v0.7.6,TODO: Failing this check should also close the connection with the peer!,1
v0.7.6,TODO: Duplicates should be removed here.,1
v0.7.6,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.6,TODO: This is not a generic way to handle this...,1
v0.7.6,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.6,TODO: Should this go into pipe_t::terminate ?,1
v0.7.6,TODO: this function has no man page,1
v0.7.6,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.6,TODO: this function has no man page,1
v0.7.6,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.6,Note the workaround made not to break strict-aliasing rules.,1
v0.7.6,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.6,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.6,TODO(robinson): Document these fields and methods.,1
v0.7.6,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.6,TODO(robinson): Decide whether we like these better,1
v0.7.6,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.6,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.6,"TODO(robinson): We should have aggressive checking here,",1
v0.7.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.6,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.6,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.6,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.6,A previous version had a bug where this would raise an exception when,1
v0.7.6,TODO(robinson): Test all other scalar field types.,1
v0.7.6,TODO(robinson): Test all other scalar field types.,1
v0.7.6,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.6,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.6,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.6,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.6,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.6,TODO(robinson): Remove duplication with similar method,1
v0.7.6,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.6,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.6,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.6,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.6,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.6,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.6,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.6,TODO(robinson): Firmly spec out and test how,1
v0.7.6,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.6,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.6,class has not been accessed directly.  This was once a bug with lite,1
v0.7.6,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.6,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.6,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.6,Imagine how much simpler this code would be if Java iterators had,1
v0.7.6,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.6,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.6,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.6,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.6,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.6,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.6,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.6,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.6,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.6,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.6,TODO(xiangl): need implementation for dynamic message,1
v0.7.6,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.6,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.6,Imagine how much simpler this code would be if Java iterators had,1
v0.7.6,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.6,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.6,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.6,TODO: error handling,1
v0.7.5,TODO: add docstrings,1
v0.7.5,TODO: add docstring for wrapped function,1
v0.7.5,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.5,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.5,There are three ways we might decide not to print an error message:,1
v0.7.5,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.5,get rid of /* ... */,1
v0.7.5,TODO(unknown): We always want to check end of namespace comments,1
v0.7.5,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.5,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.5,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.7.5,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.5,TODO(unknown): Space after an operator function seem to be a common,1
v0.7.5,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.5,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.5,TODO(unknown): currently we don't check for rvalue references,1
v0.7.5,google code and would have been easier to implement.  This is because,1
v0.7.5,"the redundant semicolon, output warning here.",1
v0.7.5,it provides a way to workaround this warning for people who use,1
v0.7.5,TODO(unknown): remove this once cpplint has better support for,1
v0.7.5,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.7.5,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.5,TODO(unknown): check that classes declare or disable copy/assign,1
v0.7.5,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.5,TODO(unknown): Catch the following case. Need to change the calling,1
v0.7.5,This is dangerous because the C++ language does not guarantee that,1
v0.7.5,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.5,Try a better error message when the & is bound to something,1
v0.7.5,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.5,TODO(unknown): doesn't work if there are virtual functions with,1
v0.7.5,TODO: following test fails randomly on some boxes,1
v0.7.5,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.5,TODO: The connections should be killed instead.,1
v0.7.5,TODO: handle the situation when the peer changes its identity.,1
v0.7.5,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.5,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.5,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.5,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.5,Work around problem that other threads might still be in our,1
v0.7.5,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.5,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.5,TODO: The connections should be killed instead.,1
v0.7.5,TODO: This can result in infinite loop in the case of continuous,1
v0.7.5,TODO: This can result in infinite loop in the case of continuous,1
v0.7.5,TODO: Failing this check should also close the connection with the peer!,1
v0.7.5,TODO: Duplicates should be removed here.,1
v0.7.5,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.5,TODO: This is not a generic way to handle this...,1
v0.7.5,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.5,TODO: Should this go into pipe_t::terminate ?,1
v0.7.5,TODO: this function has no man page,1
v0.7.5,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.5,TODO: this function has no man page,1
v0.7.5,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.5,Note the workaround made not to break strict-aliasing rules.,1
v0.7.5,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.5,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.5,TODO(robinson): Document these fields and methods.,1
v0.7.5,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.5,TODO(robinson): Decide whether we like these better,1
v0.7.5,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.5,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.5,"TODO(robinson): We should have aggressive checking here,",1
v0.7.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.5,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.5,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.5,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.5,A previous version had a bug where this would raise an exception when,1
v0.7.5,TODO(robinson): Test all other scalar field types.,1
v0.7.5,TODO(robinson): Test all other scalar field types.,1
v0.7.5,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.5,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.5,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.5,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.5,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.5,TODO(robinson): Remove duplication with similar method,1
v0.7.5,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.5,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.5,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.5,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.5,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.5,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.5,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.5,TODO(robinson): Firmly spec out and test how,1
v0.7.5,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.5,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.5,class has not been accessed directly.  This was once a bug with lite,1
v0.7.5,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.5,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.5,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.5,Imagine how much simpler this code would be if Java iterators had,1
v0.7.5,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.5,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.5,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.5,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.5,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.5,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.5,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.5,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.5,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.5,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.5,TODO(xiangl): need implementation for dynamic message,1
v0.7.5,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.5,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.5,Imagine how much simpler this code would be if Java iterators had,1
v0.7.5,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.5,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.5,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.5,TODO: error handling,1
v0.7.4,TODO: add docstrings,1
v0.7.4,TODO: add docstring for wrapped function,1
v0.7.4,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.4,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.4,There are three ways we might decide not to print an error message:,1
v0.7.4,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.4,get rid of /* ... */,1
v0.7.4,TODO(unknown): We always want to check end of namespace comments,1
v0.7.4,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.4,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.4,"TODO(unknown): Update() is too long, but we will refactor later.",1
v0.7.4,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.4,TODO(unknown): Space after an operator function seem to be a common,1
v0.7.4,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.4,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.4,TODO(unknown): currently we don't check for rvalue references,1
v0.7.4,google code and would have been easier to implement.  This is because,1
v0.7.4,"the redundant semicolon, output warning here.",1
v0.7.4,it provides a way to workaround this warning for people who use,1
v0.7.4,TODO(unknown): remove this once cpplint has better support for,1
v0.7.4,TODO(unknown): Audit cpplint.py to see what places could be profitably,1
v0.7.4,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.4,TODO(unknown): check that classes declare or disable copy/assign,1
v0.7.4,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.4,TODO(unknown): Catch the following case. Need to change the calling,1
v0.7.4,This is dangerous because the C++ language does not guarantee that,1
v0.7.4,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.4,Try a better error message when the & is bound to something,1
v0.7.4,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.4,TODO(unknown): doesn't work if there are virtual functions with,1
v0.7.4,TODO: following test fails randomly on some boxes,1
v0.7.4,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.4,TODO: The connections should be killed instead.,1
v0.7.4,TODO: handle the situation when the peer changes its identity.,1
v0.7.4,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.4,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.4,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.4,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.4,Work around problem that other threads might still be in our,1
v0.7.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.4,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.4,TODO: The connections should be killed instead.,1
v0.7.4,TODO: This can result in infinite loop in the case of continuous,1
v0.7.4,TODO: This can result in infinite loop in the case of continuous,1
v0.7.4,TODO: Failing this check should also close the connection with the peer!,1
v0.7.4,TODO: Duplicates should be removed here.,1
v0.7.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.4,TODO: This is not a generic way to handle this...,1
v0.7.4,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.4,TODO: Should this go into pipe_t::terminate ?,1
v0.7.4,TODO: this function has no man page,1
v0.7.4,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.4,TODO: this function has no man page,1
v0.7.4,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.4,Note the workaround made not to break strict-aliasing rules.,1
v0.7.4,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.4,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.4,TODO(robinson): Document these fields and methods.,1
v0.7.4,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.4,TODO(robinson): Decide whether we like these better,1
v0.7.4,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.4,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.4,"TODO(robinson): We should have aggressive checking here,",1
v0.7.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.4,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.4,A previous version had a bug where this would raise an exception when,1
v0.7.4,TODO(robinson): Test all other scalar field types.,1
v0.7.4,TODO(robinson): Test all other scalar field types.,1
v0.7.4,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.4,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.4,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.4,TODO(robinson): Remove duplication with similar method,1
v0.7.4,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.4,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.4,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.4,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.4,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.4,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.4,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.4,TODO(robinson): Firmly spec out and test how,1
v0.7.4,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.4,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.4,class has not been accessed directly.  This was once a bug with lite,1
v0.7.4,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.4,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.4,Imagine how much simpler this code would be if Java iterators had,1
v0.7.4,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.4,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.4,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.4,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.4,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.4,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.4,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.4,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.4,TODO(xiangl): need implementation for dynamic message,1
v0.7.4,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.4,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.4,Imagine how much simpler this code would be if Java iterators had,1
v0.7.4,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.4,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.4,TODO: error handling,1
v0.7.3,TODO: add docstrings,1
v0.7.3,TODO: add docstring for wrapped function,1
v0.7.3,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.3,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.3,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.7.3,There are three ways we might decide not to print an error message:,1
v0.7.3,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.3,get rid of /* ... */,1
v0.7.3,TODO(unknown): We always want to check end of namespace comments,1
v0.7.3,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.3,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.3,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.3,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.3,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.3,google code and would have been easier to implement.  This is because,1
v0.7.3,"the redundant semicolon, output warning here.",1
v0.7.3,it provides a way to workaround this warning for people who use,1
v0.7.3,TODO(unknown): remove this once cpplint has better support for,1
v0.7.3,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.7.3,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.7.3,This is dangerous because the C++ language does not guarantee that,1
v0.7.3,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.3,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.7.3,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.3,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.7.3,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.7.3,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.3,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.3,TODO: following test fails randomly on some boxes,1
v0.7.3,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.3,TODO: The connections should be killed instead.,1
v0.7.3,TODO: handle the situation when the peer changes its identity.,1
v0.7.3,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.3,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.3,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.3,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.3,Work around problem that other threads might still be in our,1
v0.7.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.3,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.3,TODO: The connections should be killed instead.,1
v0.7.3,TODO: This can result in infinite loop in the case of continuous,1
v0.7.3,TODO: This can result in infinite loop in the case of continuous,1
v0.7.3,TODO: Failing this check should also close the connection with the peer!,1
v0.7.3,TODO: Duplicates should be removed here.,1
v0.7.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.3,TODO: This is not a generic way to handle this...,1
v0.7.3,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.3,TODO: Should this go into pipe_t::terminate ?,1
v0.7.3,TODO: this function has no man page,1
v0.7.3,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.3,TODO: this function has no man page,1
v0.7.3,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.3,Note the workaround made not to break strict-aliasing rules.,1
v0.7.3,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.3,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.3,TODO(robinson): Document these fields and methods.,1
v0.7.3,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.3,TODO(robinson): Decide whether we like these better,1
v0.7.3,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.3,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.3,"TODO(robinson): We should have aggressive checking here,",1
v0.7.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.3,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.3,A previous version had a bug where this would raise an exception when,1
v0.7.3,TODO(robinson): Test all other scalar field types.,1
v0.7.3,TODO(robinson): Test all other scalar field types.,1
v0.7.3,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.3,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.3,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.3,TODO(robinson): Remove duplication with similar method,1
v0.7.3,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.3,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.3,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.3,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.3,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.3,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.3,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.3,TODO(robinson): Firmly spec out and test how,1
v0.7.3,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.3,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.3,class has not been accessed directly.  This was once a bug with lite,1
v0.7.3,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.3,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.3,Imagine how much simpler this code would be if Java iterators had,1
v0.7.3,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.3,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.3,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.3,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.3,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.3,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.3,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.3,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.3,TODO(xiangl): need implementation for dynamic message,1
v0.7.3,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.3,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.3,Imagine how much simpler this code would be if Java iterators had,1
v0.7.3,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.3,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.3,TODO: error handling,1
v0.7.2,TODO: add docstrings,1
v0.7.2,TODO: add docstring for wrapped function,1
v0.7.2,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.2,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.2,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.7.2,There are three ways we might decide not to print an error message:,1
v0.7.2,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.2,get rid of /* ... */,1
v0.7.2,TODO(unknown): We always want to check end of namespace comments,1
v0.7.2,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.2,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.2,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.2,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.2,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.2,google code and would have been easier to implement.  This is because,1
v0.7.2,"the redundant semicolon, output warning here.",1
v0.7.2,it provides a way to workaround this warning for people who use,1
v0.7.2,TODO(unknown): remove this once cpplint has better support for,1
v0.7.2,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.7.2,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.7.2,This is dangerous because the C++ language does not guarantee that,1
v0.7.2,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.2,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.7.2,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.2,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.7.2,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.7.2,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.2,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.2,TODO: following test fails randomly on some boxes,1
v0.7.2,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.2,TODO: The connections should be killed instead.,1
v0.7.2,TODO: handle the situation when the peer changes its identity.,1
v0.7.2,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.2,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.2,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.2,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.2,Work around problem that other threads might still be in our,1
v0.7.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.2,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.2,TODO: The connections should be killed instead.,1
v0.7.2,TODO: This can result in infinite loop in the case of continuous,1
v0.7.2,TODO: This can result in infinite loop in the case of continuous,1
v0.7.2,TODO: Failing this check should also close the connection with the peer!,1
v0.7.2,TODO: Duplicates should be removed here.,1
v0.7.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.2,TODO: This is not a generic way to handle this...,1
v0.7.2,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.2,TODO: Should this go into pipe_t::terminate ?,1
v0.7.2,TODO: this function has no man page,1
v0.7.2,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.2,TODO: this function has no man page,1
v0.7.2,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.2,Note the workaround made not to break strict-aliasing rules.,1
v0.7.2,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.2,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.2,TODO(robinson): Document these fields and methods.,1
v0.7.2,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.2,TODO(robinson): Decide whether we like these better,1
v0.7.2,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.2,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.2,"TODO(robinson): We should have aggressive checking here,",1
v0.7.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.2,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.2,A previous version had a bug where this would raise an exception when,1
v0.7.2,TODO(robinson): Test all other scalar field types.,1
v0.7.2,TODO(robinson): Test all other scalar field types.,1
v0.7.2,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.2,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.2,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.2,TODO(robinson): Remove duplication with similar method,1
v0.7.2,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.2,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.2,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.2,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.2,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.2,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.2,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.2,TODO(robinson): Firmly spec out and test how,1
v0.7.2,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.2,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.2,class has not been accessed directly.  This was once a bug with lite,1
v0.7.2,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.2,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.2,Imagine how much simpler this code would be if Java iterators had,1
v0.7.2,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.2,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.2,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.2,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.2,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.2,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.2,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.2,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.2,TODO(xiangl): need implementation for dynamic message,1
v0.7.2,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.2,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.2,Imagine how much simpler this code would be if Java iterators had,1
v0.7.2,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.2,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.2,TODO: error handling,1
v0.7.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.1,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.7.1,There are three ways we might decide not to print an error message:,1
v0.7.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.1,get rid of /* ... */,1
v0.7.1,TODO(unknown): We always want to check end of namespace comments,1
v0.7.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.1,google code and would have been easier to implement.  This is because,1
v0.7.1,"the redundant semicolon, output warning here.",1
v0.7.1,it provides a way to workaround this warning for people who use,1
v0.7.1,TODO(unknown): remove this once cpplint has better support for,1
v0.7.1,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.7.1,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.7.1,This is dangerous because the C++ language does not guarantee that,1
v0.7.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.1,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.7.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.1,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.7.1,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.7.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.1,TODO: following test fails randomly on some boxes,1
v0.7.1,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.1,TODO: The connections should be killed instead.,1
v0.7.1,TODO: handle the situation when the peer changes its identity.,1
v0.7.1,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.1,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.1,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.1,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.1,Work around problem that other threads might still be in our,1
v0.7.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.1,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.1,TODO: The connections should be killed instead.,1
v0.7.1,TODO: This can result in infinite loop in the case of continuous,1
v0.7.1,TODO: This can result in infinite loop in the case of continuous,1
v0.7.1,TODO: Failing this check should also close the connection with the peer!,1
v0.7.1,TODO: Duplicates should be removed here.,1
v0.7.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.1,TODO: This is not a generic way to handle this...,1
v0.7.1,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.1,TODO: Should this go into pipe_t::terminate ?,1
v0.7.1,TODO: this function has no man page,1
v0.7.1,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.1,TODO: this function has no man page,1
v0.7.1,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.1,Note the workaround made not to break strict-aliasing rules.,1
v0.7.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.1,TODO(robinson): Document these fields and methods.,1
v0.7.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.1,TODO(robinson): Decide whether we like these better,1
v0.7.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.1,"TODO(robinson): We should have aggressive checking here,",1
v0.7.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.1,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.1,A previous version had a bug where this would raise an exception when,1
v0.7.1,TODO(robinson): Test all other scalar field types.,1
v0.7.1,TODO(robinson): Test all other scalar field types.,1
v0.7.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.1,TODO(robinson): Remove duplication with similar method,1
v0.7.1,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.1,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.1,TODO(robinson): Firmly spec out and test how,1
v0.7.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.1,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.1,class has not been accessed directly.  This was once a bug with lite,1
v0.7.1,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.1,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.1,Imagine how much simpler this code would be if Java iterators had,1
v0.7.1,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.1,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.1,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.1,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.1,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.1,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.1,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.1,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.1,TODO(xiangl): need implementation for dynamic message,1
v0.7.1,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.1,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.1,Imagine how much simpler this code would be if Java iterators had,1
v0.7.1,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.1,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.1,TODO: error handling,1
v0.7.0,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.7.0,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.7.0,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.7.0,There are three ways we might decide not to print an error message:,1
v0.7.0,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.7.0,get rid of /* ... */,1
v0.7.0,TODO(unknown): We always want to check end of namespace comments,1
v0.7.0,"TODO(unknown): unexpected #else, issue warning?",1
v0.7.0,"TODO(unknown): unexpected #endif, issue warning?",1
v0.7.0,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.7.0,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.7.0,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.7.0,google code and would have been easier to implement.  This is because,1
v0.7.0,"the redundant semicolon, output warning here.",1
v0.7.0,it provides a way to workaround this warning for people who use,1
v0.7.0,TODO(unknown): remove this once cpplint has better support for,1
v0.7.0,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.7.0,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.7.0,This is dangerous because the C++ language does not guarantee that,1
v0.7.0,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.7.0,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.7.0,TODO(unknown): catch out-of-line unary operator&:,1
v0.7.0,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.7.0,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.7.0,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.7.0,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.7.0,TODO: following test fails randomly on some boxes,1
v0.7.0,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.7.0,TODO: The connections should be killed instead.,1
v0.7.0,TODO: handle the situation when the peer changes its identity.,1
v0.7.0,TODO: Do we want to limit number of commands I/O thread can,1
v0.7.0,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.7.0,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.7.0,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.7.0,Work around problem that other threads might still be in our,1
v0.7.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.0,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.7.0,TODO: The connections should be killed instead.,1
v0.7.0,TODO: This can result in infinite loop in the case of continuous,1
v0.7.0,TODO: This can result in infinite loop in the case of continuous,1
v0.7.0,TODO: Failing this check should also close the connection with the peer!,1
v0.7.0,TODO: Duplicates should be removed here.,1
v0.7.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.7.0,TODO: This is not a generic way to handle this...,1
v0.7.0,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.7.0,TODO: Should this go into pipe_t::terminate ?,1
v0.7.0,TODO: this function has no man page,1
v0.7.0,TODO: Build in a notification mechanism to report the overflows.,1
v0.7.0,TODO: this function has no man page,1
v0.7.0,TODO: This loop can effectively block other engines in the same I/O,1
v0.7.0,Note the workaround made not to break strict-aliasing rules.,1
v0.7.0,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.7.0,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.7.0,TODO(robinson): Document these fields and methods.,1
v0.7.0,TODO(robinson): MergeFromString() should probably return None and be,1
v0.7.0,TODO(robinson): Decide whether we like these better,1
v0.7.0,TODO(robinson): Be sure to document (and test) exactly,1
v0.7.0,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.7.0,"TODO(robinson): We should have aggressive checking here,",1
v0.7.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.7.0,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.7.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.7.0,A previous version had a bug where this would raise an exception when,1
v0.7.0,TODO(robinson): Test all other scalar field types.,1
v0.7.0,TODO(robinson): Test all other scalar field types.,1
v0.7.0,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.7.0,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.7.0,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.7.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.7.0,TODO(robinson): Remove duplication with similar method,1
v0.7.0,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.7.0,TODO(robinson): This probably needs to be thread-safe(?),1
v0.7.0,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.7.0,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.7.0,TODO(robinson): Support iteritems()-style iteration over all,1
v0.7.0,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.7.0,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.7.0,TODO(robinson): Firmly spec out and test how,1
v0.7.0,TODO(mattp): would testing more scalar types strengthen test?,1
v0.7.0,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.7.0,class has not been accessed directly.  This was once a bug with lite,1
v0.7.0,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.7.0,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.7.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.0,Imagine how much simpler this code would be if Java iterators had,1
v0.7.0,"TODO(xiangl): Taken care of following code, it may cause",1
v0.7.0,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.7.0,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.7.0,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.7.0,TODO(kenton):  This could be optimized in a number of ways.,1
v0.7.0,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.7.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.7.0,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.7.0,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.7.0,TODO(xiangl): need implementation for dynamic message,1
v0.7.0,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.7.0,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.7.0,Imagine how much simpler this code would be if Java iterators had,1
v0.7.0,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.7.0,TODO(xiangl): it looks like this method can only be invoked by,1
v0.7.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.7.0,TODO: error handling,1
v0.6.4,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.6.4,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.6.4,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.6.4,There are three ways we might decide not to print an error message:,1
v0.6.4,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.6.4,get rid of /* ... */,1
v0.6.4,TODO(unknown): We always want to check end of namespace comments,1
v0.6.4,"TODO(unknown): unexpected #else, issue warning?",1
v0.6.4,"TODO(unknown): unexpected #endif, issue warning?",1
v0.6.4,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.6.4,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.6.4,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.6.4,google code and would have been easier to implement.  This is because,1
v0.6.4,"the redundant semicolon, output warning here.",1
v0.6.4,it provides a way to workaround this warning for people who use,1
v0.6.4,TODO(unknown): remove this once cpplint has better support for,1
v0.6.4,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.6.4,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.6.4,This is dangerous because the C++ language does not guarantee that,1
v0.6.4,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.6.4,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.6.4,TODO(unknown): catch out-of-line unary operator&:,1
v0.6.4,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.6.4,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.6.4,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.6.4,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.6.4,TODO: following test fails randomly on some boxes,1
v0.6.4,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.6.4,TODO: The connections should be killed instead.,1
v0.6.4,TODO: handle the situation when the peer changes its identity.,1
v0.6.4,TODO: Do we want to limit number of commands I/O thread can,1
v0.6.4,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.6.4,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.6.4,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.6.4,Work around problem that other threads might still be in our,1
v0.6.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.4,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.6.4,TODO: The connections should be killed instead.,1
v0.6.4,TODO: This can result in infinite loop in the case of continuous,1
v0.6.4,TODO: This can result in infinite loop in the case of continuous,1
v0.6.4,TODO: Failing this check should also close the connection with the peer!,1
v0.6.4,TODO: Duplicates should be removed here.,1
v0.6.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.4,TODO: This is not a generic way to handle this...,1
v0.6.4,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.6.4,TODO: Should this go into pipe_t::terminate ?,1
v0.6.4,TODO: this function has no man page,1
v0.6.4,TODO: Build in a notification mechanism to report the overflows.,1
v0.6.4,TODO: this function has no man page,1
v0.6.4,TODO: This loop can effectively block other engines in the same I/O,1
v0.6.4,Note the workaround made not to break strict-aliasing rules.,1
v0.6.4,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.6.4,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.6.4,TODO(robinson): Document these fields and methods.,1
v0.6.4,TODO(robinson): MergeFromString() should probably return None and be,1
v0.6.4,TODO(robinson): Decide whether we like these better,1
v0.6.4,TODO(robinson): Be sure to document (and test) exactly,1
v0.6.4,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.6.4,"TODO(robinson): We should have aggressive checking here,",1
v0.6.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.4,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.6.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.4,A previous version had a bug where this would raise an exception when,1
v0.6.4,TODO(robinson): Test all other scalar field types.,1
v0.6.4,TODO(robinson): Test all other scalar field types.,1
v0.6.4,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.6.4,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.6.4,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.6.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.4,TODO(robinson): Remove duplication with similar method,1
v0.6.4,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.6.4,TODO(robinson): This probably needs to be thread-safe(?),1
v0.6.4,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.6.4,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.6.4,TODO(robinson): Support iteritems()-style iteration over all,1
v0.6.4,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.6.4,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.6.4,TODO(robinson): Firmly spec out and test how,1
v0.6.4,TODO(mattp): would testing more scalar types strengthen test?,1
v0.6.4,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.6.4,class has not been accessed directly.  This was once a bug with lite,1
v0.6.4,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.6.4,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.6.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.4,Imagine how much simpler this code would be if Java iterators had,1
v0.6.4,"TODO(xiangl): Taken care of following code, it may cause",1
v0.6.4,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.6.4,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.6.4,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.6.4,TODO(kenton):  This could be optimized in a number of ways.,1
v0.6.4,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.6.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.4,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.6.4,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.6.4,TODO(xiangl): need implementation for dynamic message,1
v0.6.4,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.6.4,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.6.4,Imagine how much simpler this code would be if Java iterators had,1
v0.6.4,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.6.4,TODO(xiangl): it looks like this method can only be invoked by,1
v0.6.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.4,TODO: error handling,1
v0.6.3,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.6.3,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.6.3,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.6.3,There are three ways we might decide not to print an error message:,1
v0.6.3,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.6.3,get rid of /* ... */,1
v0.6.3,TODO(unknown): We always want to check end of namespace comments,1
v0.6.3,"TODO(unknown): unexpected #else, issue warning?",1
v0.6.3,"TODO(unknown): unexpected #endif, issue warning?",1
v0.6.3,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.6.3,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.6.3,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.6.3,google code and would have been easier to implement.  This is because,1
v0.6.3,"the redundant semicolon, output warning here.",1
v0.6.3,it provides a way to workaround this warning for people who use,1
v0.6.3,TODO(unknown): remove this once cpplint has better support for,1
v0.6.3,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.6.3,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.6.3,This is dangerous because the C++ language does not guarantee that,1
v0.6.3,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.6.3,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.6.3,TODO(unknown): catch out-of-line unary operator&:,1
v0.6.3,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.6.3,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.6.3,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.6.3,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.6.3,TODO: following test fails randomly on some boxes,1
v0.6.3,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.6.3,TODO: The connections should be killed instead.,1
v0.6.3,TODO: handle the situation when the peer changes its identity.,1
v0.6.3,TODO: Do we want to limit number of commands I/O thread can,1
v0.6.3,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.6.3,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.6.3,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.6.3,Work around problem that other threads might still be in our,1
v0.6.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.3,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.6.3,TODO: The connections should be killed instead.,1
v0.6.3,TODO: This can result in infinite loop in the case of continuous,1
v0.6.3,TODO: This can result in infinite loop in the case of continuous,1
v0.6.3,TODO: Failing this check should also close the connection with the peer!,1
v0.6.3,TODO: Duplicates should be removed here.,1
v0.6.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.3,TODO: This is not a generic way to handle this...,1
v0.6.3,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.6.3,TODO: Should this go into pipe_t::terminate ?,1
v0.6.3,TODO: this function has no man page,1
v0.6.3,TODO: Build in a notification mechanism to report the overflows.,1
v0.6.3,TODO: this function has no man page,1
v0.6.3,TODO: This loop can effectively block other engines in the same I/O,1
v0.6.3,Note the workaround made not to break strict-aliasing rules.,1
v0.6.3,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.6.3,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.6.3,TODO(robinson): Document these fields and methods.,1
v0.6.3,TODO(robinson): MergeFromString() should probably return None and be,1
v0.6.3,TODO(robinson): Decide whether we like these better,1
v0.6.3,TODO(robinson): Be sure to document (and test) exactly,1
v0.6.3,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.6.3,"TODO(robinson): We should have aggressive checking here,",1
v0.6.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.3,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.6.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.3,A previous version had a bug where this would raise an exception when,1
v0.6.3,TODO(robinson): Test all other scalar field types.,1
v0.6.3,TODO(robinson): Test all other scalar field types.,1
v0.6.3,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.6.3,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.6.3,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.6.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.3,TODO(robinson): Remove duplication with similar method,1
v0.6.3,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.6.3,TODO(robinson): This probably needs to be thread-safe(?),1
v0.6.3,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.6.3,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.6.3,TODO(robinson): Support iteritems()-style iteration over all,1
v0.6.3,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.6.3,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.6.3,TODO(robinson): Firmly spec out and test how,1
v0.6.3,TODO(mattp): would testing more scalar types strengthen test?,1
v0.6.3,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.6.3,class has not been accessed directly.  This was once a bug with lite,1
v0.6.3,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.6.3,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.6.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.3,Imagine how much simpler this code would be if Java iterators had,1
v0.6.3,"TODO(xiangl): Taken care of following code, it may cause",1
v0.6.3,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.6.3,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.6.3,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.6.3,TODO(kenton):  This could be optimized in a number of ways.,1
v0.6.3,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.6.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.3,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.6.3,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.6.3,TODO(xiangl): need implementation for dynamic message,1
v0.6.3,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.6.3,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.6.3,Imagine how much simpler this code would be if Java iterators had,1
v0.6.3,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.6.3,TODO(xiangl): it looks like this method can only be invoked by,1
v0.6.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.3,TODO: error handling,1
v0.6.2,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.6.2,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.6.2,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.6.2,There are three ways we might decide not to print an error message:,1
v0.6.2,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.6.2,get rid of /* ... */,1
v0.6.2,TODO(unknown): We always want to check end of namespace comments,1
v0.6.2,"TODO(unknown): unexpected #else, issue warning?",1
v0.6.2,"TODO(unknown): unexpected #endif, issue warning?",1
v0.6.2,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.6.2,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.6.2,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.6.2,google code and would have been easier to implement.  This is because,1
v0.6.2,"the redundant semicolon, output warning here.",1
v0.6.2,it provides a way to workaround this warning for people who use,1
v0.6.2,TODO(unknown): remove this once cpplint has better support for,1
v0.6.2,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.6.2,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.6.2,This is dangerous because the C++ language does not guarantee that,1
v0.6.2,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.6.2,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.6.2,TODO(unknown): catch out-of-line unary operator&:,1
v0.6.2,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.6.2,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.6.2,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.6.2,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.6.2,TODO: following test fails randomly on some boxes,1
v0.6.2,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.6.2,TODO: The connections should be killed instead.,1
v0.6.2,TODO: handle the situation when the peer changes its identity.,1
v0.6.2,TODO: Do we want to limit number of commands I/O thread can,1
v0.6.2,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.6.2,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.6.2,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.6.2,Work around problem that other threads might still be in our,1
v0.6.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.2,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.6.2,TODO: The connections should be killed instead.,1
v0.6.2,TODO: This can result in infinite loop in the case of continuous,1
v0.6.2,TODO: This can result in infinite loop in the case of continuous,1
v0.6.2,TODO: Failing this check should also close the connection with the peer!,1
v0.6.2,TODO: Duplicates should be removed here.,1
v0.6.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.2,TODO: This is not a generic way to handle this...,1
v0.6.2,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.6.2,TODO: Should this go into pipe_t::terminate ?,1
v0.6.2,TODO: this function has no man page,1
v0.6.2,TODO: Build in a notification mechanism to report the overflows.,1
v0.6.2,TODO: this function has no man page,1
v0.6.2,TODO: This loop can effectively block other engines in the same I/O,1
v0.6.2,Note the workaround made not to break strict-aliasing rules.,1
v0.6.2,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.6.2,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.6.2,TODO(robinson): Document these fields and methods.,1
v0.6.2,TODO(robinson): MergeFromString() should probably return None and be,1
v0.6.2,TODO(robinson): Decide whether we like these better,1
v0.6.2,TODO(robinson): Be sure to document (and test) exactly,1
v0.6.2,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.6.2,"TODO(robinson): We should have aggressive checking here,",1
v0.6.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.2,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.6.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.2,A previous version had a bug where this would raise an exception when,1
v0.6.2,TODO(robinson): Test all other scalar field types.,1
v0.6.2,TODO(robinson): Test all other scalar field types.,1
v0.6.2,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.6.2,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.6.2,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.6.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.2,TODO(robinson): Remove duplication with similar method,1
v0.6.2,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.6.2,TODO(robinson): This probably needs to be thread-safe(?),1
v0.6.2,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.6.2,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.6.2,TODO(robinson): Support iteritems()-style iteration over all,1
v0.6.2,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.6.2,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.6.2,TODO(robinson): Firmly spec out and test how,1
v0.6.2,TODO(mattp): would testing more scalar types strengthen test?,1
v0.6.2,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.6.2,class has not been accessed directly.  This was once a bug with lite,1
v0.6.2,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.6.2,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.6.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.2,Imagine how much simpler this code would be if Java iterators had,1
v0.6.2,"TODO(xiangl): Taken care of following code, it may cause",1
v0.6.2,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.6.2,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.6.2,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.6.2,TODO(kenton):  This could be optimized in a number of ways.,1
v0.6.2,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.6.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.2,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.6.2,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.6.2,TODO(xiangl): need implementation for dynamic message,1
v0.6.2,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.6.2,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.6.2,Imagine how much simpler this code would be if Java iterators had,1
v0.6.2,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.6.2,TODO(xiangl): it looks like this method can only be invoked by,1
v0.6.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.2,TODO: error handling,1
v0.6.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.6.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.6.1,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.6.1,There are three ways we might decide not to print an error message:,1
v0.6.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.6.1,get rid of /* ... */,1
v0.6.1,TODO(unknown): We always want to check end of namespace comments,1
v0.6.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.6.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.6.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.6.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.6.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.6.1,google code and would have been easier to implement.  This is because,1
v0.6.1,"the redundant semicolon, output warning here.",1
v0.6.1,it provides a way to workaround this warning for people who use,1
v0.6.1,TODO(unknown): remove this once cpplint has better support for,1
v0.6.1,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.6.1,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.6.1,This is dangerous because the C++ language does not guarantee that,1
v0.6.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.6.1,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.6.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.6.1,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.6.1,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.6.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.6.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.6.1,TODO: following test fails randomly on some boxes,1
v0.6.1,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.6.1,TODO: The connections should be killed instead.,1
v0.6.1,TODO: handle the situation when the peer changes its identity.,1
v0.6.1,TODO: Do we want to limit number of commands I/O thread can,1
v0.6.1,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.6.1,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.6.1,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.6.1,Work around problem that other threads might still be in our,1
v0.6.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.1,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.6.1,TODO: The connections should be killed instead.,1
v0.6.1,TODO: This can result in infinite loop in the case of continuous,1
v0.6.1,TODO: This can result in infinite loop in the case of continuous,1
v0.6.1,TODO: Failing this check should also close the connection with the peer!,1
v0.6.1,TODO: Duplicates should be removed here.,1
v0.6.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.1,TODO: This is not a generic way to handle this...,1
v0.6.1,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.6.1,TODO: Should this go into pipe_t::terminate ?,1
v0.6.1,TODO: this function has no man page,1
v0.6.1,TODO: Build in a notification mechanism to report the overflows.,1
v0.6.1,TODO: this function has no man page,1
v0.6.1,TODO: This loop can effectively block other engines in the same I/O,1
v0.6.1,Note the workaround made not to break strict-aliasing rules.,1
v0.6.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.6.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.6.1,TODO(robinson): Document these fields and methods.,1
v0.6.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.6.1,TODO(robinson): Decide whether we like these better,1
v0.6.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.6.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.6.1,"TODO(robinson): We should have aggressive checking here,",1
v0.6.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.1,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.6.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.1,A previous version had a bug where this would raise an exception when,1
v0.6.1,TODO(robinson): Test all other scalar field types.,1
v0.6.1,TODO(robinson): Test all other scalar field types.,1
v0.6.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.6.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.6.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.6.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.1,TODO(robinson): Remove duplication with similar method,1
v0.6.1,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.6.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.6.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.6.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.6.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.6.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.6.1,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.6.1,TODO(robinson): Firmly spec out and test how,1
v0.6.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.6.1,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.6.1,class has not been accessed directly.  This was once a bug with lite,1
v0.6.1,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.6.1,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.6.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.1,Imagine how much simpler this code would be if Java iterators had,1
v0.6.1,"TODO(xiangl): Taken care of following code, it may cause",1
v0.6.1,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.6.1,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.6.1,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.6.1,TODO(kenton):  This could be optimized in a number of ways.,1
v0.6.1,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.6.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.1,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.6.1,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.6.1,TODO(xiangl): need implementation for dynamic message,1
v0.6.1,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.6.1,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.6.1,Imagine how much simpler this code would be if Java iterators had,1
v0.6.1,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.6.1,TODO(xiangl): it looks like this method can only be invoked by,1
v0.6.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.1,TODO: error handling,1
v0.6.0,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.6.0,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.6.0,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.6.0,There are three ways we might decide not to print an error message:,1
v0.6.0,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.6.0,get rid of /* ... */,1
v0.6.0,TODO(unknown): We always want to check end of namespace comments,1
v0.6.0,"TODO(unknown): unexpected #else, issue warning?",1
v0.6.0,"TODO(unknown): unexpected #endif, issue warning?",1
v0.6.0,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.6.0,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.6.0,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.6.0,google code and would have been easier to implement.  This is because,1
v0.6.0,"the redundant semicolon, output warning here.",1
v0.6.0,it provides a way to workaround this warning for people who use,1
v0.6.0,TODO(unknown): remove this once cpplint has better support for,1
v0.6.0,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.6.0,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.6.0,This is dangerous because the C++ language does not guarantee that,1
v0.6.0,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.6.0,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.6.0,TODO(unknown): catch out-of-line unary operator&:,1
v0.6.0,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.6.0,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.6.0,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.6.0,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.6.0,TODO: following test fails randomly on some boxes,1
v0.6.0,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.6.0,TODO: The connections should be killed instead.,1
v0.6.0,TODO: handle the situation when the peer changes its identity.,1
v0.6.0,TODO: Do we want to limit number of commands I/O thread can,1
v0.6.0,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.6.0,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.6.0,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.6.0,Work around problem that other threads might still be in our,1
v0.6.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.0,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.6.0,TODO: The connections should be killed instead.,1
v0.6.0,TODO: This can result in infinite loop in the case of continuous,1
v0.6.0,TODO: This can result in infinite loop in the case of continuous,1
v0.6.0,TODO: Failing this check should also close the connection with the peer!,1
v0.6.0,TODO: Duplicates should be removed here.,1
v0.6.0,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.6.0,TODO: This is not a generic way to handle this...,1
v0.6.0,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.6.0,TODO: Should this go into pipe_t::terminate ?,1
v0.6.0,TODO: this function has no man page,1
v0.6.0,TODO: Build in a notification mechanism to report the overflows.,1
v0.6.0,TODO: this function has no man page,1
v0.6.0,TODO: This loop can effectively block other engines in the same I/O,1
v0.6.0,Note the workaround made not to break strict-aliasing rules.,1
v0.6.0,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.6.0,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.6.0,TODO(robinson): Document these fields and methods.,1
v0.6.0,TODO(robinson): MergeFromString() should probably return None and be,1
v0.6.0,TODO(robinson): Decide whether we like these better,1
v0.6.0,TODO(robinson): Be sure to document (and test) exactly,1
v0.6.0,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.6.0,"TODO(robinson): We should have aggressive checking here,",1
v0.6.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.0,TODO(robinson): Find a way to eliminate this repetition.,1
v0.6.0,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.6.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.0,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.6.0,A previous version had a bug where this would raise an exception when,1
v0.6.0,TODO(robinson): Test all other scalar field types.,1
v0.6.0,TODO(robinson): Test all other scalar field types.,1
v0.6.0,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.6.0,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.6.0,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.6.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.0,TODO(protobuf-team): This may be broken since there may not be,1
v0.6.0,TODO(robinson): Remove duplication with similar method,1
v0.6.0,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.6.0,TODO(robinson): This probably needs to be thread-safe(?),1
v0.6.0,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.6.0,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.6.0,TODO(robinson): Support iteritems()-style iteration over all,1
v0.6.0,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.6.0,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.6.0,TODO(robinson): Firmly spec out and test how,1
v0.6.0,TODO(mattp): would testing more scalar types strengthen test?,1
v0.6.0,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.6.0,class has not been accessed directly.  This was once a bug with lite,1
v0.6.0,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.6.0,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.6.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.0,Imagine how much simpler this code would be if Java iterators had,1
v0.6.0,"TODO(xiangl): Taken care of following code, it may cause",1
v0.6.0,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.6.0,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.6.0,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.6.0,TODO(kenton):  This could be optimized in a number of ways.,1
v0.6.0,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.6.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.0,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.6.0,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.6.0,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.6.0,TODO(xiangl): need implementation for dynamic message,1
v0.6.0,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.6.0,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.6.0,Imagine how much simpler this code would be if Java iterators had,1
v0.6.0,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.6.0,TODO(xiangl): it looks like this method can only be invoked by,1
v0.6.0,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.6.0,TODO: error handling,1
v0.5.9,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.9,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.9,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.9,There are three ways we might decide not to print an error message:,1
v0.5.9,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.9,get rid of /* ... */,1
v0.5.9,TODO(unknown): We always want to check end of namespace comments,1
v0.5.9,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.9,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.9,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.9,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.9,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.9,google code and would have been easier to implement.  This is because,1
v0.5.9,"the redundant semicolon, output warning here.",1
v0.5.9,it provides a way to workaround this warning for people who use,1
v0.5.9,TODO(unknown): remove this once cpplint has better support for,1
v0.5.9,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.9,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.9,This is dangerous because the C++ language does not guarantee that,1
v0.5.9,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.9,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.9,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.9,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.9,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.9,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.9,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.9,TODO: following test fails randomly on some boxes,1
v0.5.9,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.9,TODO: The connections should be killed instead.,1
v0.5.9,TODO: handle the situation when the peer changes its identity.,1
v0.5.9,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.9,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.9,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.9,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.9,Work around problem that other threads might still be in our,1
v0.5.9,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.9,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.9,TODO: The connections should be killed instead.,1
v0.5.9,TODO: This can result in infinite loop in the case of continuous,1
v0.5.9,TODO: This can result in infinite loop in the case of continuous,1
v0.5.9,TODO: Failing this check should also close the connection with the peer!,1
v0.5.9,TODO: Duplicates should be removed here.,1
v0.5.9,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.9,TODO: This is not a generic way to handle this...,1
v0.5.9,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.9,TODO: Should this go into pipe_t::terminate ?,1
v0.5.9,TODO: this function has no man page,1
v0.5.9,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.9,TODO: this function has no man page,1
v0.5.9,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.9,Note the workaround made not to break strict-aliasing rules.,1
v0.5.9,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.9,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.9,TODO(robinson): Document these fields and methods.,1
v0.5.9,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.9,TODO(robinson): Decide whether we like these better,1
v0.5.9,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.9,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.9,"TODO(robinson): We should have aggressive checking here,",1
v0.5.9,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.9,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.9,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.9,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.9,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.9,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.9,A previous version had a bug where this would raise an exception when,1
v0.5.9,TODO(robinson): Test all other scalar field types.,1
v0.5.9,TODO(robinson): Test all other scalar field types.,1
v0.5.9,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.9,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.9,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.9,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.9,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.9,TODO(robinson): Remove duplication with similar method,1
v0.5.9,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.9,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.9,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.9,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.9,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.9,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.9,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.9,TODO(robinson): Firmly spec out and test how,1
v0.5.9,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.9,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.9,class has not been accessed directly.  This was once a bug with lite,1
v0.5.9,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.9,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.9,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.9,Imagine how much simpler this code would be if Java iterators had,1
v0.5.9,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.9,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.9,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.9,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.9,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.9,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.9,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.9,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.9,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.9,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.9,TODO(xiangl): need implementation for dynamic message,1
v0.5.9,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.9,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.9,Imagine how much simpler this code would be if Java iterators had,1
v0.5.9,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.9,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.9,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.9,TODO: error handling,1
v0.5.8,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.8,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.8,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.8,There are three ways we might decide not to print an error message:,1
v0.5.8,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.8,get rid of /* ... */,1
v0.5.8,TODO(unknown): We always want to check end of namespace comments,1
v0.5.8,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.8,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.8,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.8,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.8,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.8,google code and would have been easier to implement.  This is because,1
v0.5.8,"the redundant semicolon, output warning here.",1
v0.5.8,it provides a way to workaround this warning for people who use,1
v0.5.8,TODO(unknown): remove this once cpplint has better support for,1
v0.5.8,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.8,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.8,This is dangerous because the C++ language does not guarantee that,1
v0.5.8,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.8,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.8,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.8,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.8,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.8,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.8,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.8,TODO: following test fails randomly on some boxes,1
v0.5.8,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.8,TODO: The connections should be killed instead.,1
v0.5.8,TODO: handle the situation when the peer changes its identity.,1
v0.5.8,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.8,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.8,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.8,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.8,Work around problem that other threads might still be in our,1
v0.5.8,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.8,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.8,TODO: The connections should be killed instead.,1
v0.5.8,TODO: This can result in infinite loop in the case of continuous,1
v0.5.8,TODO: This can result in infinite loop in the case of continuous,1
v0.5.8,TODO: Failing this check should also close the connection with the peer!,1
v0.5.8,TODO: Duplicates should be removed here.,1
v0.5.8,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.8,TODO: This is not a generic way to handle this...,1
v0.5.8,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.8,TODO: Should this go into pipe_t::terminate ?,1
v0.5.8,TODO: this function has no man page,1
v0.5.8,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.8,TODO: this function has no man page,1
v0.5.8,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.8,Note the workaround made not to break strict-aliasing rules.,1
v0.5.8,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.8,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.8,TODO(robinson): Document these fields and methods.,1
v0.5.8,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.8,TODO(robinson): Decide whether we like these better,1
v0.5.8,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.8,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.8,"TODO(robinson): We should have aggressive checking here,",1
v0.5.8,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.8,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.8,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.8,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.8,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.8,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.8,A previous version had a bug where this would raise an exception when,1
v0.5.8,TODO(robinson): Test all other scalar field types.,1
v0.5.8,TODO(robinson): Test all other scalar field types.,1
v0.5.8,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.8,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.8,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.8,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.8,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.8,TODO(robinson): Remove duplication with similar method,1
v0.5.8,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.8,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.8,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.8,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.8,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.8,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.8,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.8,TODO(robinson): Firmly spec out and test how,1
v0.5.8,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.8,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.8,class has not been accessed directly.  This was once a bug with lite,1
v0.5.8,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.8,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.8,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.8,Imagine how much simpler this code would be if Java iterators had,1
v0.5.8,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.8,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.8,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.8,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.8,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.8,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.8,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.8,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.8,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.8,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.8,TODO(xiangl): need implementation for dynamic message,1
v0.5.8,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.8,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.8,Imagine how much simpler this code would be if Java iterators had,1
v0.5.8,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.8,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.8,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.8,TODO: error handling,1
v0.5.7,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.7,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.7,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.7,There are three ways we might decide not to print an error message:,1
v0.5.7,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.7,get rid of /* ... */,1
v0.5.7,TODO(unknown): We always want to check end of namespace comments,1
v0.5.7,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.7,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.7,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.7,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.7,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.7,google code and would have been easier to implement.  This is because,1
v0.5.7,"the redundant semicolon, output warning here.",1
v0.5.7,it provides a way to workaround this warning for people who use,1
v0.5.7,TODO(unknown): remove this once cpplint has better support for,1
v0.5.7,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.7,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.7,This is dangerous because the C++ language does not guarantee that,1
v0.5.7,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.7,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.7,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.7,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.7,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.7,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.7,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.7,TODO: following test fails randomly on some boxes,1
v0.5.7,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.7,TODO: The connections should be killed instead.,1
v0.5.7,TODO: handle the situation when the peer changes its identity.,1
v0.5.7,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.7,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.7,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.7,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.7,Work around problem that other threads might still be in our,1
v0.5.7,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.7,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.7,TODO: The connections should be killed instead.,1
v0.5.7,TODO: This can result in infinite loop in the case of continuous,1
v0.5.7,TODO: This can result in infinite loop in the case of continuous,1
v0.5.7,TODO: Failing this check should also close the connection with the peer!,1
v0.5.7,TODO: Duplicates should be removed here.,1
v0.5.7,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.7,TODO: This is not a generic way to handle this...,1
v0.5.7,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.7,TODO: Should this go into pipe_t::terminate ?,1
v0.5.7,TODO: this function has no man page,1
v0.5.7,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.7,TODO: this function has no man page,1
v0.5.7,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.7,Note the workaround made not to break strict-aliasing rules.,1
v0.5.7,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.7,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.7,TODO(robinson): Document these fields and methods.,1
v0.5.7,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.7,TODO(robinson): Decide whether we like these better,1
v0.5.7,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.7,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.7,"TODO(robinson): We should have aggressive checking here,",1
v0.5.7,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.7,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.7,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.7,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.7,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.7,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.7,A previous version had a bug where this would raise an exception when,1
v0.5.7,TODO(robinson): Test all other scalar field types.,1
v0.5.7,TODO(robinson): Test all other scalar field types.,1
v0.5.7,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.7,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.7,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.7,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.7,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.7,TODO(robinson): Remove duplication with similar method,1
v0.5.7,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.7,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.7,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.7,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.7,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.7,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.7,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.7,TODO(robinson): Firmly spec out and test how,1
v0.5.7,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.7,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.7,class has not been accessed directly.  This was once a bug with lite,1
v0.5.7,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.7,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.7,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.7,Imagine how much simpler this code would be if Java iterators had,1
v0.5.7,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.7,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.7,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.7,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.7,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.7,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.7,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.7,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.7,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.7,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.7,TODO(xiangl): need implementation for dynamic message,1
v0.5.7,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.7,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.7,Imagine how much simpler this code would be if Java iterators had,1
v0.5.7,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.7,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.7,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.7,TODO: error handling,1
v0.5.6,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.6,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.6,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.6,There are three ways we might decide not to print an error message:,1
v0.5.6,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.6,get rid of /* ... */,1
v0.5.6,TODO(unknown): We always want to check end of namespace comments,1
v0.5.6,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.6,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.6,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.6,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.6,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.6,google code and would have been easier to implement.  This is because,1
v0.5.6,"the redundant semicolon, output warning here.",1
v0.5.6,it provides a way to workaround this warning for people who use,1
v0.5.6,TODO(unknown): remove this once cpplint has better support for,1
v0.5.6,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.6,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.6,This is dangerous because the C++ language does not guarantee that,1
v0.5.6,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.6,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.6,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.6,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.6,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.6,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.6,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.6,TODO: following test fails randomly on some boxes,1
v0.5.6,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.6,TODO: The connections should be killed instead.,1
v0.5.6,TODO: handle the situation when the peer changes its identity.,1
v0.5.6,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.6,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.6,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.6,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.6,Work around problem that other threads might still be in our,1
v0.5.6,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.6,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.6,TODO: The connections should be killed instead.,1
v0.5.6,TODO: This can result in infinite loop in the case of continuous,1
v0.5.6,TODO: This can result in infinite loop in the case of continuous,1
v0.5.6,TODO: Failing this check should also close the connection with the peer!,1
v0.5.6,TODO: Duplicates should be removed here.,1
v0.5.6,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.6,TODO: This is not a generic way to handle this...,1
v0.5.6,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.6,TODO: Should this go into pipe_t::terminate ?,1
v0.5.6,TODO: this function has no man page,1
v0.5.6,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.6,TODO: this function has no man page,1
v0.5.6,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.6,Note the workaround made not to break strict-aliasing rules.,1
v0.5.6,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.6,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.6,TODO(robinson): Document these fields and methods.,1
v0.5.6,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.6,TODO(robinson): Decide whether we like these better,1
v0.5.6,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.6,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.6,"TODO(robinson): We should have aggressive checking here,",1
v0.5.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.6,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.6,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.6,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.6,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.6,A previous version had a bug where this would raise an exception when,1
v0.5.6,TODO(robinson): Test all other scalar field types.,1
v0.5.6,TODO(robinson): Test all other scalar field types.,1
v0.5.6,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.6,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.6,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.6,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.6,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.6,TODO(robinson): Remove duplication with similar method,1
v0.5.6,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.6,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.6,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.6,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.6,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.6,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.6,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.6,TODO(robinson): Firmly spec out and test how,1
v0.5.6,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.6,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.6,class has not been accessed directly.  This was once a bug with lite,1
v0.5.6,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.6,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.6,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.6,Imagine how much simpler this code would be if Java iterators had,1
v0.5.6,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.6,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.6,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.6,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.6,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.6,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.6,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.6,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.6,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.6,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.6,TODO(xiangl): need implementation for dynamic message,1
v0.5.6,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.6,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.6,Imagine how much simpler this code would be if Java iterators had,1
v0.5.6,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.6,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.6,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.6,TODO: error handling,1
v0.5.5,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.5,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.5,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.5,There are three ways we might decide not to print an error message:,1
v0.5.5,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.5,get rid of /* ... */,1
v0.5.5,TODO(unknown): We always want to check end of namespace comments,1
v0.5.5,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.5,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.5,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.5,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.5,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.5,google code and would have been easier to implement.  This is because,1
v0.5.5,"the redundant semicolon, output warning here.",1
v0.5.5,it provides a way to workaround this warning for people who use,1
v0.5.5,TODO(unknown): remove this once cpplint has better support for,1
v0.5.5,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.5,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.5,This is dangerous because the C++ language does not guarantee that,1
v0.5.5,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.5,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.5,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.5,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.5,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.5,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.5,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.5,TODO: following test fails randomly on some boxes,1
v0.5.5,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.5,TODO: The connections should be killed instead.,1
v0.5.5,TODO: handle the situation when the peer changes its identity.,1
v0.5.5,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.5,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.5,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.5,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.5,Work around problem that other threads might still be in our,1
v0.5.5,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.5,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.5,TODO: The connections should be killed instead.,1
v0.5.5,TODO: This can result in infinite loop in the case of continuous,1
v0.5.5,TODO: This can result in infinite loop in the case of continuous,1
v0.5.5,TODO: Failing this check should also close the connection with the peer!,1
v0.5.5,TODO: Duplicates should be removed here.,1
v0.5.5,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.5,TODO: This is not a generic way to handle this...,1
v0.5.5,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.5,TODO: Should this go into pipe_t::terminate ?,1
v0.5.5,TODO: this function has no man page,1
v0.5.5,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.5,TODO: this function has no man page,1
v0.5.5,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.5,Note the workaround made not to break strict-aliasing rules.,1
v0.5.5,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.5,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.5,TODO(robinson): Document these fields and methods.,1
v0.5.5,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.5,TODO(robinson): Decide whether we like these better,1
v0.5.5,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.5,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.5,"TODO(robinson): We should have aggressive checking here,",1
v0.5.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.5,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.5,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.5,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.5,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.5,A previous version had a bug where this would raise an exception when,1
v0.5.5,TODO(robinson): Test all other scalar field types.,1
v0.5.5,TODO(robinson): Test all other scalar field types.,1
v0.5.5,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.5,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.5,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.5,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.5,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.5,TODO(robinson): Remove duplication with similar method,1
v0.5.5,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.5,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.5,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.5,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.5,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.5,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.5,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.5,TODO(robinson): Firmly spec out and test how,1
v0.5.5,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.5,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.5,class has not been accessed directly.  This was once a bug with lite,1
v0.5.5,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.5,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.5,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.5,Imagine how much simpler this code would be if Java iterators had,1
v0.5.5,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.5,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.5,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.5,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.5,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.5,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.5,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.5,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.5,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.5,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.5,TODO(xiangl): need implementation for dynamic message,1
v0.5.5,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.5,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.5,Imagine how much simpler this code would be if Java iterators had,1
v0.5.5,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.5,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.5,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.5,TODO: error handling,1
v0.5.4,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.4,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.4,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.4,There are three ways we might decide not to print an error message:,1
v0.5.4,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.4,get rid of /* ... */,1
v0.5.4,TODO(unknown): We always want to check end of namespace comments,1
v0.5.4,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.4,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.4,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.4,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.4,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.4,google code and would have been easier to implement.  This is because,1
v0.5.4,"the redundant semicolon, output warning here.",1
v0.5.4,it provides a way to workaround this warning for people who use,1
v0.5.4,TODO(unknown): remove this once cpplint has better support for,1
v0.5.4,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.4,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.4,This is dangerous because the C++ language does not guarantee that,1
v0.5.4,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.4,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.4,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.4,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.4,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.4,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.4,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.4,TODO: following test fails randomly on some boxes,1
v0.5.4,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.4,TODO: The connections should be killed instead.,1
v0.5.4,TODO: handle the situation when the peer changes its identity.,1
v0.5.4,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.4,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.4,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.4,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.4,Work around problem that other threads might still be in our,1
v0.5.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.4,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.4,TODO: The connections should be killed instead.,1
v0.5.4,TODO: This can result in infinite loop in the case of continuous,1
v0.5.4,TODO: This can result in infinite loop in the case of continuous,1
v0.5.4,TODO: Failing this check should also close the connection with the peer!,1
v0.5.4,TODO: Duplicates should be removed here.,1
v0.5.4,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.4,TODO: This is not a generic way to handle this...,1
v0.5.4,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.4,TODO: Should this go into pipe_t::terminate ?,1
v0.5.4,TODO: this function has no man page,1
v0.5.4,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.4,TODO: this function has no man page,1
v0.5.4,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.4,Note the workaround made not to break strict-aliasing rules.,1
v0.5.4,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.4,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.4,TODO(robinson): Document these fields and methods.,1
v0.5.4,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.4,TODO(robinson): Decide whether we like these better,1
v0.5.4,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.4,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.4,"TODO(robinson): We should have aggressive checking here,",1
v0.5.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.4,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.4,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.4,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.4,A previous version had a bug where this would raise an exception when,1
v0.5.4,TODO(robinson): Test all other scalar field types.,1
v0.5.4,TODO(robinson): Test all other scalar field types.,1
v0.5.4,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.4,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.4,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.4,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.4,TODO(robinson): Remove duplication with similar method,1
v0.5.4,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.4,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.4,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.4,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.4,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.4,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.4,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.4,TODO(robinson): Firmly spec out and test how,1
v0.5.4,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.4,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.4,class has not been accessed directly.  This was once a bug with lite,1
v0.5.4,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.4,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.4,Imagine how much simpler this code would be if Java iterators had,1
v0.5.4,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.4,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.4,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.4,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.4,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.4,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.4,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.4,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.4,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.4,TODO(xiangl): need implementation for dynamic message,1
v0.5.4,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.4,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.4,Imagine how much simpler this code would be if Java iterators had,1
v0.5.4,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.4,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.4,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.4,TODO: error handling,1
v0.5.3,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.3,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.3,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.3,There are three ways we might decide not to print an error message:,1
v0.5.3,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.3,get rid of /* ... */,1
v0.5.3,TODO(unknown): We always want to check end of namespace comments,1
v0.5.3,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.3,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.3,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.3,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.3,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.3,google code and would have been easier to implement.  This is because,1
v0.5.3,"the redundant semicolon, output warning here.",1
v0.5.3,it provides a way to workaround this warning for people who use,1
v0.5.3,TODO(unknown): remove this once cpplint has better support for,1
v0.5.3,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.3,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.3,This is dangerous because the C++ language does not guarantee that,1
v0.5.3,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.3,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.3,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.3,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.3,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.3,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.3,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.3,TODO: following test fails randomly on some boxes,1
v0.5.3,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.3,TODO: The connections should be killed instead.,1
v0.5.3,TODO: handle the situation when the peer changes its identity.,1
v0.5.3,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.3,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.3,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.3,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.3,Work around problem that other threads might still be in our,1
v0.5.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.3,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.3,TODO: The connections should be killed instead.,1
v0.5.3,TODO: This can result in infinite loop in the case of continuous,1
v0.5.3,TODO: This can result in infinite loop in the case of continuous,1
v0.5.3,TODO: Failing this check should also close the connection with the peer!,1
v0.5.3,TODO: Duplicates should be removed here.,1
v0.5.3,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.3,TODO: This is not a generic way to handle this...,1
v0.5.3,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.3,TODO: Should this go into pipe_t::terminate ?,1
v0.5.3,TODO: this function has no man page,1
v0.5.3,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.3,TODO: this function has no man page,1
v0.5.3,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.3,Note the workaround made not to break strict-aliasing rules.,1
v0.5.3,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.3,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.3,TODO(robinson): Document these fields and methods.,1
v0.5.3,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.3,TODO(robinson): Decide whether we like these better,1
v0.5.3,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.3,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.3,"TODO(robinson): We should have aggressive checking here,",1
v0.5.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.3,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.3,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.3,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.3,A previous version had a bug where this would raise an exception when,1
v0.5.3,TODO(robinson): Test all other scalar field types.,1
v0.5.3,TODO(robinson): Test all other scalar field types.,1
v0.5.3,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.3,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.3,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.3,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.3,TODO(robinson): Remove duplication with similar method,1
v0.5.3,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.3,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.3,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.3,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.3,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.3,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.3,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.3,TODO(robinson): Firmly spec out and test how,1
v0.5.3,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.3,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.3,class has not been accessed directly.  This was once a bug with lite,1
v0.5.3,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.3,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.3,Imagine how much simpler this code would be if Java iterators had,1
v0.5.3,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.3,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.3,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.3,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.3,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.3,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.3,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.3,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.3,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.3,TODO(xiangl): need implementation for dynamic message,1
v0.5.3,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.3,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.3,Imagine how much simpler this code would be if Java iterators had,1
v0.5.3,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.3,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.3,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.3,TODO: error handling,1
v0.5.2,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.2,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.2,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.2,There are three ways we might decide not to print an error message:,1
v0.5.2,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.2,get rid of /* ... */,1
v0.5.2,TODO(unknown): We always want to check end of namespace comments,1
v0.5.2,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.2,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.2,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.2,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.2,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.2,google code and would have been easier to implement.  This is because,1
v0.5.2,"the redundant semicolon, output warning here.",1
v0.5.2,it provides a way to workaround this warning for people who use,1
v0.5.2,TODO(unknown): remove this once cpplint has better support for,1
v0.5.2,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.2,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.2,This is dangerous because the C++ language does not guarantee that,1
v0.5.2,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.2,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.2,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.2,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.2,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.2,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.2,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.2,TODO: following test fails randomly on some boxes,1
v0.5.2,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.2,TODO: The connections should be killed instead.,1
v0.5.2,TODO: handle the situation when the peer changes its identity.,1
v0.5.2,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.2,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.2,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.2,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.2,Work around problem that other threads might still be in our,1
v0.5.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.2,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.2,TODO: The connections should be killed instead.,1
v0.5.2,TODO: This can result in infinite loop in the case of continuous,1
v0.5.2,TODO: This can result in infinite loop in the case of continuous,1
v0.5.2,TODO: Failing this check should also close the connection with the peer!,1
v0.5.2,TODO: Duplicates should be removed here.,1
v0.5.2,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.2,TODO: This is not a generic way to handle this...,1
v0.5.2,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.2,TODO: Should this go into pipe_t::terminate ?,1
v0.5.2,TODO: this function has no man page,1
v0.5.2,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.2,TODO: this function has no man page,1
v0.5.2,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.2,Note the workaround made not to break strict-aliasing rules.,1
v0.5.2,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.2,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.2,TODO(robinson): Document these fields and methods.,1
v0.5.2,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.2,TODO(robinson): Decide whether we like these better,1
v0.5.2,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.2,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.2,"TODO(robinson): We should have aggressive checking here,",1
v0.5.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.2,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.2,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.2,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.2,A previous version had a bug where this would raise an exception when,1
v0.5.2,TODO(robinson): Test all other scalar field types.,1
v0.5.2,TODO(robinson): Test all other scalar field types.,1
v0.5.2,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.2,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.2,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.2,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.2,TODO(robinson): Remove duplication with similar method,1
v0.5.2,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.2,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.2,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.2,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.2,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.2,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.2,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.2,TODO(robinson): Firmly spec out and test how,1
v0.5.2,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.2,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.2,class has not been accessed directly.  This was once a bug with lite,1
v0.5.2,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.2,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.2,Imagine how much simpler this code would be if Java iterators had,1
v0.5.2,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.2,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.2,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.2,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.2,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.2,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.2,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.2,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.2,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.2,TODO(xiangl): need implementation for dynamic message,1
v0.5.2,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.2,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.2,Imagine how much simpler this code would be if Java iterators had,1
v0.5.2,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.2,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.2,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.2,TODO: error handling,1
v0.5.1,here!  cpplint_unittest.py should tell you if you forget to do this.,1
v0.5.1,Replacement macros for CHECK/DCHECK/EXPECT_TRUE/EXPECT_FALSE,1
v0.5.1,"FIXME(adonovan): ""NOLINT("" is misparsed as NOLINT(*).",1
v0.5.1,There are three ways we might decide not to print an error message:,1
v0.5.1,"TODO(unknown): if delimiter is not None here, we might want to",1
v0.5.1,get rid of /* ... */,1
v0.5.1,TODO(unknown): We always want to check end of namespace comments,1
v0.5.1,"TODO(unknown): unexpected #else, issue warning?",1
v0.5.1,"TODO(unknown): unexpected #endif, issue warning?",1
v0.5.1,"TODO(unknown): Could it be expanded safely to arbitrary references,",1
v0.5.1,"TODO(unknown): Don't complain if line before blank line, and line after,",1
v0.5.1,TODO(unknown): clarify if 'if (1) { return 1;}' is requires one more,1
v0.5.1,google code and would have been easier to implement.  This is because,1
v0.5.1,"the redundant semicolon, output warning here.",1
v0.5.1,it provides a way to workaround this warning for people who use,1
v0.5.1,TODO(unknown): remove this once cpplint has better support for,1
v0.5.1,TODO(sugawarayu): Audit cpplint.py to see what places could be profitably,1
v0.5.1,TODO(unknown): figure out if they're using default arguments in fn proto.,1
v0.5.1,This is dangerous because the C++ language does not guarantee that,1
v0.5.1,TODO(unknown): check that 1-arg constructors are explicit.,1
v0.5.1,TODO(unknown): check that classes have DISALLOW_EVIL_CONSTRUCTORS,1
v0.5.1,TODO(unknown): catch out-of-line unary operator&:,1
v0.5.1,TODO(sugawarayu): Catch the following case. Need to change the calling,1
v0.5.1,TODO(unknwon): Doesn't account for preprocessor directives.,1
v0.5.1,TODO(unknown): Doesn't account for 'catch(Exception& e)' [rare].,1
v0.5.1,TODO(unknown): Do a better job of finding .h files so we are confident that,1
v0.5.1,TODO: following test fails randomly on some boxes,1
v0.5.1,TODO: Shouldn't an error be reported if the key does not exist?,1
v0.5.1,TODO: The connections should be killed instead.,1
v0.5.1,TODO: handle the situation when the peer changes its identity.,1
v0.5.1,TODO: Do we want to limit number of commands I/O thread can,1
v0.5.1,"TODO: Unused parameter, IPv6 support not implemented for Solaris.",1
v0.5.1,"TODO: Unused parameter, IPv6 support not implemented for AIX or HP/UX.",1
v0.5.1,TODO: Retrieve and deallocate commands inside the cpipe.,1
v0.5.1,Work around problem that other threads might still be in our,1
v0.5.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.1,"So, lets use GetTickCount when GetTickCount64 is not available with an workaround",1
v0.5.1,TODO: The connections should be killed instead.,1
v0.5.1,TODO: This can result in infinite loop in the case of continuous,1
v0.5.1,TODO: This can result in infinite loop in the case of continuous,1
v0.5.1,TODO: Failing this check should also close the connection with the peer!,1
v0.5.1,TODO: Duplicates should be removed here.,1
v0.5.1,TODO: Handle specific errors like ENFILE/EMFILE etc.,1
v0.5.1,TODO: This is not a generic way to handle this...,1
v0.5.1,TODO:  It seems that list of Windows socket errors is longer than this.,1
v0.5.1,TODO: Should this go into pipe_t::terminate ?,1
v0.5.1,TODO: this function has no man page,1
v0.5.1,TODO: Build in a notification mechanism to report the overflows.,1
v0.5.1,TODO: this function has no man page,1
v0.5.1,TODO: This loop can effectively block other engines in the same I/O,1
v0.5.1,Note the workaround made not to break strict-aliasing rules.,1
v0.5.1,"This is used to hack around the mixin/inheritance of MockAnything, which",1
v0.5.1,"TODO(robinson): We should just make these methods all ""pure-virtual"" and move",1
v0.5.1,TODO(robinson): Document these fields and methods.,1
v0.5.1,TODO(robinson): MergeFromString() should probably return None and be,1
v0.5.1,TODO(robinson): Decide whether we like these better,1
v0.5.1,TODO(robinson): Be sure to document (and test) exactly,1
v0.5.1,TODO(falk): Add function to calculate full_name instead of having it in,1
v0.5.1,"TODO(robinson): We should have aggressive checking here,",1
v0.5.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.1,TODO(robinson): Find a way to eliminate this repetition.,1
v0.5.1,TODO(protocol-devel): This is inefficient as it needs to generate a,1
v0.5.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.1,TODO(anuraag): Support clearing repeated message fields as well.,1
v0.5.1,A previous version had a bug where this would raise an exception when,1
v0.5.1,TODO(robinson): Test all other scalar field types.,1
v0.5.1,TODO(robinson): Test all other scalar field types.,1
v0.5.1,"TODO(robinson): Helpers for verbose, common checks like seeing if a",1
v0.5.1,"TODO(robinson): Escape Python keywords (e.g., yield), and test this support.",1
v0.5.1,TODO(kenton):  Remove this method entirely if/when everyone agrees with my,1
v0.5.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.1,TODO(protobuf-team): This may be broken since there may not be,1
v0.5.1,TODO(robinson): Remove duplication with similar method,1
v0.5.1,TODO(komarek): Can anyone explain to me why we cache the message_type this,1
v0.5.1,TODO(robinson): This probably needs to be thread-safe(?),1
v0.5.1,TODO(robinson): Move elsewhere?  This file is getting pretty ridiculous...,1
v0.5.1,"TODO(robinson): Unify error handling of ""unknown extension"" crap.",1
v0.5.1,TODO(robinson): Support iteritems()-style iteration over all,1
v0.5.1,TODO(robinson): Flesh this out considerably.  We focused on reflection_test.py,1
v0.5.1,TODO(gps): We really should test for the presense of the enum_opt1,1
v0.5.1,TODO(robinson): Firmly spec out and test how,1
v0.5.1,TODO(mattp): would testing more scalar types strengthen test?,1
v0.5.1,"We want to do the same thing with all exceptions. Not generally nice,",1
v0.5.1,class has not been accessed directly.  This was once a bug with lite,1
v0.5.1,"TODO(kenton):  Unlike other features of the lite library, extensions are",1
v0.5.1,TODO(ngd): Upgrade to using real #equals method once implemented,1
v0.5.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.1,Imagine how much simpler this code would be if Java iterators had,1
v0.5.1,"TODO(xiangl): Taken care of following code, it may cause",1
v0.5.1,TODO(kenton):  Find ways to avoid using Java reflection within this,1
v0.5.1,TODO(xiangl): Now we use a global flag to control whether enable lazy,1
v0.5.1,Hack:  We can't embed a raw byte array inside generated Java code,1
v0.5.1,TODO(kenton):  This could be optimized in a number of ways.,1
v0.5.1,TODO(xiangl): Refactory the API to support the exception thrown from,1
v0.5.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.1,"TODO(kenton):  Caller must do type checking here, I guess.",1
v0.5.1,"TODO(kenton):  When chaining calls to setField(), it can be hard to",1
v0.5.1,TODO(kenton):  Move static parsing and serialization methods into some,1
v0.5.1,TODO(xiangl): need implementation for dynamic message,1
v0.5.1,TODO(chrisn): See if working around java.io.Reader#read(CharBuffer),1
v0.5.1,TODO: Check that 0 <= code && code <= 0xFF.,1
v0.5.1,Imagine how much simpler this code would be if Java iterators had,1
v0.5.1,TODO(kenton):  Provide a function somewhere called makeDeepCopy(),1
v0.5.1,TODO(xiangl): it looks like this method can only be invoked by,1
v0.5.1,"TODO(kenton):  Use generics?  E.g. Builder<BuilderType extends Builder>, then",1
v0.5.1,TODO: error handling,1
